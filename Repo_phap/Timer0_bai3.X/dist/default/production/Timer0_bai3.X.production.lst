

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 10 17:43:08 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291                           
   292                           	psect	strings
   293  0003                     __pstrings:
   294  0003                     stringtab:
   295  0003                     __stringtab:
   296  0003                     stringcode:	
   297                           ;	String table - string pointers are 1 byte each
   298                           
   299  0003                     stringdir:
   300  0003  3000               	movlw	high stringdir
   301  0004  008A               	movwf	10
   302  0005  0804               	movf	4,w
   303  0006  0A84               	incf	4,f
   304  0007  0782               	addwf	2,f
   305  0008                     __stringbase:
   306  0008  3400               	retlw	0
   307  0009                     __end_of__stringtab:
   308  0009                     main@special_name_title:
   309  0009  3400               	retlw	0
   310  000A  3404               	retlw	4
   311  000B  3408               	retlw	8
   312  000C  3400               	retlw	0
   313  000D  341C               	retlw	28
   314  000E  3414               	retlw	20
   315  000F  341E               	retlw	30
   316  0010  3400               	retlw	0
   317  0011  3408               	retlw	8
   318  0012  3404               	retlw	4
   319  0013  3400               	retlw	0
   320  0014  340C               	retlw	12
   321  0015  3412               	retlw	18
   322  0016  3412               	retlw	18
   323  0017  340F               	retlw	15
   324  0018  3400               	retlw	0
   325  0019  3408               	retlw	8
   326  001A  3414               	retlw	20
   327  001B  3400               	retlw	0
   328  001C  340C               	retlw	12
   329  001D  3414               	retlw	20
   330  001E  341F               	retlw	31
   331  001F  3408               	retlw	8
   332  0020  3400               	retlw	0
   333  0021  340D               	retlw	13
   334  0022  3412               	retlw	18
   335  0023  3408               	retlw	8
   336  0024  3414               	retlw	20
   337  0025  3408               	retlw	8
   338  0026  3414               	retlw	20
   339  0027  341E               	retlw	30
   340  0028  3400               	retlw	0
   341  0029  3401               	retlw	1
   342  002A  340A               	retlw	10
   343  002B  3414               	retlw	20
   344  002C  3400               	retlw	0
   345  002D  341C               	retlw	28
   346  002E  3414               	retlw	20
   347  002F  341F               	retlw	31
   348  0030  3400               	retlw	0
   349  0031  3499               	retlw	153
   350  0032                     __end_ofmain@special_name_title:
   351  0032                     main@your_name:
   352  0032  344E               	retlw	78
   353  0033  3467               	retlw	103
   354  0034  3475               	retlw	117
   355  0035  3479               	retlw	121
   356  0036  3403               	retlw	3
   357  0037  346E               	retlw	110
   358  0038  3420               	retlw	32
   359  0039  3454               	retlw	84
   360  003A  3404               	retlw	4
   361  003B  346E               	retlw	110
   362  003C  3420               	retlw	32
   363  003D  3450               	retlw	80
   364  003E  3468               	retlw	104
   365  003F  3400               	retlw	0
   366  0040  3470               	retlw	112
   367  0041  340A               	retlw	10
   368  0042                     __end_ofmain@your_name:
   369  0042                     main@title:
   370  0042  3442               	retlw	66
   371  0043  3401               	retlw	1
   372  0044  3469               	retlw	105
   373  0045  3420               	retlw	32
   374  0046  3454               	retlw	84
   375  0047  3402               	retlw	2
   376  0048  3470               	retlw	112
   377  0049  3420               	retlw	32
   378  004A  3454               	retlw	84
   379  004B  3469               	retlw	105
   380  004C  346D               	retlw	109
   381  004D  3465               	retlw	101
   382  004E  3472               	retlw	114
   383  004F  3420               	retlw	32
   384  0050  3430               	retlw	48
   385  0051  340A               	retlw	10
   386  0052                     __end_ofmain@title:
   387  0001                     _TMR0	set	1
   388  0044                     _RD4	set	68
   389  0045                     _RD5	set	69
   390  0046                     _RD6	set	70
   391  0047                     _RD7	set	71
   392  0043                     _RD3	set	67
   393  0041                     _RD1	set	65
   394  0042                     _RD2	set	66
   395  005D                     _TMR0IE	set	93
   396  005E                     _PEIE	set	94
   397  005F                     _GIE	set	95
   398  005A                     _TMR0IF	set	90
   399  0442                     _TRISD2	set	1090
   400  0441                     _TRISD1	set	1089
   401  0443                     _TRISD3	set	1091
   402  0447                     _TRISD7	set	1095
   403  0446                     _TRISD6	set	1094
   404  0445                     _TRISD5	set	1093
   405  0444                     _TRISD4	set	1092
   406  0408                     _PS0	set	1032
   407  0409                     _PS1	set	1033
   408  040A                     _PS2	set	1034
   409  040B                     _PSA	set	1035
   410  040D                     _T0CS	set	1037
   411                           
   412                           	psect	cinit
   413  07FC                     start_initialization:	
   414                           ; #config settings
   415                           
   416  07FC                     __initialization:
   417  07FC                     end_of_initialization:	
   418                           ;End of C runtime variable initialization code
   419                           
   420  07FC                     __end_of__initialization:
   421  07FC  0183               	clrf	3
   422  07FD  120A  118A  2F05   	ljmp	_main	;jump to C main() function
   423                           
   424                           	psect	cstackCOMMON
   425  0070                     __pcstackCOMMON:
   426  0070                     ?_lcd_busy:
   427  0070                     ??_lcd_busy:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_lcd_init:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_lcd_putc:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_lcd_ShiftRight:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_lcd_ShiftLeft:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_addCharSpecial:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_delay100us:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_main:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_lcd_put_nibble:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ??_lcd_put_nibble:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_getLengthArr:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     delay100us@n:	
   461                           ; 2 bytes @ 0x0
   462                           
   463                           
   464                           ; 2 bytes @ 0x0
   465  0070                     	ds	1
   466  0071                     lcd_busy@busy:
   467  0071                     lcd_put_nibble@b:	
   468                           ; 1 bytes @ 0x1
   469                           
   470                           
   471                           ; 1 bytes @ 0x1
   472  0071                     	ds	1
   473  0072                     ??_getLengthArr:
   474  0072                     ??_delay100us:	
   475                           ; 1 bytes @ 0x2
   476                           
   477  0072                     getLengthArr@character:	
   478                           ; 1 bytes @ 0x2
   479                           
   480  0072                     lcd_put_nibble@temp:	
   481                           ; 1 bytes @ 0x2
   482                           
   483                           
   484                           ; 1 bytes @ 0x2
   485  0072                     	ds	1
   486  0073                     ?_lcd_put_byte:
   487  0073                     lcd_put_byte@b:	
   488                           ; 1 bytes @ 0x3
   489                           
   490  0073                     getLengthArr@i:	
   491                           ; 1 bytes @ 0x3
   492                           
   493                           
   494                           ; 2 bytes @ 0x3
   495  0073                     	ds	1
   496  0074                     ??_lcd_put_byte:
   497                           
   498                           ; 1 bytes @ 0x4
   499  0074                     	ds	1
   500  0075                     lcd_put_byte@rs:
   501                           
   502                           ; 1 bytes @ 0x5
   503  0075                     	ds	1
   504  0076                     ??_lcd_init:
   505  0076                     ?_lcd_gotoxy:	
   506                           ; 1 bytes @ 0x6
   507                           
   508  0076                     ??_lcd_ShiftRight:	
   509                           ; 1 bytes @ 0x6
   510                           
   511  0076                     ??_lcd_ShiftLeft:	
   512                           ; 1 bytes @ 0x6
   513                           
   514  0076                     ??_addCharSpecial:	
   515                           ; 1 bytes @ 0x6
   516                           
   517  0076                     lcd_gotoxy@row:	
   518                           ; 1 bytes @ 0x6
   519                           
   520                           
   521                           ; 1 bytes @ 0x6
   522  0076                     	ds	1
   523  0077                     ??_lcd_gotoxy:
   524  0077                     addCharSpecial@i:	
   525                           ; 1 bytes @ 0x7
   526                           
   527                           
   528                           ; 2 bytes @ 0x7
   529  0077                     	ds	1
   530  0078                     lcd_gotoxy@col:
   531                           
   532                           ; 1 bytes @ 0x8
   533  0078                     	ds	1
   534  0079                     addCharSpecial@character:
   535  0079                     lcd_gotoxy@address:	
   536                           ; 1 bytes @ 0x9
   537                           
   538                           
   539                           ; 1 bytes @ 0x9
   540  0079                     	ds	1
   541  007A                     ??_lcd_putc:
   542                           
   543                           ; 1 bytes @ 0xA
   544  007A                     	ds	2
   545  007C                     lcd_putc@c:
   546                           
   547                           ; 1 bytes @ 0xC
   548  007C                     	ds	1
   549  007D                     ??_main:
   550                           
   551                           	psect	cstackBANK0
   552  0020                     __pcstackBANK0:	
   553                           ; 1 bytes @ 0xD
   554                           
   555  0020                     main@times:
   556                           
   557                           ; 2 bytes @ 0x0
   558  0020                     	ds	2
   559  0022                     main@length:
   560                           
   561                           ; 2 bytes @ 0x2
   562  0022                     	ds	2
   563  0024                     main@i:
   564                           
   565                           ; 2 bytes @ 0x4
   566  0024                     	ds	2
   567                           
   568                           	psect	maintext
   569  0705                     __pmaintext:	
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 61 in file "bai3.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  i               2    4[BANK0 ] unsigned int 
   580 ;;  length          2    2[BANK0 ] unsigned int 
   581 ;;  times           2    0[BANK0 ] unsigned int 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : B00/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       6       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       6       0       0       0
   595 ;;Total ram usage:        6 bytes
   596 ;; Hardware stack levels required when called: 4
   597 ;; This function calls:
   598 ;;		_addCharSpecial
   599 ;;		_delay100us
   600 ;;		_getLengthArr
   601 ;;		_lcd_ShiftLeft
   602 ;;		_lcd_ShiftRight
   603 ;;		_lcd_gotoxy
   604 ;;		_lcd_init
   605 ;;		_lcd_putc
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _main
   613  0705                     _main:
   614  0705                     l1309:	
   615                           ;incstack = 0
   616                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   617                           
   618  0705  1283               	bcf	3,5	;RP0=0, select bank0
   619  0706  1303               	bcf	3,6	;RP1=0, select bank0
   620  0707  01A2               	clrf	main@length
   621  0708  01A3               	clrf	main@length+1
   622  0709                     l1311:
   623  0709  3003               	movlw	3
   624  070A  00A0               	movwf	main@times
   625  070B  3000               	movlw	0
   626  070C  00A1               	movwf	main@times+1
   627  070D                     l1313:
   628                           
   629                           ;bai3.c: 74:     lcd_init();
   630  070D  120A  118A  2662  120A  118A  	fcall	_lcd_init
   631  0712                     l1315:
   632                           
   633                           ;bai3.c: 75:     addCharSpecial(special_name_title);
   634  0712  3001               	movlw	(low ((main@special_name_title-__stringbase)| (0+32768)))& (0+255)
   635  0713  120A  118A  25BF  120A  118A  	fcall	_addCharSpecial
   636                           
   637                           ;bai3.c: 76:     while(times--) {
   638  0718  2F9E               	goto	l1345
   639  0719                     l1317:
   640                           
   641                           ;bai3.c: 77:         lcd_putc('\f');
   642  0719  300C               	movlw	12
   643  071A  120A  118A  2606  120A  118A  	fcall	_lcd_putc
   644  071F                     l1319:
   645                           
   646                           ;bai3.c: 78:         delay100us(10000/2);
   647  071F  3088               	movlw	136
   648  0720  00F0               	movwf	delay100us@n
   649  0721  3013               	movlw	19
   650  0722  00F1               	movwf	delay100us@n+1
   651  0723  120A  118A  24C9  120A  118A  	fcall	_delay100us
   652  0728                     l1321:
   653                           
   654                           ;bai3.c: 79:         lcd_gotoxy(0, 0);
   655  0728  01F6               	clrf	lcd_gotoxy@row
   656  0729  3000               	movlw	0
   657  072A  120A  118A  24EC  120A  118A  	fcall	_lcd_gotoxy
   658                           
   659                           ;bai3.c: 80:         length = getLengthArr(title);
   660  072F  303A               	movlw	(low ((main@title-__stringbase)| (0+32768)))& (0+255)
   661  0730  120A  118A  24AC  120A  118A  	fcall	_getLengthArr
   662  0735  0871               	movf	?_getLengthArr+1,w
   663  0736  1283               	bcf	3,5	;RP0=0, select bank0
   664  0737  1303               	bcf	3,6	;RP1=0, select bank0
   665  0738  00A3               	movwf	main@length+1
   666  0739  0870               	movf	?_getLengthArr,w
   667  073A  00A2               	movwf	main@length
   668  073B                     l1323:
   669                           
   670                           ;bai3.c: 81:         for(i = 0; i < length; i++) {
   671  073B  01A4               	clrf	main@i
   672  073C  01A5               	clrf	main@i+1
   673  073D  2F53               	goto	l1329
   674  073E                     l1325:
   675                           
   676                           ;bai3.c: 82:             lcd_putc(title[i]);
   677  073E  0824               	movf	main@i,w
   678  073F  3E3A               	addlw	low ((main@title-__stringbase)| (0+32768))
   679  0740  0084               	movwf	4
   680  0741  120A  118A  2003  120A  118A  	fcall	stringdir
   681  0746  120A  118A  2606  120A  118A  	fcall	_lcd_putc
   682  074B                     l1327:
   683                           
   684                           ;bai3.c: 83:         }
   685  074B  3001               	movlw	1
   686  074C  1283               	bcf	3,5	;RP0=0, select bank0
   687  074D  1303               	bcf	3,6	;RP1=0, select bank0
   688  074E  07A4               	addwf	main@i,f
   689  074F  1803               	skipnc
   690  0750  0AA5               	incf	main@i+1,f
   691  0751  3000               	movlw	0
   692  0752  07A5               	addwf	main@i+1,f
   693  0753                     l1329:
   694  0753  0823               	movf	main@length+1,w
   695  0754  0225               	subwf	main@i+1,w
   696  0755  1D03               	skipz
   697  0756  2F59               	goto	u715
   698  0757  0822               	movf	main@length,w
   699  0758  0224               	subwf	main@i,w
   700  0759                     u715:
   701  0759  1C03               	skipc
   702  075A  2F5C               	goto	u711
   703  075B  2F5D               	goto	u710
   704  075C                     u711:
   705  075C  2F3E               	goto	l1325
   706  075D                     u710:
   707  075D                     l1331:
   708                           
   709                           ;bai3.c: 84:         length = getLengthArr(your_name);
   710  075D  302A               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   711  075E  120A  118A  24AC  120A  118A  	fcall	_getLengthArr
   712  0763  0871               	movf	?_getLengthArr+1,w
   713  0764  1283               	bcf	3,5	;RP0=0, select bank0
   714  0765  1303               	bcf	3,6	;RP1=0, select bank0
   715  0766  00A3               	movwf	main@length+1
   716  0767  0870               	movf	?_getLengthArr,w
   717  0768  00A2               	movwf	main@length
   718  0769                     l1333:
   719                           
   720                           ;bai3.c: 85:         lcd_gotoxy(0, 1);
   721  0769  01F6               	clrf	lcd_gotoxy@row
   722  076A  0AF6               	incf	lcd_gotoxy@row,f
   723  076B  3000               	movlw	0
   724  076C  120A  118A  24EC  120A  118A  	fcall	_lcd_gotoxy
   725  0771                     l1335:
   726                           
   727                           ;bai3.c: 86:         for(i = 0; i < length; i++) {
   728  0771  1283               	bcf	3,5	;RP0=0, select bank0
   729  0772  1303               	bcf	3,6	;RP1=0, select bank0
   730  0773  01A4               	clrf	main@i
   731  0774  01A5               	clrf	main@i+1
   732  0775  2F8B               	goto	l1341
   733  0776                     l1337:
   734                           
   735                           ;bai3.c: 87:             lcd_putc(your_name[i]);
   736  0776  0824               	movf	main@i,w
   737  0777  3E2A               	addlw	low ((main@your_name-__stringbase)| (0+32768))
   738  0778  0084               	movwf	4
   739  0779  120A  118A  2003  120A  118A  	fcall	stringdir
   740  077E  120A  118A  2606  120A  118A  	fcall	_lcd_putc
   741  0783                     l1339:
   742                           
   743                           ;bai3.c: 88:         }
   744  0783  3001               	movlw	1
   745  0784  1283               	bcf	3,5	;RP0=0, select bank0
   746  0785  1303               	bcf	3,6	;RP1=0, select bank0
   747  0786  07A4               	addwf	main@i,f
   748  0787  1803               	skipnc
   749  0788  0AA5               	incf	main@i+1,f
   750  0789  3000               	movlw	0
   751  078A  07A5               	addwf	main@i+1,f
   752  078B                     l1341:
   753  078B  0823               	movf	main@length+1,w
   754  078C  0225               	subwf	main@i+1,w
   755  078D  1D03               	skipz
   756  078E  2F91               	goto	u725
   757  078F  0822               	movf	main@length,w
   758  0790  0224               	subwf	main@i,w
   759  0791                     u725:
   760  0791  1C03               	skipc
   761  0792  2F94               	goto	u721
   762  0793  2F95               	goto	u720
   763  0794                     u721:
   764  0794  2F76               	goto	l1337
   765  0795                     u720:
   766  0795                     l1343:
   767                           
   768                           ;bai3.c: 89:         delay100us(10000/2);
   769  0795  3088               	movlw	136
   770  0796  00F0               	movwf	delay100us@n
   771  0797  3013               	movlw	19
   772  0798  00F1               	movwf	delay100us@n+1
   773  0799  120A  118A  24C9  120A  118A  	fcall	_delay100us
   774  079E                     l1345:
   775                           
   776                           ;bai3.c: 76:     while(times--) {
   777  079E  3001               	movlw	1
   778  079F  1283               	bcf	3,5	;RP0=0, select bank0
   779  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   780  07A1  02A0               	subwf	main@times,f
   781  07A2  3000               	movlw	0
   782  07A3  1C03               	skipc
   783  07A4  03A1               	decf	main@times+1,f
   784  07A5  02A1               	subwf	main@times+1,f
   785  07A6  0A20               	incf	main@times,w
   786  07A7  1D03               	skipz
   787  07A8  2FAD               	goto	u731
   788  07A9  0A21               	incf	main@times+1,w
   789  07AA  1D03               	btfss	3,2
   790  07AB  2FAD               	goto	u731
   791  07AC  2FAE               	goto	u730
   792  07AD                     u731:
   793  07AD  2F19               	goto	l1317
   794  07AE                     u730:
   795  07AE                     l1347:
   796                           
   797                           ;bai3.c: 91:     for(i = 0; i < 2; i++) {
   798  07AE  01A4               	clrf	main@i
   799  07AF  01A5               	clrf	main@i+1
   800  07B0                     l1353:
   801                           
   802                           ;bai3.c: 92:         delay100us(10000);
   803  07B0  3010               	movlw	16
   804  07B1  00F0               	movwf	delay100us@n
   805  07B2  3027               	movlw	39
   806  07B3  00F1               	movwf	delay100us@n+1
   807  07B4  120A  118A  24C9  120A  118A  	fcall	_delay100us
   808                           
   809                           ;bai3.c: 93:         lcd_ShiftRight();
   810  07B9  120A  118A  24A1  120A  118A  	fcall	_lcd_ShiftRight
   811  07BE                     l1355:
   812                           
   813                           ;bai3.c: 94:     }
   814  07BE  3001               	movlw	1
   815  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   816  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   817  07C1  07A4               	addwf	main@i,f
   818  07C2  1803               	skipnc
   819  07C3  0AA5               	incf	main@i+1,f
   820  07C4  3000               	movlw	0
   821  07C5  07A5               	addwf	main@i+1,f
   822  07C6                     l1357:
   823  07C6  3000               	movlw	0
   824  07C7  0225               	subwf	main@i+1,w
   825  07C8  3002               	movlw	2
   826  07C9  1903               	skipnz
   827  07CA  0224               	subwf	main@i,w
   828  07CB  1C03               	skipc
   829  07CC  2FCE               	goto	u741
   830  07CD  2FCF               	goto	u740
   831  07CE                     u741:
   832  07CE  2FB0               	goto	l1353
   833  07CF                     u740:
   834  07CF                     l1359:
   835                           
   836                           ;bai3.c: 95:     for(i = 0; i < 2; i++) {
   837  07CF  01A4               	clrf	main@i
   838  07D0  01A5               	clrf	main@i+1
   839  07D1                     l1365:
   840                           
   841                           ;bai3.c: 96:         delay100us(10000);
   842  07D1  3010               	movlw	16
   843  07D2  00F0               	movwf	delay100us@n
   844  07D3  3027               	movlw	39
   845  07D4  00F1               	movwf	delay100us@n+1
   846  07D5  120A  118A  24C9  120A  118A  	fcall	_delay100us
   847                           
   848                           ;bai3.c: 97:         lcd_ShiftLeft();
   849  07DA  120A  118A  2496  120A  118A  	fcall	_lcd_ShiftLeft
   850  07DF                     l1367:
   851                           
   852                           ;bai3.c: 98:     }
   853  07DF  3001               	movlw	1
   854  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   855  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   856  07E2  07A4               	addwf	main@i,f
   857  07E3  1803               	skipnc
   858  07E4  0AA5               	incf	main@i+1,f
   859  07E5  3000               	movlw	0
   860  07E6  07A5               	addwf	main@i+1,f
   861  07E7                     l1369:
   862  07E7  3000               	movlw	0
   863  07E8  0225               	subwf	main@i+1,w
   864  07E9  3002               	movlw	2
   865  07EA  1903               	skipnz
   866  07EB  0224               	subwf	main@i,w
   867  07EC  1C03               	skipc
   868  07ED  2FEF               	goto	u751
   869  07EE  2FF0               	goto	u750
   870  07EF                     u751:
   871  07EF  2FD1               	goto	l1365
   872  07F0                     u750:
   873  07F0                     l1371:
   874                           
   875                           ;bai3.c: 99:     delay100us(10000);
   876  07F0  3010               	movlw	16
   877  07F1  00F0               	movwf	delay100us@n
   878  07F2  3027               	movlw	39
   879  07F3  00F1               	movwf	delay100us@n+1
   880  07F4  120A  118A  24C9  120A  118A  	fcall	_delay100us
   881  07F9                     l86:
   882  07F9  120A  118A  2800   	ljmp	start
   883  07FC                     __end_of_main:
   884                           
   885                           	psect	text1
   886  0606                     __ptext1:	
   887 ;; *************** function _lcd_putc *****************
   888 ;; Defined at:
   889 ;;		line 190 in file "lcd.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  c               1    wreg     unsigned char 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  c               1   12[COMMON] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         1       0       0       0       0
   905 ;;      Temps:          2       0       0       0       0
   906 ;;      Totals:         3       0       0       0       0
   907 ;;Total ram usage:        3 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 3
   910 ;; This function calls:
   911 ;;		_lcd_busy
   912 ;;		_lcd_gotoxy
   913 ;;		_lcd_put_byte
   914 ;; This function is called by:
   915 ;;		_main
   916 ;;		_lcd_puts
   917 ;;		_lcd_String_Delay
   918 ;;		_putch
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _lcd_putc
   924  0606                     _lcd_putc:
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   928                           ;lcd_putc@c stored from wreg
   929  0606  00FC               	movwf	lcd_putc@c
   930  0607                     l1283:
   931                           
   932                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   933  0607  2E4E               	goto	l1299
   934  0608                     l1285:
   935                           
   936                           ;lcd.c: 198:    lcd_put_byte(0,1);
   937  0608  01F3               	clrf	lcd_put_byte@b
   938  0609  0AF3               	incf	lcd_put_byte@b,f
   939  060A  3000               	movlw	0
   940  060B  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
   941  0610                     l1287:	
   942                           ;lcd.c: 199:    while(lcd_busy());
   943                           
   944  0610  120A  118A  2512  120A  118A  	fcall	_lcd_busy
   945  0615  3A00               	xorlw	0
   946  0616  1D03               	skipz
   947  0617  2E19               	goto	u681
   948  0618  2E1A               	goto	u680
   949  0619                     u681:
   950  0619  2E10               	goto	l1287
   951  061A                     u680:
   952  061A  2E61               	goto	l158
   953  061B                     l1289:
   954                           
   955                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   956  061B  01F6               	clrf	lcd_gotoxy@row
   957  061C  0AF6               	incf	lcd_gotoxy@row,f
   958  061D  3000               	movlw	0
   959  061E  120A  118A  24EC  120A  118A  	fcall	_lcd_gotoxy
   960                           
   961                           ;lcd.c: 203:    break;
   962  0623  2E61               	goto	l158
   963  0624                     l1291:
   964                           
   965                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   966  0624  3010               	movlw	16
   967  0625  00FA               	movwf	??_lcd_putc
   968  0626  087A               	movf	??_lcd_putc,w
   969  0627  00F3               	movwf	lcd_put_byte@b
   970  0628  3000               	movlw	0
   971  0629  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
   972  062E                     l1293:	
   973                           ;lcd.c: 206:    while(lcd_busy());
   974                           
   975  062E  120A  118A  2512  120A  118A  	fcall	_lcd_busy
   976  0633  3A00               	xorlw	0
   977  0634  1D03               	skipz
   978  0635  2E37               	goto	u691
   979  0636  2E38               	goto	u690
   980  0637                     u691:
   981  0637  2E2E               	goto	l1293
   982  0638                     u690:
   983  0638  2E61               	goto	l158
   984  0639                     l1295:
   985                           
   986                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   987  0639  087C               	movf	lcd_putc@c,w
   988  063A  00FA               	movwf	??_lcd_putc
   989  063B  087A               	movf	??_lcd_putc,w
   990  063C  00F3               	movwf	lcd_put_byte@b
   991  063D  3001               	movlw	1
   992  063E  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
   993  0643                     l1297:	
   994                           ;lcd.c: 212:     while(lcd_busy());
   995                           
   996  0643  120A  118A  2512  120A  118A  	fcall	_lcd_busy
   997  0648  3A00               	xorlw	0
   998  0649  1D03               	skipz
   999  064A  2E4C               	goto	u701
  1000  064B  2E4D               	goto	u700
  1001  064C                     u701:
  1002  064C  2E43               	goto	l1297
  1003  064D                     u700:
  1004  064D  2E61               	goto	l158
  1005  064E                     l1299:
  1006  064E  087C               	movf	lcd_putc@c,w
  1007  064F  00FA               	movwf	??_lcd_putc
  1008  0650  01FB               	clrf	??_lcd_putc+1
  1009                           
  1010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 1, Range of values is 0 to 0
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            4     3 (average)
  1016                           ; direct_byte           11     8 (fixed)
  1017                           ; jumptable            260     6 (fixed)
  1018                           ;	Chosen strategy is simple_byte
  1019  0651  087B               	movf	??_lcd_putc+1,w
  1020  0652  3A00               	xorlw	0	; case 0
  1021  0653  1903               	skipnz
  1022  0654  2E56               	goto	l1431
  1023  0655  2E39               	goto	l1295
  1024  0656                     l1431:
  1025                           
  1026                           ; Switch size 1, requested type "simple"
  1027                           ; Number of cases is 3, Range of values is 8 to 12
  1028                           ; switch strategies available:
  1029                           ; Name         Instructions Cycles
  1030                           ; simple_byte           10     6 (average)
  1031                           ; direct_byte           26    11 (fixed)
  1032                           ; jumptable            263     9 (fixed)
  1033                           ;	Chosen strategy is simple_byte
  1034  0656  087A               	movf	??_lcd_putc,w
  1035  0657  3A08               	xorlw	8	; case 8
  1036  0658  1903               	skipnz
  1037  0659  2E24               	goto	l1291
  1038  065A  3A02               	xorlw	2	; case 10
  1039  065B  1903               	skipnz
  1040  065C  2E1B               	goto	l1289
  1041  065D  3A06               	xorlw	6	; case 12
  1042  065E  1903               	skipnz
  1043  065F  2E08               	goto	l1285
  1044  0660  2E39               	goto	l1295
  1045  0661                     l158:
  1046  0661  0008               	return
  1047  0662                     __end_of_lcd_putc:
  1048                           
  1049                           	psect	text2
  1050  04EC                     __ptext2:	
  1051 ;; *************** function _lcd_gotoxy *****************
  1052 ;; Defined at:
  1053 ;;		line 167 in file "lcd.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  col             1    wreg     unsigned char 
  1056 ;;  row             1    6[COMMON] unsigned char 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  col             1    8[COMMON] unsigned char 
  1059 ;;  address         1    9[COMMON] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         1       0       0       0       0
  1070 ;;      Locals:         2       0       0       0       0
  1071 ;;      Temps:          1       0       0       0       0
  1072 ;;      Totals:         4       0       0       0       0
  1073 ;;Total ram usage:        4 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 2
  1076 ;; This function calls:
  1077 ;;		_lcd_busy
  1078 ;;		_lcd_put_byte
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;;		_lcd_putc
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _lcd_gotoxy
  1087  04EC                     _lcd_gotoxy:
  1088                           
  1089                           ;incstack = 0
  1090                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1091                           ;lcd_gotoxy@col stored from wreg
  1092  04EC  00F8               	movwf	lcd_gotoxy@col
  1093  04ED                     l1187:
  1094                           
  1095                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1096  04ED  0876               	movf	lcd_gotoxy@row,w
  1097  04EE  1903               	btfsc	3,2
  1098  04EF  2CF1               	goto	u551
  1099  04F0  2CF2               	goto	u550
  1100  04F1                     u551:
  1101  04F1  2CF7               	goto	l1191
  1102  04F2                     u550:
  1103  04F2                     l1189:
  1104                           
  1105                           ;lcd.c: 174:   address=0x40;
  1106  04F2  3040               	movlw	64
  1107  04F3  00F7               	movwf	??_lcd_gotoxy
  1108  04F4  0877               	movf	??_lcd_gotoxy,w
  1109  04F5  00F9               	movwf	lcd_gotoxy@address
  1110  04F6  2CF8               	goto	l1193
  1111  04F7                     l1191:
  1112                           
  1113                           ;lcd.c: 176:   address=0;
  1114  04F7  01F9               	clrf	lcd_gotoxy@address
  1115  04F8                     l1193:
  1116                           
  1117                           ;lcd.c: 178:  address += col;
  1118  04F8  0878               	movf	lcd_gotoxy@col,w
  1119  04F9  00F7               	movwf	??_lcd_gotoxy
  1120  04FA  0877               	movf	??_lcd_gotoxy,w
  1121  04FB  07F9               	addwf	lcd_gotoxy@address,f
  1122  04FC                     l1195:
  1123                           
  1124                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1125  04FC  0879               	movf	lcd_gotoxy@address,w
  1126  04FD  3880               	iorlw	128
  1127  04FE  00F7               	movwf	??_lcd_gotoxy
  1128  04FF  0877               	movf	??_lcd_gotoxy,w
  1129  0500  00F3               	movwf	lcd_put_byte@b
  1130  0501  3000               	movlw	0
  1131  0502  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1132  0507                     l1197:	
  1133                           ;lcd.c: 181:  while(lcd_busy());
  1134                           
  1135  0507  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1136  050C  3A00               	xorlw	0
  1137  050D  1D03               	skipz
  1138  050E  2D10               	goto	u561
  1139  050F  2D11               	goto	u560
  1140  0510                     u561:
  1141  0510  2D07               	goto	l1197
  1142  0511                     u560:
  1143  0511                     l140:
  1144  0511  0008               	return
  1145  0512                     __end_of_lcd_gotoxy:
  1146                           
  1147                           	psect	text3
  1148  0662                     __ptext3:	
  1149 ;; *************** function _lcd_init *****************
  1150 ;; Defined at:
  1151 ;;		line 241 in file "lcd.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  i               1    0        unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0
  1167 ;;      Temps:          2       0       0       0       0
  1168 ;;      Totals:         2       0       0       0       0
  1169 ;;Total ram usage:        2 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 2
  1172 ;; This function calls:
  1173 ;;		_lcd_busy
  1174 ;;		_lcd_put_byte
  1175 ;;		_lcd_put_nibble
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           
  1182                           ;psect for function _lcd_init
  1183  0662                     _lcd_init:
  1184  0662                     l1245:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1187                           
  1188                           
  1189                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1190  0662  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0663  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0664  1188               	bcf	8,3	;volatile
  1193                           
  1194                           ;lcd.c: 248:  TRISD1 = 0;
  1195  0665  1088               	bcf	8,1	;volatile
  1196                           
  1197                           ;lcd.c: 249:  TRISD2 = 0;
  1198  0666  1108               	bcf	8,2	;volatile
  1199                           
  1200                           ;lcd.c: 250:  TRISD4 = 0;
  1201  0667  1208               	bcf	8,4	;volatile
  1202                           
  1203                           ;lcd.c: 251:  TRISD5 = 0;
  1204  0668  1288               	bcf	8,5	;volatile
  1205                           
  1206                           ;lcd.c: 252:  TRISD6 = 0;
  1207  0669  1308               	bcf	8,6	;volatile
  1208                           
  1209                           ;lcd.c: 253:  TRISD7 = 0;
  1210  066A  1388               	bcf	8,7	;volatile
  1211  066B                     l1247:
  1212                           
  1213                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1214  066B  3014               	movlw	20
  1215  066C  00F7               	movwf	??_lcd_init+1
  1216  066D  3079               	movlw	121
  1217  066E  00F6               	movwf	??_lcd_init
  1218  066F                     u807:
  1219  066F  0BF6               	decfsz	??_lcd_init,f
  1220  0670  2E6F               	goto	u807
  1221  0671  0BF7               	decfsz	??_lcd_init+1,f
  1222  0672  2E6F               	goto	u807
  1223  0673  2E74               	nop2
  1224  0674                     l1249:
  1225                           
  1226                           ;lcd.c: 257:  RD1 = 0;
  1227  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0676  1088               	bcf	8,1	;volatile
  1230  0677                     l1251:
  1231                           
  1232                           ;lcd.c: 258:  RD2 = 0;
  1233  0677  1108               	bcf	8,2	;volatile
  1234  0678                     l1253:
  1235                           
  1236                           ;lcd.c: 259:  RD3 = 0;
  1237  0678  1188               	bcf	8,3	;volatile
  1238  0679                     l1255:
  1239                           
  1240                           ;lcd.c: 261:  lcd_put_nibble(3);
  1241  0679  3003               	movlw	3
  1242  067A  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1243  067F                     l1257:
  1244                           
  1245                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1246  067F  300D               	movlw	13
  1247  0680  00F7               	movwf	??_lcd_init+1
  1248  0681  30FB               	movlw	251
  1249  0682  00F6               	movwf	??_lcd_init
  1250  0683                     u817:
  1251  0683  0BF6               	decfsz	??_lcd_init,f
  1252  0684  2E83               	goto	u817
  1253  0685  0BF7               	decfsz	??_lcd_init+1,f
  1254  0686  2E83               	goto	u817
  1255  0687  2E88               	nop2
  1256                           
  1257                           ;lcd.c: 263:  lcd_put_nibble(3);
  1258  0688  3003               	movlw	3
  1259  0689  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1260  068E                     l1259:
  1261                           
  1262                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1263  068E  300D               	movlw	13
  1264  068F  00F7               	movwf	??_lcd_init+1
  1265  0690  30FB               	movlw	251
  1266  0691  00F6               	movwf	??_lcd_init
  1267  0692                     u827:
  1268  0692  0BF6               	decfsz	??_lcd_init,f
  1269  0693  2E92               	goto	u827
  1270  0694  0BF7               	decfsz	??_lcd_init+1,f
  1271  0695  2E92               	goto	u827
  1272  0696  2E97               	nop2
  1273  0697                     l1261:
  1274                           
  1275                           ;lcd.c: 265:  lcd_put_nibble(3);
  1276  0697  3003               	movlw	3
  1277  0698  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1278                           
  1279                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1280  069D  300D               	movlw	13
  1281  069E  00F7               	movwf	??_lcd_init+1
  1282  069F  30FB               	movlw	251
  1283  06A0  00F6               	movwf	??_lcd_init
  1284  06A1                     u837:
  1285  06A1  0BF6               	decfsz	??_lcd_init,f
  1286  06A2  2EA1               	goto	u837
  1287  06A3  0BF7               	decfsz	??_lcd_init+1,f
  1288  06A4  2EA1               	goto	u837
  1289  06A5  2EA6               	nop2
  1290  06A6                     l1263:
  1291                           
  1292                           ;lcd.c: 268:  lcd_put_nibble(2);
  1293  06A6  3002               	movlw	2
  1294  06A7  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1295  06AC                     l1265:	
  1296                           ;lcd.c: 269:  while(lcd_busy());
  1297                           
  1298  06AC  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1299  06B1  3A00               	xorlw	0
  1300  06B2  1D03               	skipz
  1301  06B3  2EB5               	goto	u631
  1302  06B4  2EB6               	goto	u630
  1303  06B5                     u631:
  1304  06B5  2EAC               	goto	l1265
  1305  06B6                     u630:
  1306  06B6                     l1267:
  1307                           
  1308                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1309  06B6  3028               	movlw	40
  1310  06B7  00F6               	movwf	??_lcd_init
  1311  06B8  0876               	movf	??_lcd_init,w
  1312  06B9  00F3               	movwf	lcd_put_byte@b
  1313  06BA  3000               	movlw	0
  1314  06BB  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1315  06C0                     l1269:	
  1316                           ;lcd.c: 272:  while(lcd_busy());
  1317                           
  1318  06C0  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1319  06C5  3A00               	xorlw	0
  1320  06C6  1D03               	skipz
  1321  06C7  2EC9               	goto	u641
  1322  06C8  2ECA               	goto	u640
  1323  06C9                     u641:
  1324  06C9  2EC0               	goto	l1269
  1325  06CA                     u640:
  1326  06CA                     l1271:
  1327                           
  1328                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1329  06CA  300C               	movlw	12
  1330  06CB  00F6               	movwf	??_lcd_init
  1331  06CC  0876               	movf	??_lcd_init,w
  1332  06CD  00F3               	movwf	lcd_put_byte@b
  1333  06CE  3000               	movlw	0
  1334  06CF  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1335  06D4                     l1273:	
  1336                           ;lcd.c: 275:  while(lcd_busy());
  1337                           
  1338  06D4  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1339  06D9  3A00               	xorlw	0
  1340  06DA  1D03               	skipz
  1341  06DB  2EDD               	goto	u651
  1342  06DC  2EDE               	goto	u650
  1343  06DD                     u651:
  1344  06DD  2ED4               	goto	l1273
  1345  06DE                     u650:
  1346  06DE                     l1275:
  1347                           
  1348                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1349  06DE  01F3               	clrf	lcd_put_byte@b
  1350  06DF  0AF3               	incf	lcd_put_byte@b,f
  1351  06E0  3000               	movlw	0
  1352  06E1  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1353  06E6                     l1277:	
  1354                           ;lcd.c: 278:  while(lcd_busy());
  1355                           
  1356  06E6  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1357  06EB  3A00               	xorlw	0
  1358  06EC  1D03               	skipz
  1359  06ED  2EEF               	goto	u661
  1360  06EE  2EF0               	goto	u660
  1361  06EF                     u661:
  1362  06EF  2EE6               	goto	l1277
  1363  06F0                     u660:
  1364  06F0                     l1279:
  1365                           
  1366                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1367  06F0  3006               	movlw	6
  1368  06F1  00F6               	movwf	??_lcd_init
  1369  06F2  0876               	movf	??_lcd_init,w
  1370  06F3  00F3               	movwf	lcd_put_byte@b
  1371  06F4  3000               	movlw	0
  1372  06F5  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1373  06FA                     l1281:	
  1374                           ;lcd.c: 281:  while(lcd_busy());
  1375                           
  1376  06FA  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1377  06FF  3A00               	xorlw	0
  1378  0700  1D03               	skipz
  1379  0701  2F03               	goto	u671
  1380  0702  2F04               	goto	u670
  1381  0703                     u671:
  1382  0703  2EFA               	goto	l1281
  1383  0704                     u670:
  1384  0704                     l182:
  1385  0704  0008               	return
  1386  0705                     __end_of_lcd_init:
  1387                           
  1388                           	psect	text4
  1389  04A1                     __ptext4:	
  1390 ;; *************** function _lcd_ShiftRight *****************
  1391 ;; Defined at:
  1392 ;;		line 304 in file "lcd.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0, pclath, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0
  1408 ;;      Temps:          1       0       0       0       0
  1409 ;;      Totals:         1       0       0       0       0
  1410 ;;Total ram usage:        1 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 2
  1413 ;; This function calls:
  1414 ;;		_lcd_put_byte
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;;		_lcd_MoveRight
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _lcd_ShiftRight
  1423  04A1                     _lcd_ShiftRight:
  1424  04A1                     l1305:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _lcd_ShiftRight: [wreg+status,2+status,0+pclath+cstack]
  1427                           
  1428                           
  1429                           ;lcd.c: 309:      lcd_put_byte(0,0x1C);
  1430  04A1  301C               	movlw	28
  1431  04A2  00F6               	movwf	??_lcd_ShiftRight
  1432  04A3  0876               	movf	??_lcd_ShiftRight,w
  1433  04A4  00F3               	movwf	lcd_put_byte@b
  1434  04A5  3000               	movlw	0
  1435  04A6  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1436  04AB                     l188:
  1437  04AB  0008               	return
  1438  04AC                     __end_of_lcd_ShiftRight:
  1439                           
  1440                           	psect	text5
  1441  0496                     __ptext5:	
  1442 ;; *************** function _lcd_ShiftLeft *****************
  1443 ;; Defined at:
  1444 ;;		line 290 in file "lcd.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, pclath, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0
  1460 ;;      Temps:          1       0       0       0       0
  1461 ;;      Totals:         1       0       0       0       0
  1462 ;;Total ram usage:        1 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 2
  1465 ;; This function calls:
  1466 ;;		_lcd_put_byte
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;;		_lcd_MoveLeft
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _lcd_ShiftLeft
  1475  0496                     _lcd_ShiftLeft:
  1476  0496                     l1307:	
  1477                           ;incstack = 0
  1478                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
  1479                           
  1480                           
  1481                           ;lcd.c: 295:      lcd_put_byte(0,0x18);
  1482  0496  3018               	movlw	24
  1483  0497  00F6               	movwf	??_lcd_ShiftLeft
  1484  0498  0876               	movf	??_lcd_ShiftLeft,w
  1485  0499  00F3               	movwf	lcd_put_byte@b
  1486  049A  3000               	movlw	0
  1487  049B  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1488  04A0                     l185:
  1489  04A0  0008               	return
  1490  04A1                     __end_of_lcd_ShiftLeft:
  1491                           
  1492                           	psect	text6
  1493  04AC                     __ptext6:	
  1494 ;; *************** function _getLengthArr *****************
  1495 ;; Defined at:
  1496 ;;		line 38 in file "bai3.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  character       1    wreg     PTR unsigned char 
  1499 ;;		 -> main@your_name(16), main@title(16), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  character       1    2[COMMON] PTR unsigned char 
  1502 ;;		 -> main@your_name(16), main@title(16), 
  1503 ;;  i               2    3[COMMON] unsigned int 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2    0[COMMON] unsigned int 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         2       0       0       0       0
  1514 ;;      Locals:         3       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0
  1516 ;;      Totals:         5       0       0       0       0
  1517 ;;Total ram usage:        5 bytes
  1518 ;; Hardware stack levels used: 2
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _getLengthArr
  1528  04AC                     _getLengthArr:
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1532                           ;getLengthArr@character stored from wreg
  1533  04AC  00F2               	movwf	getLengthArr@character
  1534  04AD                     l1213:
  1535                           
  1536                           ;bai3.c: 39:     unsigned int i = 0;
  1537  04AD  01F3               	clrf	getLengthArr@i
  1538  04AE  01F4               	clrf	getLengthArr@i+1
  1539  04AF                     l1215:
  1540                           
  1541                           ;bai3.c: 41:         if(character[i] == '\n')
  1542  04AF  0873               	movf	getLengthArr@i,w
  1543  04B0  0772               	addwf	getLengthArr@character,w
  1544  04B1  0084               	movwf	4
  1545  04B2  120A  118A  2003  120A  118A  	fcall	stringdir
  1546  04B7  3A0A               	xorlw	10
  1547  04B8  1D03               	skipz
  1548  04B9  2CBB               	goto	u601
  1549  04BA  2CBC               	goto	u600
  1550  04BB                     u601:
  1551  04BB  2CBD               	goto	l1219
  1552  04BC                     u600:
  1553  04BC  2CC4               	goto	l1221
  1554  04BD                     l1219:
  1555                           
  1556                           ;bai3.c: 45:         i++;
  1557  04BD  3001               	movlw	1
  1558  04BE  07F3               	addwf	getLengthArr@i,f
  1559  04BF  1803               	skipnc
  1560  04C0  0AF4               	incf	getLengthArr@i+1,f
  1561  04C1  3000               	movlw	0
  1562  04C2  07F4               	addwf	getLengthArr@i+1,f
  1563  04C3  2CAF               	goto	l1215
  1564  04C4                     l1221:
  1565                           
  1566                           ;bai3.c: 47:     return i;
  1567  04C4  0874               	movf	getLengthArr@i+1,w
  1568  04C5  00F1               	movwf	?_getLengthArr+1
  1569  04C6  0873               	movf	getLengthArr@i,w
  1570  04C7  00F0               	movwf	?_getLengthArr
  1571  04C8                     l53:
  1572  04C8  0008               	return
  1573  04C9                     __end_of_getLengthArr:
  1574                           
  1575                           	psect	text7
  1576  04C9                     __ptext7:	
  1577 ;; *************** function _delay100us *****************
  1578 ;; Defined at:
  1579 ;;		line 50 in file "bai3.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  n               2    0[COMMON] unsigned int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1593 ;;      Params:         2       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0
  1596 ;;      Totals:         2       0       0       0       0
  1597 ;;Total ram usage:        2 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           
  1607                           ;psect for function _delay100us
  1608  04C9                     _delay100us:
  1609  04C9                     l1225:	
  1610                           ;incstack = 0
  1611                           ; Regs used in _delay100us: [wreg+status,2+status,0]
  1612                           
  1613                           
  1614                           ;bai3.c: 51:     while(n--) {
  1615  04C9  2CDD               	goto	l1243
  1616  04CA                     l1227:
  1617                           
  1618                           ;bai3.c: 52:         TMR0 = 231;
  1619  04CA  30E7               	movlw	231
  1620  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1621  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1622  04CD  0081               	movwf	1	;volatile
  1623  04CE                     l1229:
  1624                           
  1625                           ;bai3.c: 53:         TMR0IF = 0;
  1626  04CE  110B               	bcf	11,2	;volatile
  1627  04CF                     l1231:
  1628                           
  1629                           ;bai3.c: 54:         T0CS = 0;
  1630  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  1631  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  1632  04D1  1281               	bcf	1,5	;volatile
  1633  04D2                     l1233:
  1634                           
  1635                           ;bai3.c: 55:         GIE=PEIE =TMR0IE = 0;
  1636  04D2  128B               	bcf	11,5	;volatile
  1637  04D3  130B               	bcf	11,6	;volatile
  1638  04D4  138B               	bcf	11,7	;volatile
  1639  04D5                     l1235:
  1640                           
  1641                           ;bai3.c: 56:         PSA = 0; PS2 = 0; PS1 = 0; PS0 = 1;
  1642  04D5  1181               	bcf	1,3	;volatile
  1643  04D6                     l1237:
  1644  04D6  1101               	bcf	1,2	;volatile
  1645  04D7                     l1239:
  1646  04D7  1081               	bcf	1,1	;volatile
  1647  04D8                     l1241:
  1648  04D8  1401               	bsf	1,0	;volatile
  1649  04D9                     l58:	
  1650                           ;bai3.c: 57:         while(TMR0IF==0);
  1651                           
  1652  04D9  1D0B               	btfss	11,2	;volatile
  1653  04DA  2CDC               	goto	u611
  1654  04DB  2CDD               	goto	u610
  1655  04DC                     u611:
  1656  04DC  2CD9               	goto	l58
  1657  04DD                     u610:
  1658  04DD                     l1243:
  1659                           
  1660                           ;bai3.c: 51:     while(n--) {
  1661  04DD  3001               	movlw	1
  1662  04DE  02F0               	subwf	delay100us@n,f
  1663  04DF  3000               	movlw	0
  1664  04E0  1C03               	skipc
  1665  04E1  03F1               	decf	delay100us@n+1,f
  1666  04E2  02F1               	subwf	delay100us@n+1,f
  1667  04E3  0A70               	incf	delay100us@n,w
  1668  04E4  1D03               	skipz
  1669  04E5  2CEA               	goto	u621
  1670  04E6  0A71               	incf	delay100us@n+1,w
  1671  04E7  1D03               	btfss	3,2
  1672  04E8  2CEA               	goto	u621
  1673  04E9  2CEB               	goto	u620
  1674  04EA                     u621:
  1675  04EA  2CCA               	goto	l1227
  1676  04EB                     u620:
  1677  04EB                     l62:
  1678  04EB  0008               	return
  1679  04EC                     __end_of_delay100us:
  1680                           
  1681                           	psect	text8
  1682  05BF                     __ptext8:	
  1683 ;; *************** function _addCharSpecial *****************
  1684 ;; Defined at:
  1685 ;;		line 27 in file "bai3.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  character       1    wreg     PTR unsigned char 
  1688 ;;		 -> main@special_name_title(41), 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  character       1    9[COMMON] PTR unsigned char 
  1691 ;;		 -> main@special_name_title(41), 
  1692 ;;  i               2    7[COMMON] unsigned int 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         3       0       0       0       0
  1704 ;;      Temps:          1       0       0       0       0
  1705 ;;      Totals:         4       0       0       0       0
  1706 ;;Total ram usage:        4 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 2
  1709 ;; This function calls:
  1710 ;;		_lcd_busy
  1711 ;;		_lcd_put_byte
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _addCharSpecial
  1719  05BF                     _addCharSpecial:
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1723                           ;addCharSpecial@character stored from wreg
  1724  05BF  00F9               	movwf	addCharSpecial@character
  1725  05C0                     l1199:
  1726                           
  1727                           ;bai3.c: 28:     unsigned int i = 0;
  1728  05C0  01F7               	clrf	addCharSpecial@i
  1729  05C1  01F8               	clrf	addCharSpecial@i+1
  1730  05C2                     l1201:
  1731                           
  1732                           ;bai3.c: 29:     lcd_put_byte(0, 0x40);
  1733  05C2  3040               	movlw	64
  1734  05C3  00F6               	movwf	??_addCharSpecial
  1735  05C4  0876               	movf	??_addCharSpecial,w
  1736  05C5  00F3               	movwf	lcd_put_byte@b
  1737  05C6  3000               	movlw	0
  1738  05C7  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1739  05CC                     l1203:	
  1740                           ;bai3.c: 30:     while(lcd_busy());
  1741                           
  1742  05CC  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1743  05D1  3A00               	xorlw	0
  1744  05D2  1D03               	skipz
  1745  05D3  2DD5               	goto	u571
  1746  05D4  2DD6               	goto	u570
  1747  05D5                     u571:
  1748  05D5  2DCC               	goto	l1203
  1749  05D6                     u570:
  1750  05D6  2DF8               	goto	l1211
  1751  05D7                     l1205:
  1752                           
  1753                           ;bai3.c: 32:         lcd_put_byte(1, character[i]);
  1754  05D7  0877               	movf	addCharSpecial@i,w
  1755  05D8  0779               	addwf	addCharSpecial@character,w
  1756  05D9  0084               	movwf	4
  1757  05DA  120A  118A  2003  120A  118A  	fcall	stringdir
  1758  05DF  00F6               	movwf	??_addCharSpecial
  1759  05E0  0876               	movf	??_addCharSpecial,w
  1760  05E1  00F3               	movwf	lcd_put_byte@b
  1761  05E2  3001               	movlw	1
  1762  05E3  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1763  05E8                     l1207:	
  1764                           ;bai3.c: 33:         while(lcd_busy());
  1765                           
  1766  05E8  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1767  05ED  3A00               	xorlw	0
  1768  05EE  1D03               	skipz
  1769  05EF  2DF1               	goto	u581
  1770  05F0  2DF2               	goto	u580
  1771  05F1                     u581:
  1772  05F1  2DE8               	goto	l1207
  1773  05F2                     u580:
  1774  05F2                     l1209:
  1775                           
  1776                           ;bai3.c: 34:         i++;
  1777  05F2  3001               	movlw	1
  1778  05F3  07F7               	addwf	addCharSpecial@i,f
  1779  05F4  1803               	skipnc
  1780  05F5  0AF8               	incf	addCharSpecial@i+1,f
  1781  05F6  3000               	movlw	0
  1782  05F7  07F8               	addwf	addCharSpecial@i+1,f
  1783  05F8                     l1211:
  1784                           
  1785                           ;bai3.c: 31:     while(character[i] != 0x99) {
  1786  05F8  0877               	movf	addCharSpecial@i,w
  1787  05F9  0779               	addwf	addCharSpecial@character,w
  1788  05FA  0084               	movwf	4
  1789  05FB  120A  118A  2003  120A  118A  	fcall	stringdir
  1790  0600  3A99               	xorlw	153
  1791  0601  1D03               	skipz
  1792  0602  2E04               	goto	u591
  1793  0603  2E05               	goto	u590
  1794  0604                     u591:
  1795  0604  2DD7               	goto	l1205
  1796  0605                     u590:
  1797  0605                     l46:
  1798  0605  0008               	return
  1799  0606                     __end_of_addCharSpecial:
  1800                           
  1801                           	psect	text9
  1802  0542                     __ptext9:	
  1803 ;; *************** function _lcd_put_byte *****************
  1804 ;; Defined at:
  1805 ;;		line 134 in file "lcd.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  rs              1    wreg     unsigned char 
  1808 ;;  b               1    3[COMMON] unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  rs              1    5[COMMON] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, pclath, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1820 ;;      Params:         1       0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0
  1822 ;;      Temps:          1       0       0       0       0
  1823 ;;      Totals:         3       0       0       0       0
  1824 ;;Total ram usage:        3 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 1
  1827 ;; This function calls:
  1828 ;;		_lcd_put_nibble
  1829 ;; This function is called by:
  1830 ;;		_addCharSpecial
  1831 ;;		_lcd_gotoxy
  1832 ;;		_lcd_putc
  1833 ;;		_lcd_init
  1834 ;;		_lcd_ShiftLeft
  1835 ;;		_lcd_ShiftRight
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _lcd_put_byte
  1841  0542                     _lcd_put_byte:
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1845                           ;lcd_put_byte@rs stored from wreg
  1846  0542  00F5               	movwf	lcd_put_byte@rs
  1847  0543                     l1149:
  1848                           
  1849                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1850  0543  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0544  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0545  1208               	bcf	8,4	;volatile
  1853                           
  1854                           ;lcd.c: 140:  TRISD5 = 0;
  1855  0546  1288               	bcf	8,5	;volatile
  1856                           
  1857                           ;lcd.c: 141:  TRISD6 = 0;
  1858  0547  1308               	bcf	8,6	;volatile
  1859                           
  1860                           ;lcd.c: 142:  TRISD7 = 0;
  1861  0548  1388               	bcf	8,7	;volatile
  1862  0549                     l1151:
  1863                           
  1864                           ;lcd.c: 144:  if(rs)
  1865  0549  0875               	movf	lcd_put_byte@rs,w
  1866  054A  1903               	btfsc	3,2
  1867  054B  2D4D               	goto	u531
  1868  054C  2D4E               	goto	u530
  1869  054D                     u531:
  1870  054D  2D52               	goto	l130
  1871  054E                     u530:
  1872  054E                     l1153:
  1873                           
  1874                           ;lcd.c: 145:   RD1 = 1;
  1875  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1876  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0550  1488               	bsf	8,1	;volatile
  1878  0551  2D55               	goto	l1155
  1879  0552                     l130:	
  1880                           ;lcd.c: 146:  else
  1881                           
  1882                           
  1883                           ;lcd.c: 147:   RD1 = 0;
  1884  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0554  1088               	bcf	8,1	;volatile
  1887  0555                     l1155:
  1888                           
  1889                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1890  0555  3006               	movlw	6
  1891  0556  00F4               	movwf	??_lcd_put_byte
  1892  0557                     u847:
  1893  0557  0BF4               	decfsz	??_lcd_put_byte,f
  1894  0558  2D57               	goto	u847
  1895  0559  0000               	nop
  1896  055A                     l1157:
  1897                           
  1898                           ;lcd.c: 150:  RD2 = 0;
  1899  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1900  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1901  055C  1108               	bcf	8,2	;volatile
  1902                           
  1903                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1904  055D  3006               	movlw	6
  1905  055E  00F4               	movwf	??_lcd_put_byte
  1906  055F                     u857:
  1907  055F  0BF4               	decfsz	??_lcd_put_byte,f
  1908  0560  2D5F               	goto	u857
  1909  0561  0000               	nop
  1910  0562                     l1159:
  1911                           
  1912                           ;lcd.c: 153:  RD3 = 0;
  1913  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0564  1188               	bcf	8,3	;volatile
  1916  0565                     l1161:
  1917                           
  1918                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1919  0565  0873               	movf	lcd_put_byte@b,w
  1920  0566  00F4               	movwf	??_lcd_put_byte
  1921  0567  3004               	movlw	4
  1922  0568                     u545:
  1923  0568  1003               	clrc
  1924  0569  0CF4               	rrf	??_lcd_put_byte,f
  1925  056A  3EFF               	addlw	-1
  1926  056B  1D03               	skipz
  1927  056C  2D68               	goto	u545
  1928  056D  0874               	movf	??_lcd_put_byte,w
  1929  056E  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1930  0573                     l1163:
  1931                           
  1932                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1933  0573  0873               	movf	lcd_put_byte@b,w
  1934  0574  390F               	andlw	15
  1935  0575  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1936  057A                     l132:
  1937  057A  0008               	return
  1938  057B                     __end_of_lcd_put_byte:
  1939                           
  1940                           	psect	text10
  1941  057B                     __ptext10:	
  1942 ;; *************** function _lcd_put_nibble *****************
  1943 ;; Defined at:
  1944 ;;		line 103 in file "lcd.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  b               1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  b               1    1[COMMON] unsigned char 
  1949 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1959 ;;      Params:         0       0       0       0       0
  1960 ;;      Locals:         2       0       0       0       0
  1961 ;;      Temps:          1       0       0       0       0
  1962 ;;      Totals:         3       0       0       0       0
  1963 ;;Total ram usage:        3 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_lcd_put_byte
  1969 ;;		_lcd_init
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _lcd_put_nibble
  1975  057B                     _lcd_put_nibble:
  1976                           
  1977                           ;incstack = 0
  1978                           ; Regs used in _lcd_put_nibble: [wreg]
  1979                           ;lcd_put_nibble@b stored from wreg
  1980  057B  00F1               	movwf	lcd_put_nibble@b
  1981  057C                     l1133:
  1982                           
  1983                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1984  057C  1683               	bsf	3,5	;RP0=1, select bank1
  1985  057D  1303               	bcf	3,6	;RP1=0, select bank1
  1986  057E  1208               	bcf	8,4	;volatile
  1987                           
  1988                           ;lcd.c: 110:  TRISD5 = 0;
  1989  057F  1288               	bcf	8,5	;volatile
  1990                           
  1991                           ;lcd.c: 111:  TRISD6 = 0;
  1992  0580  1308               	bcf	8,6	;volatile
  1993                           
  1994                           ;lcd.c: 112:  TRISD7 = 0;
  1995  0581  1388               	bcf	8,7	;volatile
  1996  0582                     l1135:
  1997                           
  1998                           ;lcd.c: 114:  temp.Val = b;
  1999  0582  0871               	movf	lcd_put_nibble@b,w
  2000  0583  00F0               	movwf	??_lcd_put_nibble
  2001  0584  0870               	movf	??_lcd_put_nibble,w
  2002  0585  00F2               	movwf	lcd_put_nibble@temp
  2003  0586                     l1137:
  2004                           
  2005                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2006  0586  1872               	btfsc	lcd_put_nibble@temp,0
  2007  0587  2D89               	goto	u451
  2008  0588  2D8D               	goto	u450
  2009  0589                     u451:
  2010  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2011  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2012  058B  1608               	bsf	8,4	;volatile
  2013  058C  2D90               	goto	u464
  2014  058D                     u450:
  2015  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2016  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2017  058F  1208               	bcf	8,4	;volatile
  2018  0590                     u464:
  2019  0590                     l1139:
  2020                           
  2021                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2022  0590  18F2               	btfsc	lcd_put_nibble@temp,1
  2023  0591  2D93               	goto	u471
  2024  0592  2D97               	goto	u470
  2025  0593                     u471:
  2026  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0595  1688               	bsf	8,5	;volatile
  2029  0596  2D9A               	goto	u484
  2030  0597                     u470:
  2031  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0599  1288               	bcf	8,5	;volatile
  2034  059A                     u484:
  2035  059A                     l1141:
  2036                           
  2037                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2038  059A  1972               	btfsc	lcd_put_nibble@temp,2
  2039  059B  2D9D               	goto	u491
  2040  059C  2DA1               	goto	u490
  2041  059D                     u491:
  2042  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2043  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2044  059F  1708               	bsf	8,6	;volatile
  2045  05A0  2DA4               	goto	u504
  2046  05A1                     u490:
  2047  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2048  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2049  05A3  1308               	bcf	8,6	;volatile
  2050  05A4                     u504:
  2051  05A4                     l1143:
  2052                           
  2053                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2054  05A4  19F2               	btfsc	lcd_put_nibble@temp,3
  2055  05A5  2DA7               	goto	u511
  2056  05A6  2DAB               	goto	u510
  2057  05A7                     u511:
  2058  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2059  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2060  05A9  1788               	bsf	8,7	;volatile
  2061  05AA  2DAE               	goto	u524
  2062  05AB                     u510:
  2063  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2064  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2065  05AD  1388               	bcf	8,7	;volatile
  2066  05AE                     u524:
  2067                           
  2068                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2069  05AE  3006               	movlw	6
  2070  05AF  00F0               	movwf	??_lcd_put_nibble
  2071  05B0                     u867:
  2072  05B0  0BF0               	decfsz	??_lcd_put_nibble,f
  2073  05B1  2DB0               	goto	u867
  2074  05B2  0000               	nop
  2075  05B3                     l1145:
  2076                           
  2077                           ;lcd.c: 122:  RD3 = 1;
  2078  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2079  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2080  05B5  1588               	bsf	8,3	;volatile
  2081                           
  2082                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2083  05B6  3006               	movlw	6
  2084  05B7  00F0               	movwf	??_lcd_put_nibble
  2085  05B8                     u877:
  2086  05B8  0BF0               	decfsz	??_lcd_put_nibble,f
  2087  05B9  2DB8               	goto	u877
  2088  05BA  0000               	nop
  2089  05BB                     l1147:
  2090                           
  2091                           ;lcd.c: 124:  RD3 = 0;
  2092  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2093  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2094  05BD  1188               	bcf	8,3	;volatile
  2095  05BE                     l127:
  2096  05BE  0008               	return
  2097  05BF                     __end_of_lcd_put_nibble:
  2098                           
  2099                           	psect	text11
  2100  0512                     __ptext11:	
  2101 ;; *************** function _lcd_busy *****************
  2102 ;; Defined at:
  2103 ;;		line 18 in file "lcd.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  busy            1    1[COMMON] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      unsigned char 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2117 ;;      Params:         0       0       0       0       0
  2118 ;;      Locals:         1       0       0       0       0
  2119 ;;      Temps:          1       0       0       0       0
  2120 ;;      Totals:         2       0       0       0       0
  2121 ;;Total ram usage:        2 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_addCharSpecial
  2127 ;;		_lcd_gotoxy
  2128 ;;		_lcd_putc
  2129 ;;		_lcd_init
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _lcd_busy
  2135  0512                     _lcd_busy:
  2136  0512                     l1165:	
  2137                           ;incstack = 0
  2138                           ; Regs used in _lcd_busy: [wreg+status,2]
  2139                           
  2140                           
  2141                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2142  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0514  1608               	bsf	8,4	;volatile
  2145                           
  2146                           ;lcd.c: 25:  TRISD5 = 1;
  2147  0515  1688               	bsf	8,5	;volatile
  2148                           
  2149                           ;lcd.c: 26:  TRISD6 = 1;
  2150  0516  1708               	bsf	8,6	;volatile
  2151                           
  2152                           ;lcd.c: 27:  TRISD7 = 1;
  2153  0517  1788               	bsf	8,7	;volatile
  2154                           
  2155                           ;lcd.c: 29:  RD2 = 1;
  2156  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2158  051A  1508               	bsf	8,2	;volatile
  2159                           
  2160                           ;lcd.c: 30:  RD1 = 0;
  2161  051B  1088               	bcf	8,1	;volatile
  2162  051C                     l1167:
  2163                           
  2164                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2165  051C  3006               	movlw	6
  2166  051D  00F0               	movwf	??_lcd_busy
  2167  051E                     u887:
  2168  051E  0BF0               	decfsz	??_lcd_busy,f
  2169  051F  2D1E               	goto	u887
  2170  0520  0000               	nop
  2171  0521                     l1169:
  2172                           
  2173                           ;lcd.c: 32:  RD3 = 1;
  2174  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0523  1588               	bsf	8,3	;volatile
  2177                           
  2178                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2179  0524  3006               	movlw	6
  2180  0525  00F0               	movwf	??_lcd_busy
  2181  0526                     u897:
  2182  0526  0BF0               	decfsz	??_lcd_busy,f
  2183  0527  2D26               	goto	u897
  2184  0528  0000               	nop
  2185  0529                     l1171:
  2186                           
  2187                           ;lcd.c: 35:  busy = RD7;
  2188  0529  3000               	movlw	0
  2189  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2190  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2191  052C  1B88               	btfsc	8,7	;volatile
  2192  052D  3001               	movlw	1
  2193  052E  00F1               	movwf	lcd_busy@busy
  2194  052F                     l1173:
  2195                           
  2196                           ;lcd.c: 37:  RD3 = 0;
  2197  052F  1188               	bcf	8,3	;volatile
  2198  0530                     l1175:
  2199                           
  2200                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2201  0530  3006               	movlw	6
  2202  0531  00F0               	movwf	??_lcd_busy
  2203  0532                     u907:
  2204  0532  0BF0               	decfsz	??_lcd_busy,f
  2205  0533  2D32               	goto	u907
  2206  0534  0000               	nop
  2207  0535                     l1177:
  2208                           
  2209                           ;lcd.c: 39:  RD3 = 1;
  2210  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0537  1588               	bsf	8,3	;volatile
  2213  0538                     l1179:
  2214                           
  2215                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2216  0538  3006               	movlw	6
  2217  0539  00F0               	movwf	??_lcd_busy
  2218  053A                     u917:
  2219  053A  0BF0               	decfsz	??_lcd_busy,f
  2220  053B  2D3A               	goto	u917
  2221  053C  0000               	nop
  2222  053D                     l1181:
  2223                           
  2224                           ;lcd.c: 41:  RD3 = 0;
  2225  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2226  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2227  053F  1188               	bcf	8,3	;volatile
  2228  0540                     l1183:
  2229                           
  2230                           ;lcd.c: 43:  return busy;
  2231  0540  0871               	movf	lcd_busy@busy,w
  2232  0541                     l119:
  2233  0541  0008               	return
  2234  0542                     __end_of_lcd_busy:
  2235  007E                     btemp	set	126	;btemp
  2236  007E                     wtemp0	set	126
  2237                           
  2238                           	psect	config
  2239                           
  2240                           ;Config register CONFIG1 @ 0x2007
  2241                           ;	Oscillator Selection bits
  2242                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2243                           ;	Watchdog Timer Enable bit
  2244                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2245                           ;	Power-up Timer Enable bit
  2246                           ;	PWRTE = OFF, PWRT disabled
  2247                           ;	RE3/MCLR pin function select bit
  2248                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2249                           ;	Code Protection bit
  2250                           ;	CP = OFF, Program memory code protection is disabled
  2251                           ;	Data Code Protection bit
  2252                           ;	CPD = OFF, Data memory code protection is disabled
  2253                           ;	Brown Out Reset Selection bits
  2254                           ;	BOREN = OFF, BOR disabled
  2255                           ;	Internal External Switchover bit
  2256                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2257                           ;	Fail-Safe Clock Monitor Enabled bit
  2258                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2259                           ;	Low Voltage Programming Enable bit
  2260                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2261                           ;	In-Circuit Debugger Mode bit
  2262                           ;	DEBUG = 0x1, unprogrammed default
  2263  2007                     	org	8199
  2264  2007  20F2               	dw	8434
  2265                           
  2266                           ;Config register CONFIG2 @ 0x2008
  2267                           ;	Brown-out Reset Selection bit
  2268                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2269                           ;	Flash Program Memory Self Write Enable bits
  2270                           ;	WRT = OFF, Write protection off
  2271  2008                     	org	8200
  2272  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    73
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 16
		 -> main@your_name(CODE[16]), main@title(CODE[16]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 41
		 -> main@special_name_title(CODE[41]), 


Critical Paths under _main in COMMON

    _main->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_ShiftRight->_lcd_put_byte
    _lcd_ShiftLeft->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    9401
                                              0 BANK0      6     6      0
                     _addCharSpecial
                         _delay100us
                       _getLengthArr
                      _lcd_ShiftLeft
                     _lcd_ShiftRight
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           4     3      1    1409
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftRight                                       1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftLeft                                        1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _getLengthArr                                         5     3      2     134
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _delay100us                                           2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1235
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _delay100us
   _getLengthArr
   _lcd_ShiftLeft
     _lcd_put_byte
   _lcd_ShiftRight
     _lcd_put_byte
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 10 17:43:08 2021

               ??_lcd_ShiftLeft 0076                               pc 0002                              l53 04C8  
                            l46 0605                              l62 04EB                              l58 04D9  
                            l86 07F9          __end_of_lcd_put_nibble 05BF                ??_lcd_ShiftRight 0076  
                            fsr 0004                 ?_addCharSpecial 0070                   ?_lcd_put_byte 0073  
                           l130 0552                             l132 057A                             l140 0511  
                           l119 0541                             l127 05BE                             l182 0704  
                           l158 0661                             l185 04A0                             l188 04AB  
                           _GIE 005F                             _RD1 0041                             _RD2 0042  
                           _RD3 0043                             _RD4 0044                             _RD5 0045  
                           _RD6 0046                             _RD7 0047                             u510 05AB  
                           _PS0 0408                             u511 05A7                             _PS1 0409  
                           u504 05A4                             u600 04BC                             _PS2 040A  
                           u601 04BB                             u450 058D                             u530 054E  
                           u610 04DD                             u451 0589                             u531 054D  
                           u611 04DC                             u524 05AE                             u620 04EB  
                           u700 064D                             u621 04EA                             u701 064C  
                           u470 0597                             u630 06B6                             u550 04F2  
                           u710 075D                             u471 0593                             u631 06B5  
                           u551 04F1                             u711 075C                             u464 0590  
                           u640 06CA                             u560 0511                             u720 0795  
                           u545 0568                             u641 06C9                             u561 0510  
                           u721 0794                             u490 05A1                             u570 05D6  
                           u650 06DE                             u730 07AE                             u491 059D  
                           u571 05D5                             u651 06DD                             u731 07AD  
                           u715 0759                             u484 059A                             u580 05F2  
                           u660 06F0                             u740 07CF                             u581 05F1  
                           u661 06EF                             u741 07CE                             u725 0791  
                           u590 0605                             u670 0704                             u750 07F0  
                           u591 0604                             u671 0703                             u807 066F  
                           u751 07EF                             _PSA 040B                             u680 061A  
                           u817 0683                             u681 0619                             u690 0638  
                           u907 0532                             u827 0692                             u691 0637  
                           u917 053A                             u837 06A1                             u847 0557  
                           u857 055F                             u867 05B0                             u877 05B8  
                           u887 051E                             u897 0526                             fsr0 0004  
                          l1201 05C2                            l1211 05F8                            l1203 05CC  
                          l1141 059A                            l1133 057C                            l1205 05D7  
                          l1221 04C4                            l1213 04AD                            l1143 05A4  
                          l1135 0582                            l1151 0549                            l1207 05E8  
                          l1231 04CF                            l1215 04AF                            l1311 0709  
                          l1145 05B3                            l1137 0586                            l1161 0565  
                          l1153 054E                            l1209 05F2                            l1241 04D8  
                          l1233 04D2                            l1225 04C9                            l1305 04A1  
                          l1321 0728                            l1313 070D                            l1171 0529  
                          l1147 05BB                            l1139 0590                            l1163 0573  
                          l1155 0555                            l1235 04D5                            l1227 04CA  
                          l1243 04DD                            l1219 04BD                            l1307 0496  
                          l1251 0677                            l1331 075D                            l1323 073B  
                          l1315 0712                            l1181 053D                            l1173 052F  
                          l1165 0512                            l1157 055A                            l1149 0543  
                          l1237 04D6                            l1229 04CE                            l1261 0697  
                          l1253 0678                            l1245 0662                            l1341 078B  
                          l1333 0769                            l1325 073E                            l1317 0719  
                          l1309 0705                            l1183 0540                            l1175 0530  
                          l1167 051C                            l1159 0562                            l1239 04D7  
                          l1271 06CA                            l1263 06A6                            l1255 0679  
                          l1247 066B                            l1191 04F7                            l1431 0656  
                          l1343 0795                            l1335 0771                            l1327 074B  
                          l1319 071F                            l1177 0535                            l1169 0521  
                          l1281 06FA                            l1273 06D4                            l1265 06AC  
                          l1257 067F                            l1249 0674                            l1193 04F8  
                          l1353 07B0                            l1337 0776                            l1329 0753  
                          l1345 079E                            l1179 0538                            l1275 06DE  
                          l1267 06B6                            l1259 068E                            l1195 04FC  
                          l1187 04ED                            l1291 0624                            l1283 0607  
                          l1371 07F0                            l1355 07BE                            l1347 07AE  
                          l1339 0783                            l1277 06E6                            l1269 06C0  
                          l1197 0507                            l1189 04F2                            l1293 062E  
                          l1285 0608                            l1365 07D1                            l1357 07C6  
                          l1199 05C0                            l1279 06F0                            l1295 0639  
                          l1287 0610                            l1367 07DF                            l1359 07CF  
                          l1297 0643                            l1289 061B                            l1369 07E7  
                          l1299 064E                            _T0CS 040D                            _PEIE 005E  
                          _TMR0 0001                            _main 0705                    lcd_busy@busy 0071  
                          btemp 007E                            start 0000                 ?_lcd_put_nibble 0070  
                ??_lcd_put_byte 0074                           ?_main 0070           getLengthArr@character 0072  
                         main@i 0024                           pclath 000A                           status 0003  
                         wtemp0 007E                 __initialization 07FC            __end_of_getLengthArr 04C9  
                  __end_of_main 07FC                   lcd_gotoxy@col 0078                   lcd_gotoxy@row 0076  
            lcd_put_nibble@temp 0072                          ??_main 007D                          _TMR0IE 005D  
                        _TMR0IF 005A                          _TRISD1 0441                          _TRISD2 0442  
                        _TRISD3 0443                          _TRISD4 0444                          _TRISD5 0445  
                        _TRISD6 0446                          _TRISD7 0447                __end_of_lcd_busy 0542  
              __end_of_lcd_init 0705                __end_of_lcd_putc 0662                   lcd_put_byte@b 0073  
       __end_of__initialization 07FC            __end_of_lcd_put_byte 057B  __end_ofmain@special_name_title 0032  
              ??_addCharSpecial 0076                  __pcstackCOMMON 0070                   main@your_name 0032  
             lcd_gotoxy@address 0079                      _delay100us 04C9           __size_of_getLengthArr 001D  
              ??_lcd_put_nibble 0070                      __pmaintext 0705           __end_of_lcd_ShiftLeft 04A1  
                    _lcd_gotoxy 04EC                    _getLengthArr 04AC                       ?_lcd_busy 0070  
                     ?_lcd_init 0070                       ?_lcd_putc 0070                      __stringtab 0003  
       addCharSpecial@character 0079                         __ptext1 0606                         __ptext2 04EC  
                       __ptext3 0662                         __ptext4 04A1                         __ptext5 0496  
                       __ptext6 04AC                         __ptext7 04C9                         __ptext8 05BF  
                       __ptext9 0542         __size_of_lcd_ShiftRight 000B           __size_of_lcd_put_byte 0039  
                   ?_delay100us 0070                      ??_lcd_busy 0070                      ??_lcd_init 0076  
                    ??_lcd_putc 007A            end_of_initialization 07FC                  lcd_put_byte@rs 0075  
             __end_ofmain@title 0052                    _lcd_put_byte 0542                     ?_lcd_gotoxy 0076  
                    main@length 0022             __size_of_delay100us 0023             start_initialization 07FC  
           __size_of_lcd_gotoxy 0026                       ___latbits 0002                   __pcstackBANK0 0020  
               addCharSpecial@i 0077                  _lcd_ShiftRight 04A1               __size_of_lcd_busy 0030  
             __size_of_lcd_init 00A3               __size_of_lcd_putc 005C                       __pstrings 0003  
       __size_of_addCharSpecial 0047          __end_of_lcd_ShiftRight 04AC                    ??_delay100us 0072  
        __size_of_lcd_ShiftLeft 000B              __end_of_delay100us 04EC                     __stringbase 0008  
       __size_of_lcd_put_nibble 0044                 ?_lcd_ShiftRight 0070                   getLengthArr@i 0073  
                     lcd_putc@c 007C                       main@times 0020                       main@title 0042  
                  ??_lcd_gotoxy 0077                     delay100us@n 0070           __end_ofmain@your_name 0042  
            __end_of_lcd_gotoxy 0512                   _lcd_ShiftLeft 0496              __end_of__stringtab 0009  
                      __ptext10 057B                        __ptext11 0512                        _lcd_busy 0512  
                      _lcd_init 0662                        _lcd_putc 0606                   __size_of_main 00F7  
                ?_lcd_ShiftLeft 0070                  _addCharSpecial 05BF                 lcd_put_nibble@b 0071  
                 ?_getLengthArr 0070                       stringcode 0003          __end_of_addCharSpecial 0606  
        main@special_name_title 0009                  _lcd_put_nibble 057B                        stringdir 0003  
                      stringtab 0003                  ??_getLengthArr 0072  
