

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 07 06:39:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291                           
   292                           	psect	strings
   293  0003                     __pstrings:
   294  0003                     stringtab:
   295  0003                     __stringtab:
   296  0003                     stringcode:	
   297                           ;	String table - string pointers are 1 byte each
   298                           
   299  0003                     stringdir:
   300  0003  3000               	movlw	high stringdir
   301  0004  008A               	movwf	10
   302  0005  0804               	movf	4,w
   303  0006  0A84               	incf	4,f
   304  0007  0782               	addwf	2,f
   305  0008                     __stringbase:
   306  0008  3400               	retlw	0
   307  0009                     __end_of__stringtab:
   308  0009                     main@special_name_born_live:
   309  0009  340D               	retlw	13
   310  000A  3412               	retlw	18
   311  000B  3408               	retlw	8
   312  000C  3414               	retlw	20
   313  000D  3408               	retlw	8
   314  000E  3414               	retlw	20
   315  000F  341E               	retlw	30
   316  0010  3400               	retlw	0
   317  0011  3401               	retlw	1
   318  0012  340A               	retlw	10
   319  0013  3414               	retlw	20
   320  0014  3400               	retlw	0
   321  0015  341C               	retlw	28
   322  0016  3414               	retlw	20
   323  0017  341F               	retlw	31
   324  0018  3400               	retlw	0
   325  0019  3400               	retlw	0
   326  001A  3404               	retlw	4
   327  001B  3408               	retlw	8
   328  001C  3400               	retlw	0
   329  001D  341C               	retlw	28
   330  001E  3414               	retlw	20
   331  001F  341E               	retlw	30
   332  0020  3400               	retlw	0
   333  0021  3408               	retlw	8
   334  0022  3404               	retlw	4
   335  0023  3400               	retlw	0
   336  0024  340C               	retlw	12
   337  0025  3412               	retlw	18
   338  0026  3412               	retlw	18
   339  0027  340F               	retlw	15
   340  0028  3400               	retlw	0
   341  0029  3400               	retlw	0
   342  002A  3406               	retlw	6
   343  002B  3402               	retlw	2
   344  002C  340C               	retlw	12
   345  002D  3412               	retlw	18
   346  002E  3412               	retlw	18
   347  002F  340C               	retlw	12
   348  0030  3400               	retlw	0
   349  0031  3408               	retlw	8
   350  0032  3414               	retlw	20
   351  0033  3400               	retlw	0
   352  0034  341C               	retlw	28
   353  0035  3414               	retlw	20
   354  0036  341E               	retlw	30
   355  0037  3408               	retlw	8
   356  0038  3400               	retlw	0
   357  0039  3499               	retlw	153
   358  003A                     __end_ofmain@special_name_born_live:
   359  003A                     main@special_HKTT_class:
   360  003A  340E               	retlw	14
   361  003B  3409               	retlw	9
   362  003C  3409               	retlw	9
   363  003D  341D               	retlw	29
   364  003E  3409               	retlw	9
   365  003F  3409               	retlw	9
   366  0040  340E               	retlw	14
   367  0041  3400               	retlw	0
   368  0042  3408               	retlw	8
   369  0043  3404               	retlw	4
   370  0044  3400               	retlw	0
   371  0045  340C               	retlw	12
   372  0046  3412               	retlw	18
   373  0047  3412               	retlw	18
   374  0048  340C               	retlw	12
   375  0049  3400               	retlw	0
   376  004A  3401               	retlw	1
   377  004B  340A               	retlw	10
   378  004C  3414               	retlw	20
   379  004D  3400               	retlw	0
   380  004E  341C               	retlw	28
   381  004F  3414               	retlw	20
   382  0050  341F               	retlw	31
   383  0051  3400               	retlw	0
   384  0052  3401               	retlw	1
   385  0053  340D               	retlw	13
   386  0054  3405               	retlw	5
   387  0055  341C               	retlw	28
   388  0056  3414               	retlw	20
   389  0057  3414               	retlw	20
   390  0058  341C               	retlw	28
   391  0059  3400               	retlw	0
   392  005A  3499               	retlw	153
   393  005B                     __end_ofmain@special_HKTT_class:
   394  005B                     main@your_born:
   395  005B  344E               	retlw	78
   396  005C  3467               	retlw	103
   397  005D  3403               	retlw	3
   398  005E  3479               	retlw	121
   399  005F  3453               	retlw	83
   400  0060  3469               	retlw	105
   401  0061  346E               	retlw	110
   402  0062  3468               	retlw	104
   403  0063  343A               	retlw	58
   404  0064  3431               	retlw	49
   405  0065  3432               	retlw	50
   406  0066  342F               	retlw	47
   407  0067  3432               	retlw	50
   408  0068  3430               	retlw	48
   409  0069  3430               	retlw	48
   410  006A  3431               	retlw	49
   411  006B  340A               	retlw	10
   412  006C                     __end_ofmain@your_born:
   413  006C                     main@your_name:
   414  006C  344E               	retlw	78
   415  006D  3467               	retlw	103
   416  006E  3475               	retlw	117
   417  006F  3479               	retlw	121
   418  0070  3400               	retlw	0
   419  0071  346E               	retlw	110
   420  0072  3420               	retlw	32
   421  0073  3454               	retlw	84
   422  0074  3401               	retlw	1
   423  0075  346E               	retlw	110
   424  0076  3420               	retlw	32
   425  0077  3450               	retlw	80
   426  0078  3468               	retlw	104
   427  0079  3402               	retlw	2
   428  007A  3470               	retlw	112
   429  007B  340A               	retlw	10
   430  007C                     __end_ofmain@your_name:
   431  007C                     main@MSSV:
   432  007C  344D               	retlw	77
   433  007D  3453               	retlw	83
   434  007E  3453               	retlw	83
   435  007F  3456               	retlw	86
   436  0080  343A               	retlw	58
   437  0081  3431               	retlw	49
   438  0082  3439               	retlw	57
   439  0083  3434               	retlw	52
   440  0084  3433               	retlw	51
   441  0085  3436               	retlw	54
   442  0086  3434               	retlw	52
   443  0087  3438               	retlw	56
   444  0088  3431               	retlw	49
   445  0089  340A               	retlw	10
   446  008A  3400               	retlw	0
   447  008B                     __end_ofmain@MSSV:
   448  008B                     main@your_live:
   449  008B  344E               	retlw	78
   450  008C  3404               	retlw	4
   451  008D  3469               	retlw	105
   452  008E  3453               	retlw	83
   453  008F  343A               	retlw	58
   454  0090  344E               	retlw	78
   455  0091  3469               	retlw	105
   456  0092  346E               	retlw	110
   457  0093  3468               	retlw	104
   458  0094  3454               	retlw	84
   459  0095  3468               	retlw	104
   460  0096  3475               	retlw	117
   461  0097  3405               	retlw	5
   462  0098  346E               	retlw	110
   463  0099  340A               	retlw	10
   464  009A                     __end_ofmain@your_live:
   465  009A                     main@class:
   466  009A  344C               	retlw	76
   467  009B  3403               	retlw	3
   468  009C  3470               	retlw	112
   469  009D  343A               	retlw	58
   470  009E  3400               	retlw	0
   471  009F  3448               	retlw	72
   472  00A0  3456               	retlw	86
   473  00A1  3454               	retlw	84
   474  00A2  3431               	retlw	49
   475  00A3  3435               	retlw	53
   476  00A4  3441               	retlw	65
   477  00A5  340A               	retlw	10
   478  00A6                     __end_ofmain@class:
   479  00A6                     main@HKTT:
   480  00A6  3448               	retlw	72
   481  00A7  344B               	retlw	75
   482  00A8  3454               	retlw	84
   483  00A9  3454               	retlw	84
   484  00AA  343A               	retlw	58
   485  00AB  3447               	retlw	71
   486  00AC  3401               	retlw	1
   487  00AD  3420               	retlw	32
   488  00AE  3456               	retlw	86
   489  00AF  3402               	retlw	2
   490  00B0  3470               	retlw	112
   491  00B1  340A               	retlw	10
   492  00B2                     __end_ofmain@HKTT:
   493  0044                     _RD4	set	68
   494  0045                     _RD5	set	69
   495  0046                     _RD6	set	70
   496  0047                     _RD7	set	71
   497  0043                     _RD3	set	67
   498  0041                     _RD1	set	65
   499  0042                     _RD2	set	66
   500  0442                     _TRISD2	set	1090
   501  0441                     _TRISD1	set	1089
   502  0443                     _TRISD3	set	1091
   503  0447                     _TRISD7	set	1095
   504  0446                     _TRISD6	set	1094
   505  0445                     _TRISD5	set	1093
   506  0444                     _TRISD4	set	1092
   507                           
   508                           	psect	cinit
   509  07FC                     start_initialization:	
   510                           ; #config settings
   511                           
   512  07FC                     __initialization:
   513  07FC                     end_of_initialization:	
   514                           ;End of C runtime variable initialization code
   515                           
   516  07FC                     __end_of__initialization:
   517  07FC  0183               	clrf	3
   518  07FD  120A  118A  2E18   	ljmp	_main	;jump to C main() function
   519                           
   520                           	psect	cstackCOMMON
   521  0070                     __pcstackCOMMON:
   522  0070                     ?_lcd_busy:
   523  0070                     ??_lcd_busy:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_lcd_put_nibble:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_lcd_put_nibble:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_lcd_putc:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_lcd_puts:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_lcd_init:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_lcd_ShiftLeft:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_lcd_ShiftRight:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_addCharSpecial:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_main:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_getLengthArr:	
   554                           ; 1 bytes @ 0x0
   555                           
   556                           
   557                           ; 2 bytes @ 0x0
   558  0070                     	ds	1
   559  0071                     lcd_busy@busy:
   560  0071                     lcd_put_nibble@b:	
   561                           ; 1 bytes @ 0x1
   562                           
   563                           
   564                           ; 1 bytes @ 0x1
   565  0071                     	ds	1
   566  0072                     ??_getLengthArr:
   567  0072                     lcd_put_nibble@temp:	
   568                           ; 1 bytes @ 0x2
   569                           
   570  0072                     getLengthArr@i:	
   571                           ; 1 bytes @ 0x2
   572                           
   573                           
   574                           ; 2 bytes @ 0x2
   575  0072                     	ds	1
   576  0073                     ?_lcd_put_byte:
   577  0073                     lcd_put_byte@b:	
   578                           ; 1 bytes @ 0x3
   579                           
   580                           
   581                           ; 1 bytes @ 0x3
   582  0073                     	ds	1
   583  0074                     ??_lcd_put_byte:
   584  0074                     getLengthArr@character:	
   585                           ; 1 bytes @ 0x4
   586                           
   587                           
   588                           ; 1 bytes @ 0x4
   589  0074                     	ds	1
   590  0075                     lcd_put_byte@rs:
   591                           
   592                           ; 1 bytes @ 0x5
   593  0075                     	ds	1
   594  0076                     ?_lcd_gotoxy:
   595  0076                     ??_lcd_init:	
   596                           ; 1 bytes @ 0x6
   597                           
   598  0076                     ??_lcd_ShiftLeft:	
   599                           ; 1 bytes @ 0x6
   600                           
   601  0076                     ??_lcd_ShiftRight:	
   602                           ; 1 bytes @ 0x6
   603                           
   604  0076                     ??_addCharSpecial:	
   605                           ; 1 bytes @ 0x6
   606                           
   607  0076                     lcd_gotoxy@row:	
   608                           ; 1 bytes @ 0x6
   609                           
   610                           
   611                           ; 1 bytes @ 0x6
   612  0076                     	ds	1
   613  0077                     ??_lcd_gotoxy:
   614  0077                     addCharSpecial@i:	
   615                           ; 1 bytes @ 0x7
   616                           
   617                           
   618                           ; 2 bytes @ 0x7
   619  0077                     	ds	1
   620  0078                     lcd_gotoxy@col:
   621                           
   622                           ; 1 bytes @ 0x8
   623  0078                     	ds	1
   624  0079                     lcd_gotoxy@address:
   625  0079                     addCharSpecial@character:	
   626                           ; 1 bytes @ 0x9
   627                           
   628                           
   629                           ; 1 bytes @ 0x9
   630  0079                     	ds	1
   631  007A                     ??_lcd_putc:
   632                           
   633                           ; 1 bytes @ 0xA
   634  007A                     	ds	2
   635  007C                     lcd_putc@c:
   636                           
   637                           ; 1 bytes @ 0xC
   638  007C                     	ds	1
   639  007D                     ??_lcd_puts:
   640                           
   641                           ; 1 bytes @ 0xD
   642  007D                     	ds	1
   643                           
   644                           	psect	cstackBANK0
   645  0020                     __pcstackBANK0:
   646  0020                     lcd_puts@s:
   647                           
   648                           ; 1 bytes @ 0x0
   649  0020                     	ds	1
   650  0021                     ??_main:
   651                           
   652                           ; 1 bytes @ 0x1
   653  0021                     	ds	3
   654  0024                     main@times:
   655                           
   656                           ; 2 bytes @ 0x4
   657  0024                     	ds	2
   658  0026                     main@length:
   659                           
   660                           ; 2 bytes @ 0x6
   661  0026                     	ds	2
   662  0028                     main@i:
   663                           
   664                           ; 2 bytes @ 0x8
   665  0028                     	ds	2
   666                           
   667                           	psect	maintext
   668  0618                     __pmaintext:	
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 51 in file "newmain.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  i               2    8[BANK0 ] unsigned int 
   679 ;;  length          2    6[BANK0 ] unsigned int 
   680 ;;  times           2    4[BANK0 ] unsigned int 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : B00/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       6       0       0       0
   692 ;;      Temps:          0       3       0       0       0
   693 ;;      Totals:         0       9       0       0       0
   694 ;;Total ram usage:        9 bytes
   695 ;; Hardware stack levels required when called: 5
   696 ;; This function calls:
   697 ;;		_addCharSpecial
   698 ;;		_getLengthArr
   699 ;;		_lcd_ShiftLeft
   700 ;;		_lcd_ShiftRight
   701 ;;		_lcd_gotoxy
   702 ;;		_lcd_init
   703 ;;		_lcd_putc
   704 ;;		_lcd_puts
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _main
   712  0618                     _main:
   713  0618                     l1353:	
   714                           ;incstack = 0
   715                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   716                           
   717  0618  1283               	bcf	3,5	;RP0=0, select bank0
   718  0619  1303               	bcf	3,6	;RP1=0, select bank0
   719  061A  01A6               	clrf	main@length
   720  061B  01A7               	clrf	main@length+1
   721  061C                     l1355:
   722  061C  3003               	movlw	3
   723  061D  00A4               	movwf	main@times
   724  061E  3000               	movlw	0
   725  061F  00A5               	movwf	main@times+1
   726  0620                     l1357:
   727                           
   728                           ;newmain.c: 77:     lcd_init();
   729  0620  120A  118A  2575  120A  118A  	fcall	_lcd_init
   730  0625                     l1359:
   731                           
   732                           ;newmain.c: 78:     addCharSpecial(special_name_born_live);
   733  0625  3001               	movlw	(low ((main@special_name_born_live-__stringbase)| (0+32768)))& (0+255)
   734  0626  120A  118A  24D2  120A  118A  	fcall	_addCharSpecial
   735  062B                     l1361:
   736                           
   737                           ;newmain.c: 79:     length = getLengthArr(your_name);
   738  062B  3064               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   739  062C  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   740  0631  0871               	movf	?_getLengthArr+1,w
   741  0632  1283               	bcf	3,5	;RP0=0, select bank0
   742  0633  1303               	bcf	3,6	;RP1=0, select bank0
   743  0634  00A7               	movwf	main@length+1
   744  0635  0870               	movf	?_getLengthArr,w
   745  0636  00A6               	movwf	main@length
   746                           
   747                           ;newmain.c: 81:     while(times--) {
   748  0637  2E93               	goto	l1383
   749  0638                     l1363:
   750                           
   751                           ;newmain.c: 82:         lcd_putc('\f');
   752  0638  300C               	movlw	12
   753  0639  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   754  063E                     l1365:
   755                           
   756                           ;newmain.c: 83:         _delay((unsigned long)((1000/2)*(4000000/4000.0)));
   757  063E  3003               	movlw	3
   758  063F  1283               	bcf	3,5	;RP0=0, select bank0
   759  0640  1303               	bcf	3,6	;RP1=0, select bank0
   760  0641  00A3               	movwf	??_main+2
   761  0642  308A               	movlw	138
   762  0643  00A2               	movwf	??_main+1
   763  0644  3055               	movlw	85
   764  0645  00A1               	movwf	??_main
   765  0646                     u827:
   766  0646  0BA1               	decfsz	??_main,f
   767  0647  2E46               	goto	u827
   768  0648  0BA2               	decfsz	??_main+1,f
   769  0649  2E46               	goto	u827
   770  064A  0BA3               	decfsz	??_main+2,f
   771  064B  2E46               	goto	u827
   772  064C                     l1367:
   773                           
   774                           ;newmain.c: 84:         lcd_gotoxy(0, 0);
   775  064C  01F6               	clrf	lcd_gotoxy@row
   776  064D  3000               	movlw	0
   777  064E  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   778  0653                     l1369:
   779                           
   780                           ;newmain.c: 85:         for(i = 0; i < length; i++) {
   781  0653  1283               	bcf	3,5	;RP0=0, select bank0
   782  0654  1303               	bcf	3,6	;RP1=0, select bank0
   783  0655  01A8               	clrf	main@i
   784  0656  01A9               	clrf	main@i+1
   785  0657  2E6D               	goto	l1375
   786  0658                     l1371:
   787                           
   788                           ;newmain.c: 86:             lcd_putc(your_name[i]);
   789  0658  0828               	movf	main@i,w
   790  0659  3E64               	addlw	low ((main@your_name-__stringbase)| (0+32768))
   791  065A  0084               	movwf	4
   792  065B  120A  118A  2003  120A  118A  	fcall	stringdir
   793  0660  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   794  0665                     l1373:
   795                           
   796                           ;newmain.c: 87:         }
   797  0665  3001               	movlw	1
   798  0666  1283               	bcf	3,5	;RP0=0, select bank0
   799  0667  1303               	bcf	3,6	;RP1=0, select bank0
   800  0668  07A8               	addwf	main@i,f
   801  0669  1803               	skipnc
   802  066A  0AA9               	incf	main@i+1,f
   803  066B  3000               	movlw	0
   804  066C  07A9               	addwf	main@i+1,f
   805  066D                     l1375:
   806  066D  0827               	movf	main@length+1,w
   807  066E  0229               	subwf	main@i+1,w
   808  066F  1D03               	skipz
   809  0670  2E73               	goto	u745
   810  0671  0826               	movf	main@length,w
   811  0672  0228               	subwf	main@i,w
   812  0673                     u745:
   813  0673  1C03               	skipc
   814  0674  2E76               	goto	u741
   815  0675  2E77               	goto	u740
   816  0676                     u741:
   817  0676  2E58               	goto	l1371
   818  0677                     u740:
   819  0677                     l1377:
   820                           
   821                           ;newmain.c: 88:         lcd_gotoxy(0, 1);
   822  0677  01F6               	clrf	lcd_gotoxy@row
   823  0678  0AF6               	incf	lcd_gotoxy@row,f
   824  0679  3000               	movlw	0
   825  067A  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   826  067F                     l1379:
   827                           
   828                           ;newmain.c: 89:         lcd_puts(MSSV);
   829  067F  3074               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   830  0680  120A  118A  23DC  120A  118A  	fcall	_lcd_puts
   831  0685                     l1381:
   832                           
   833                           ;newmain.c: 90:         _delay((unsigned long)((1000/2)*(4000000/4000.0)));
   834  0685  3003               	movlw	3
   835  0686  1283               	bcf	3,5	;RP0=0, select bank0
   836  0687  1303               	bcf	3,6	;RP1=0, select bank0
   837  0688  00A3               	movwf	??_main+2
   838  0689  308A               	movlw	138
   839  068A  00A2               	movwf	??_main+1
   840  068B  3055               	movlw	85
   841  068C  00A1               	movwf	??_main
   842  068D                     u837:
   843  068D  0BA1               	decfsz	??_main,f
   844  068E  2E8D               	goto	u837
   845  068F  0BA2               	decfsz	??_main+1,f
   846  0690  2E8D               	goto	u837
   847  0691  0BA3               	decfsz	??_main+2,f
   848  0692  2E8D               	goto	u837
   849  0693                     l1383:
   850                           
   851                           ;newmain.c: 81:     while(times--) {
   852  0693  3001               	movlw	1
   853  0694  1283               	bcf	3,5	;RP0=0, select bank0
   854  0695  1303               	bcf	3,6	;RP1=0, select bank0
   855  0696  02A4               	subwf	main@times,f
   856  0697  3000               	movlw	0
   857  0698  1C03               	skipc
   858  0699  03A5               	decf	main@times+1,f
   859  069A  02A5               	subwf	main@times+1,f
   860  069B  0A24               	incf	main@times,w
   861  069C  1D03               	skipz
   862  069D  2EA2               	goto	u751
   863  069E  0A25               	incf	main@times+1,w
   864  069F  1D03               	btfss	3,2
   865  06A0  2EA2               	goto	u751
   866  06A1  2EA3               	goto	u750
   867  06A2                     u751:
   868  06A2  2E38               	goto	l1363
   869  06A3                     u750:
   870  06A3                     l1385:
   871                           
   872                           ;newmain.c: 93:     lcd_putc('\f');
   873  06A3  300C               	movlw	12
   874  06A4  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   875  06A9                     l1387:
   876                           
   877                           ;newmain.c: 94:     lcd_gotoxy(0, 0);
   878  06A9  01F6               	clrf	lcd_gotoxy@row
   879  06AA  3000               	movlw	0
   880  06AB  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   881  06B0                     l1389:
   882                           
   883                           ;newmain.c: 95:     length = getLengthArr(your_born);
   884  06B0  3053               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   885  06B1  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   886  06B6  0871               	movf	?_getLengthArr+1,w
   887  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   888  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   889  06B9  00A7               	movwf	main@length+1
   890  06BA  0870               	movf	?_getLengthArr,w
   891  06BB  00A6               	movwf	main@length
   892  06BC                     l1391:
   893                           
   894                           ;newmain.c: 96:     for(i = 0; i < length; i++) {
   895  06BC  01A8               	clrf	main@i
   896  06BD  01A9               	clrf	main@i+1
   897  06BE  2ED4               	goto	l1397
   898  06BF                     l1393:
   899                           
   900                           ;newmain.c: 97:         lcd_putc(your_born[i]);
   901  06BF  0828               	movf	main@i,w
   902  06C0  3E53               	addlw	low ((main@your_born-__stringbase)| (0+32768))
   903  06C1  0084               	movwf	4
   904  06C2  120A  118A  2003  120A  118A  	fcall	stringdir
   905  06C7  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   906  06CC                     l1395:
   907                           
   908                           ;newmain.c: 98:     }
   909  06CC  3001               	movlw	1
   910  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   911  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   912  06CF  07A8               	addwf	main@i,f
   913  06D0  1803               	skipnc
   914  06D1  0AA9               	incf	main@i+1,f
   915  06D2  3000               	movlw	0
   916  06D3  07A9               	addwf	main@i+1,f
   917  06D4                     l1397:
   918  06D4  0827               	movf	main@length+1,w
   919  06D5  0229               	subwf	main@i+1,w
   920  06D6  1D03               	skipz
   921  06D7  2EDA               	goto	u765
   922  06D8  0826               	movf	main@length,w
   923  06D9  0228               	subwf	main@i,w
   924  06DA                     u765:
   925  06DA  1C03               	skipc
   926  06DB  2EDD               	goto	u761
   927  06DC  2EDE               	goto	u760
   928  06DD                     u761:
   929  06DD  2EBF               	goto	l1393
   930  06DE                     u760:
   931  06DE                     l1399:
   932                           
   933                           ;newmain.c: 99:     lcd_gotoxy(0, 1);
   934  06DE  01F6               	clrf	lcd_gotoxy@row
   935  06DF  0AF6               	incf	lcd_gotoxy@row,f
   936  06E0  3000               	movlw	0
   937  06E1  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   938  06E6                     l1401:
   939                           
   940                           ;newmain.c: 100:     length = getLengthArr(your_live);
   941  06E6  3083               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   942  06E7  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   943  06EC  0871               	movf	?_getLengthArr+1,w
   944  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   945  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   946  06EF  00A7               	movwf	main@length+1
   947  06F0  0870               	movf	?_getLengthArr,w
   948  06F1  00A6               	movwf	main@length
   949  06F2                     l1403:
   950                           
   951                           ;newmain.c: 101:     for(i = 0; i < length; i++) {
   952  06F2  01A8               	clrf	main@i
   953  06F3  01A9               	clrf	main@i+1
   954  06F4  2F0A               	goto	l1409
   955  06F5                     l1405:
   956                           
   957                           ;newmain.c: 102:         lcd_putc(your_live[i]);
   958  06F5  0828               	movf	main@i,w
   959  06F6  3E83               	addlw	low ((main@your_live-__stringbase)| (0+32768))
   960  06F7  0084               	movwf	4
   961  06F8  120A  118A  2003  120A  118A  	fcall	stringdir
   962  06FD  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   963  0702                     l1407:
   964                           
   965                           ;newmain.c: 103:     }
   966  0702  3001               	movlw	1
   967  0703  1283               	bcf	3,5	;RP0=0, select bank0
   968  0704  1303               	bcf	3,6	;RP1=0, select bank0
   969  0705  07A8               	addwf	main@i,f
   970  0706  1803               	skipnc
   971  0707  0AA9               	incf	main@i+1,f
   972  0708  3000               	movlw	0
   973  0709  07A9               	addwf	main@i+1,f
   974  070A                     l1409:
   975  070A  0827               	movf	main@length+1,w
   976  070B  0229               	subwf	main@i+1,w
   977  070C  1D03               	skipz
   978  070D  2F10               	goto	u775
   979  070E  0826               	movf	main@length,w
   980  070F  0228               	subwf	main@i,w
   981  0710                     u775:
   982  0710  1C03               	skipc
   983  0711  2F13               	goto	u771
   984  0712  2F14               	goto	u770
   985  0713                     u771:
   986  0713  2EF5               	goto	l1405
   987  0714                     u770:
   988  0714                     l1411:
   989                           
   990                           ;newmain.c: 104:     _delay((unsigned long)((500)*(4000000/4000.0)));
   991  0714  3003               	movlw	3
   992  0715  1283               	bcf	3,5	;RP0=0, select bank0
   993  0716  1303               	bcf	3,6	;RP1=0, select bank0
   994  0717  00A3               	movwf	??_main+2
   995  0718  308A               	movlw	138
   996  0719  00A2               	movwf	??_main+1
   997  071A  3055               	movlw	85
   998  071B  00A1               	movwf	??_main
   999  071C                     u847:
  1000  071C  0BA1               	decfsz	??_main,f
  1001  071D  2F1C               	goto	u847
  1002  071E  0BA2               	decfsz	??_main+1,f
  1003  071F  2F1C               	goto	u847
  1004  0720  0BA3               	decfsz	??_main+2,f
  1005  0721  2F1C               	goto	u847
  1006  0722                     l1413:
  1007                           
  1008                           ;newmain.c: 105:     for(i = 0; i < 16; i++) {
  1009  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0724  01A8               	clrf	main@i
  1012  0725  01A9               	clrf	main@i+1
  1013  0726                     l1419:
  1014                           
  1015                           ;newmain.c: 106:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1016  0726  3002               	movlw	2
  1017  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1019  0729  00A3               	movwf	??_main+2
  1020  072A  3004               	movlw	4
  1021  072B  00A2               	movwf	??_main+1
  1022  072C  30B9               	movlw	185
  1023  072D  00A1               	movwf	??_main
  1024  072E                     u857:
  1025  072E  0BA1               	decfsz	??_main,f
  1026  072F  2F2E               	goto	u857
  1027  0730  0BA2               	decfsz	??_main+1,f
  1028  0731  2F2E               	goto	u857
  1029  0732  0BA3               	decfsz	??_main+2,f
  1030  0733  2F2E               	goto	u857
  1031  0734  2F35               	nop2
  1032  0735                     l1421:
  1033                           
  1034                           ;newmain.c: 107:         lcd_ShiftRight();
  1035  0735  120A  118A  23B4  120A  118A  	fcall	_lcd_ShiftRight
  1036  073A                     l1423:
  1037                           
  1038                           ;newmain.c: 108:     }
  1039  073A  3001               	movlw	1
  1040  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1041  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1042  073D  07A8               	addwf	main@i,f
  1043  073E  1803               	skipnc
  1044  073F  0AA9               	incf	main@i+1,f
  1045  0740  3000               	movlw	0
  1046  0741  07A9               	addwf	main@i+1,f
  1047  0742                     l1425:
  1048  0742  3000               	movlw	0
  1049  0743  0229               	subwf	main@i+1,w
  1050  0744  3010               	movlw	16
  1051  0745  1903               	skipnz
  1052  0746  0228               	subwf	main@i,w
  1053  0747  1C03               	skipc
  1054  0748  2F4A               	goto	u781
  1055  0749  2F4B               	goto	u780
  1056  074A                     u781:
  1057  074A  2F26               	goto	l1419
  1058  074B                     u780:
  1059  074B                     l1427:
  1060                           
  1061                           ;newmain.c: 110:     addCharSpecial(special_HKTT_class);
  1062  074B  3032               	movlw	(low ((main@special_HKTT_class-__stringbase)| (0+32768)))& (0+255)
  1063  074C  120A  118A  24D2  120A  118A  	fcall	_addCharSpecial
  1064                           
  1065                           ;newmain.c: 111:     lcd_putc('\f');
  1066  0751  300C               	movlw	12
  1067  0752  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1068  0757                     l1429:
  1069                           
  1070                           ;newmain.c: 112:     lcd_gotoxy(0, 0);
  1071  0757  01F6               	clrf	lcd_gotoxy@row
  1072  0758  3000               	movlw	0
  1073  0759  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1074  075E                     l1431:
  1075                           
  1076                           ;newmain.c: 113:     length = getLengthArr(HKTT);
  1077  075E  309E               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
  1078  075F  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
  1079  0764  0871               	movf	?_getLengthArr+1,w
  1080  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0767  00A7               	movwf	main@length+1
  1083  0768  0870               	movf	?_getLengthArr,w
  1084  0769  00A6               	movwf	main@length
  1085  076A                     l1433:
  1086                           
  1087                           ;newmain.c: 114:     for(i = 0; i < length; i++) {
  1088  076A  01A8               	clrf	main@i
  1089  076B  01A9               	clrf	main@i+1
  1090  076C  2F82               	goto	l1439
  1091  076D                     l1435:
  1092                           
  1093                           ;newmain.c: 115:         lcd_putc(HKTT[i]);
  1094  076D  0828               	movf	main@i,w
  1095  076E  3E9E               	addlw	low ((main@HKTT-__stringbase)| (0+32768))
  1096  076F  0084               	movwf	4
  1097  0770  120A  118A  2003  120A  118A  	fcall	stringdir
  1098  0775  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1099  077A                     l1437:
  1100                           
  1101                           ;newmain.c: 116:     }
  1102  077A  3001               	movlw	1
  1103  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1104  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1105  077D  07A8               	addwf	main@i,f
  1106  077E  1803               	skipnc
  1107  077F  0AA9               	incf	main@i+1,f
  1108  0780  3000               	movlw	0
  1109  0781  07A9               	addwf	main@i+1,f
  1110  0782                     l1439:
  1111  0782  0827               	movf	main@length+1,w
  1112  0783  0229               	subwf	main@i+1,w
  1113  0784  1D03               	skipz
  1114  0785  2F88               	goto	u795
  1115  0786  0826               	movf	main@length,w
  1116  0787  0228               	subwf	main@i,w
  1117  0788                     u795:
  1118  0788  1C03               	skipc
  1119  0789  2F8B               	goto	u791
  1120  078A  2F8C               	goto	u790
  1121  078B                     u791:
  1122  078B  2F6D               	goto	l1435
  1123  078C                     u790:
  1124  078C                     l1441:
  1125                           
  1126                           ;newmain.c: 117:     lcd_gotoxy(0, 1);
  1127  078C  01F6               	clrf	lcd_gotoxy@row
  1128  078D  0AF6               	incf	lcd_gotoxy@row,f
  1129  078E  3000               	movlw	0
  1130  078F  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1131  0794                     l1443:
  1132                           
  1133                           ;newmain.c: 118:     length = getLengthArr(class);
  1134  0794  3092               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
  1135  0795  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
  1136  079A  0871               	movf	?_getLengthArr+1,w
  1137  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1138  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1139  079D  00A7               	movwf	main@length+1
  1140  079E  0870               	movf	?_getLengthArr,w
  1141  079F  00A6               	movwf	main@length
  1142  07A0                     l1445:
  1143                           
  1144                           ;newmain.c: 119:     for(i = 0; i < length; i++) {
  1145  07A0  01A8               	clrf	main@i
  1146  07A1  01A9               	clrf	main@i+1
  1147  07A2  2FB8               	goto	l1451
  1148  07A3                     l1447:
  1149                           
  1150                           ;newmain.c: 120:         lcd_putc(class[i]);
  1151  07A3  0828               	movf	main@i,w
  1152  07A4  3E92               	addlw	low ((main@class-__stringbase)| (0+32768))
  1153  07A5  0084               	movwf	4
  1154  07A6  120A  118A  2003  120A  118A  	fcall	stringdir
  1155  07AB  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1156  07B0                     l1449:
  1157                           
  1158                           ;newmain.c: 121:     }
  1159  07B0  3001               	movlw	1
  1160  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1161  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1162  07B3  07A8               	addwf	main@i,f
  1163  07B4  1803               	skipnc
  1164  07B5  0AA9               	incf	main@i+1,f
  1165  07B6  3000               	movlw	0
  1166  07B7  07A9               	addwf	main@i+1,f
  1167  07B8                     l1451:
  1168  07B8  0827               	movf	main@length+1,w
  1169  07B9  0229               	subwf	main@i+1,w
  1170  07BA  1D03               	skipz
  1171  07BB  2FBE               	goto	u805
  1172  07BC  0826               	movf	main@length,w
  1173  07BD  0228               	subwf	main@i,w
  1174  07BE                     u805:
  1175  07BE  1C03               	skipc
  1176  07BF  2FC1               	goto	u801
  1177  07C0  2FC2               	goto	u800
  1178  07C1                     u801:
  1179  07C1  2FA3               	goto	l1447
  1180  07C2                     u800:
  1181  07C2                     l1453:
  1182                           
  1183                           ;newmain.c: 122:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1184  07C2  3003               	movlw	3
  1185  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1186  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1187  07C5  00A3               	movwf	??_main+2
  1188  07C6  308A               	movlw	138
  1189  07C7  00A2               	movwf	??_main+1
  1190  07C8  3055               	movlw	85
  1191  07C9  00A1               	movwf	??_main
  1192  07CA                     u867:
  1193  07CA  0BA1               	decfsz	??_main,f
  1194  07CB  2FCA               	goto	u867
  1195  07CC  0BA2               	decfsz	??_main+1,f
  1196  07CD  2FCA               	goto	u867
  1197  07CE  0BA3               	decfsz	??_main+2,f
  1198  07CF  2FCA               	goto	u867
  1199  07D0                     l1455:
  1200                           
  1201                           ;newmain.c: 123:     for(i = 0; i < 16; i++) {
  1202  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1203  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1204  07D2  01A8               	clrf	main@i
  1205  07D3  01A9               	clrf	main@i+1
  1206  07D4                     l1461:
  1207                           
  1208                           ;newmain.c: 124:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1209  07D4  3002               	movlw	2
  1210  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1211  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1212  07D7  00A3               	movwf	??_main+2
  1213  07D8  3004               	movlw	4
  1214  07D9  00A2               	movwf	??_main+1
  1215  07DA  30B9               	movlw	185
  1216  07DB  00A1               	movwf	??_main
  1217  07DC                     u877:
  1218  07DC  0BA1               	decfsz	??_main,f
  1219  07DD  2FDC               	goto	u877
  1220  07DE  0BA2               	decfsz	??_main+1,f
  1221  07DF  2FDC               	goto	u877
  1222  07E0  0BA3               	decfsz	??_main+2,f
  1223  07E1  2FDC               	goto	u877
  1224  07E2  2FE3               	nop2
  1225  07E3                     l1463:
  1226                           
  1227                           ;newmain.c: 125:         lcd_ShiftLeft();
  1228  07E3  120A  118A  23A9  120A  118A  	fcall	_lcd_ShiftLeft
  1229  07E8                     l1465:
  1230                           
  1231                           ;newmain.c: 126:     }
  1232  07E8  3001               	movlw	1
  1233  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1234  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1235  07EB  07A8               	addwf	main@i,f
  1236  07EC  1803               	skipnc
  1237  07ED  0AA9               	incf	main@i+1,f
  1238  07EE  3000               	movlw	0
  1239  07EF  07A9               	addwf	main@i+1,f
  1240  07F0                     l1467:
  1241  07F0  3000               	movlw	0
  1242  07F1  0229               	subwf	main@i+1,w
  1243  07F2  3010               	movlw	16
  1244  07F3  1903               	skipnz
  1245  07F4  0228               	subwf	main@i,w
  1246  07F5  1C03               	skipc
  1247  07F6  2FF8               	goto	u811
  1248  07F7  2FF9               	goto	u810
  1249  07F8                     u811:
  1250  07F8  2FD4               	goto	l1461
  1251  07F9                     u810:
  1252  07F9                     l203:
  1253  07F9  120A  118A  2800   	ljmp	start
  1254  07FC                     __end_of_main:
  1255                           
  1256                           	psect	text1
  1257  03DC                     __ptext1:	
  1258 ;; *************** function _lcd_puts *****************
  1259 ;; Defined at:
  1260 ;;		line 224 in file "lcd.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  s               1    wreg     PTR const unsigned char 
  1263 ;;		 -> main@MSSV(15), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1266 ;;		 -> main@MSSV(15), 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       0       0       0
  1277 ;;      Locals:         0       1       0       0       0
  1278 ;;      Temps:          1       0       0       0       0
  1279 ;;      Totals:         1       1       0       0       0
  1280 ;;Total ram usage:        2 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 4
  1283 ;; This function calls:
  1284 ;;		_lcd_putc
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _lcd_puts
  1292  03DC                     _lcd_puts:
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1296                           ;lcd_puts@s stored from wreg
  1297  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1298  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1299  03DE  00A0               	movwf	lcd_puts@s
  1300  03DF                     l1247:
  1301                           
  1302                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1303  03DF  2BF2               	goto	l1253
  1304  03E0                     l1249:
  1305                           
  1306                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1307  03E0  0820               	movf	lcd_puts@s,w
  1308  03E1  0084               	movwf	4
  1309  03E2  120A  118A  2003  120A  118A  	fcall	stringdir
  1310  03E7  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1311  03EC                     l1251:
  1312  03EC  3001               	movlw	1
  1313  03ED  00FD               	movwf	??_lcd_puts
  1314  03EE  087D               	movf	??_lcd_puts,w
  1315  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1316  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1317  03F1  07A0               	addwf	lcd_puts@s,f
  1318  03F2                     l1253:
  1319                           
  1320                           ;lcd.c: 229:  while(*s)
  1321  03F2  0820               	movf	lcd_puts@s,w
  1322  03F3  0084               	movwf	4
  1323  03F4  120A  118A  2003  120A  118A  	fcall	stringdir
  1324  03F9  3A00               	xorlw	0
  1325  03FA  1D03               	skipz
  1326  03FB  2BFD               	goto	u611
  1327  03FC  2BFE               	goto	u610
  1328  03FD                     u611:
  1329  03FD  2BE0               	goto	l1249
  1330  03FE                     u610:
  1331  03FE                     l78:
  1332  03FE  0008               	return
  1333  03FF                     __end_of_lcd_puts:
  1334                           
  1335                           	psect	text2
  1336  0519                     __ptext2:	
  1337 ;; *************** function _lcd_putc *****************
  1338 ;; Defined at:
  1339 ;;		line 190 in file "lcd.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  c               1    wreg     unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  c               1   12[COMMON] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         1       0       0       0       0
  1355 ;;      Temps:          2       0       0       0       0
  1356 ;;      Totals:         3       0       0       0       0
  1357 ;;Total ram usage:        3 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 3
  1360 ;; This function calls:
  1361 ;;		_lcd_busy
  1362 ;;		_lcd_gotoxy
  1363 ;;		_lcd_put_byte
  1364 ;; This function is called by:
  1365 ;;		_lcd_puts
  1366 ;;		_main
  1367 ;;		_lcd_String_Delay
  1368 ;;		_putch
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function _lcd_putc
  1374  0519                     _lcd_putc:
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1378                           ;lcd_putc@c stored from wreg
  1379  0519  00FC               	movwf	lcd_putc@c
  1380  051A                     l1225:
  1381                           
  1382                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1383  051A  2D61               	goto	l1241
  1384  051B                     l1227:
  1385                           
  1386                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1387  051B  01F3               	clrf	lcd_put_byte@b
  1388  051C  0AF3               	incf	lcd_put_byte@b,f
  1389  051D  3000               	movlw	0
  1390  051E  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1391  0523                     l1229:	
  1392                           ;lcd.c: 199:    while(lcd_busy());
  1393                           
  1394  0523  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1395  0528  3A00               	xorlw	0
  1396  0529  1D03               	skipz
  1397  052A  2D2C               	goto	u581
  1398  052B  2D2D               	goto	u580
  1399  052C                     u581:
  1400  052C  2D23               	goto	l1229
  1401  052D                     u580:
  1402  052D  2D74               	goto	l72
  1403  052E                     l1231:
  1404                           
  1405                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1406  052E  01F6               	clrf	lcd_gotoxy@row
  1407  052F  0AF6               	incf	lcd_gotoxy@row,f
  1408  0530  3000               	movlw	0
  1409  0531  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1410                           
  1411                           ;lcd.c: 203:    break;
  1412  0536  2D74               	goto	l72
  1413  0537                     l1233:
  1414                           
  1415                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1416  0537  3010               	movlw	16
  1417  0538  00FA               	movwf	??_lcd_putc
  1418  0539  087A               	movf	??_lcd_putc,w
  1419  053A  00F3               	movwf	lcd_put_byte@b
  1420  053B  3000               	movlw	0
  1421  053C  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1422  0541                     l1235:	
  1423                           ;lcd.c: 206:    while(lcd_busy());
  1424                           
  1425  0541  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1426  0546  3A00               	xorlw	0
  1427  0547  1D03               	skipz
  1428  0548  2D4A               	goto	u591
  1429  0549  2D4B               	goto	u590
  1430  054A                     u591:
  1431  054A  2D41               	goto	l1235
  1432  054B                     u590:
  1433  054B  2D74               	goto	l72
  1434  054C                     l1237:
  1435                           
  1436                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1437  054C  087C               	movf	lcd_putc@c,w
  1438  054D  00FA               	movwf	??_lcd_putc
  1439  054E  087A               	movf	??_lcd_putc,w
  1440  054F  00F3               	movwf	lcd_put_byte@b
  1441  0550  3001               	movlw	1
  1442  0551  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1443  0556                     l1239:	
  1444                           ;lcd.c: 212:     while(lcd_busy());
  1445                           
  1446  0556  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1447  055B  3A00               	xorlw	0
  1448  055C  1D03               	skipz
  1449  055D  2D5F               	goto	u601
  1450  055E  2D60               	goto	u600
  1451  055F                     u601:
  1452  055F  2D56               	goto	l1239
  1453  0560                     u600:
  1454  0560  2D74               	goto	l72
  1455  0561                     l1241:
  1456  0561  087C               	movf	lcd_putc@c,w
  1457  0562  00FA               	movwf	??_lcd_putc
  1458  0563  01FB               	clrf	??_lcd_putc+1
  1459                           
  1460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1461                           ; Switch size 1, requested type "simple"
  1462                           ; Number of cases is 1, Range of values is 0 to 0
  1463                           ; switch strategies available:
  1464                           ; Name         Instructions Cycles
  1465                           ; simple_byte            4     3 (average)
  1466                           ; direct_byte           11     8 (fixed)
  1467                           ; jumptable            260     6 (fixed)
  1468                           ;	Chosen strategy is simple_byte
  1469  0564  087B               	movf	??_lcd_putc+1,w
  1470  0565  3A00               	xorlw	0	; case 0
  1471  0566  1903               	skipnz
  1472  0567  2D69               	goto	l1489
  1473  0568  2D4C               	goto	l1237
  1474  0569                     l1489:
  1475                           
  1476                           ; Switch size 1, requested type "simple"
  1477                           ; Number of cases is 3, Range of values is 8 to 12
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; simple_byte           10     6 (average)
  1481                           ; direct_byte           26    11 (fixed)
  1482                           ; jumptable            263     9 (fixed)
  1483                           ;	Chosen strategy is simple_byte
  1484  0569  087A               	movf	??_lcd_putc,w
  1485  056A  3A08               	xorlw	8	; case 8
  1486  056B  1903               	skipnz
  1487  056C  2D37               	goto	l1233
  1488  056D  3A02               	xorlw	2	; case 10
  1489  056E  1903               	skipnz
  1490  056F  2D2E               	goto	l1231
  1491  0570  3A06               	xorlw	6	; case 12
  1492  0571  1903               	skipnz
  1493  0572  2D1B               	goto	l1227
  1494  0573  2D4C               	goto	l1237
  1495  0574                     l72:
  1496  0574  0008               	return
  1497  0575                     __end_of_lcd_putc:
  1498                           
  1499                           	psect	text3
  1500  03FF                     __ptext3:	
  1501 ;; *************** function _lcd_gotoxy *****************
  1502 ;; Defined at:
  1503 ;;		line 167 in file "lcd.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  col             1    wreg     unsigned char 
  1506 ;;  row             1    6[COMMON] unsigned char 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  col             1    8[COMMON] unsigned char 
  1509 ;;  address         1    9[COMMON] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         1       0       0       0       0
  1520 ;;      Locals:         2       0       0       0       0
  1521 ;;      Temps:          1       0       0       0       0
  1522 ;;      Totals:         4       0       0       0       0
  1523 ;;Total ram usage:        4 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 2
  1526 ;; This function calls:
  1527 ;;		_lcd_busy
  1528 ;;		_lcd_put_byte
  1529 ;; This function is called by:
  1530 ;;		_lcd_putc
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _lcd_gotoxy
  1537  03FF                     _lcd_gotoxy:
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1541                           ;lcd_gotoxy@col stored from wreg
  1542  03FF  00F8               	movwf	lcd_gotoxy@col
  1543  0400                     l1213:
  1544                           
  1545                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1546  0400  0876               	movf	lcd_gotoxy@row,w
  1547  0401  1903               	btfsc	3,2
  1548  0402  2C04               	goto	u561
  1549  0403  2C05               	goto	u560
  1550  0404                     u561:
  1551  0404  2C0A               	goto	l1217
  1552  0405                     u560:
  1553  0405                     l1215:
  1554                           
  1555                           ;lcd.c: 174:   address=0x40;
  1556  0405  3040               	movlw	64
  1557  0406  00F7               	movwf	??_lcd_gotoxy
  1558  0407  0877               	movf	??_lcd_gotoxy,w
  1559  0408  00F9               	movwf	lcd_gotoxy@address
  1560  0409  2C0B               	goto	l1219
  1561  040A                     l1217:
  1562                           
  1563                           ;lcd.c: 176:   address=0;
  1564  040A  01F9               	clrf	lcd_gotoxy@address
  1565  040B                     l1219:
  1566                           
  1567                           ;lcd.c: 178:  address += col;
  1568  040B  0878               	movf	lcd_gotoxy@col,w
  1569  040C  00F7               	movwf	??_lcd_gotoxy
  1570  040D  0877               	movf	??_lcd_gotoxy,w
  1571  040E  07F9               	addwf	lcd_gotoxy@address,f
  1572  040F                     l1221:
  1573                           
  1574                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1575  040F  0879               	movf	lcd_gotoxy@address,w
  1576  0410  3880               	iorlw	128
  1577  0411  00F7               	movwf	??_lcd_gotoxy
  1578  0412  0877               	movf	??_lcd_gotoxy,w
  1579  0413  00F3               	movwf	lcd_put_byte@b
  1580  0414  3000               	movlw	0
  1581  0415  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1582  041A                     l1223:	
  1583                           ;lcd.c: 181:  while(lcd_busy());
  1584                           
  1585  041A  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1586  041F  3A00               	xorlw	0
  1587  0420  1D03               	skipz
  1588  0421  2C23               	goto	u571
  1589  0422  2C24               	goto	u570
  1590  0423                     u571:
  1591  0423  2C1A               	goto	l1223
  1592  0424                     u570:
  1593  0424                     l54:
  1594  0424  0008               	return
  1595  0425                     __end_of_lcd_gotoxy:
  1596                           
  1597                           	psect	text4
  1598  0575                     __ptext4:	
  1599 ;; *************** function _lcd_init *****************
  1600 ;; Defined at:
  1601 ;;		line 241 in file "lcd.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  i               1    0        unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0
  1617 ;;      Temps:          2       0       0       0       0
  1618 ;;      Totals:         2       0       0       0       0
  1619 ;;Total ram usage:        2 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 2
  1622 ;; This function calls:
  1623 ;;		_lcd_busy
  1624 ;;		_lcd_put_byte
  1625 ;;		_lcd_put_nibble
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           
  1632                           ;psect for function _lcd_init
  1633  0575                     _lcd_init:
  1634  0575                     l1255:	
  1635                           ;incstack = 0
  1636                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1637                           
  1638                           
  1639                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1640  0575  1683               	bsf	3,5	;RP0=1, select bank1
  1641  0576  1303               	bcf	3,6	;RP1=0, select bank1
  1642  0577  1188               	bcf	8,3	;volatile
  1643                           
  1644                           ;lcd.c: 248:  TRISD1 = 0;
  1645  0578  1088               	bcf	8,1	;volatile
  1646                           
  1647                           ;lcd.c: 249:  TRISD2 = 0;
  1648  0579  1108               	bcf	8,2	;volatile
  1649                           
  1650                           ;lcd.c: 250:  TRISD4 = 0;
  1651  057A  1208               	bcf	8,4	;volatile
  1652                           
  1653                           ;lcd.c: 251:  TRISD5 = 0;
  1654  057B  1288               	bcf	8,5	;volatile
  1655                           
  1656                           ;lcd.c: 252:  TRISD6 = 0;
  1657  057C  1308               	bcf	8,6	;volatile
  1658                           
  1659                           ;lcd.c: 253:  TRISD7 = 0;
  1660  057D  1388               	bcf	8,7	;volatile
  1661  057E                     l1257:
  1662                           
  1663                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1664  057E  3014               	movlw	20
  1665  057F  00F7               	movwf	??_lcd_init+1
  1666  0580  3079               	movlw	121
  1667  0581  00F6               	movwf	??_lcd_init
  1668  0582                     u887:
  1669  0582  0BF6               	decfsz	??_lcd_init,f
  1670  0583  2D82               	goto	u887
  1671  0584  0BF7               	decfsz	??_lcd_init+1,f
  1672  0585  2D82               	goto	u887
  1673  0586  2D87               	nop2
  1674  0587                     l1259:
  1675                           
  1676                           ;lcd.c: 257:  RD1 = 0;
  1677  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0589  1088               	bcf	8,1	;volatile
  1680  058A                     l1261:
  1681                           
  1682                           ;lcd.c: 258:  RD2 = 0;
  1683  058A  1108               	bcf	8,2	;volatile
  1684  058B                     l1263:
  1685                           
  1686                           ;lcd.c: 259:  RD3 = 0;
  1687  058B  1188               	bcf	8,3	;volatile
  1688  058C                     l1265:
  1689                           
  1690                           ;lcd.c: 261:  lcd_put_nibble(3);
  1691  058C  3003               	movlw	3
  1692  058D  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1693  0592                     l1267:
  1694                           
  1695                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1696  0592  300D               	movlw	13
  1697  0593  00F7               	movwf	??_lcd_init+1
  1698  0594  30FB               	movlw	251
  1699  0595  00F6               	movwf	??_lcd_init
  1700  0596                     u897:
  1701  0596  0BF6               	decfsz	??_lcd_init,f
  1702  0597  2D96               	goto	u897
  1703  0598  0BF7               	decfsz	??_lcd_init+1,f
  1704  0599  2D96               	goto	u897
  1705  059A  2D9B               	nop2
  1706                           
  1707                           ;lcd.c: 263:  lcd_put_nibble(3);
  1708  059B  3003               	movlw	3
  1709  059C  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1710  05A1                     l1269:
  1711                           
  1712                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1713  05A1  300D               	movlw	13
  1714  05A2  00F7               	movwf	??_lcd_init+1
  1715  05A3  30FB               	movlw	251
  1716  05A4  00F6               	movwf	??_lcd_init
  1717  05A5                     u907:
  1718  05A5  0BF6               	decfsz	??_lcd_init,f
  1719  05A6  2DA5               	goto	u907
  1720  05A7  0BF7               	decfsz	??_lcd_init+1,f
  1721  05A8  2DA5               	goto	u907
  1722  05A9  2DAA               	nop2
  1723  05AA                     l1271:
  1724                           
  1725                           ;lcd.c: 265:  lcd_put_nibble(3);
  1726  05AA  3003               	movlw	3
  1727  05AB  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1728                           
  1729                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1730  05B0  300D               	movlw	13
  1731  05B1  00F7               	movwf	??_lcd_init+1
  1732  05B2  30FB               	movlw	251
  1733  05B3  00F6               	movwf	??_lcd_init
  1734  05B4                     u917:
  1735  05B4  0BF6               	decfsz	??_lcd_init,f
  1736  05B5  2DB4               	goto	u917
  1737  05B6  0BF7               	decfsz	??_lcd_init+1,f
  1738  05B7  2DB4               	goto	u917
  1739  05B8  2DB9               	nop2
  1740  05B9                     l1273:
  1741                           
  1742                           ;lcd.c: 268:  lcd_put_nibble(2);
  1743  05B9  3002               	movlw	2
  1744  05BA  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1745  05BF                     l1275:	
  1746                           ;lcd.c: 269:  while(lcd_busy());
  1747                           
  1748  05BF  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1749  05C4  3A00               	xorlw	0
  1750  05C5  1D03               	skipz
  1751  05C6  2DC8               	goto	u621
  1752  05C7  2DC9               	goto	u620
  1753  05C8                     u621:
  1754  05C8  2DBF               	goto	l1275
  1755  05C9                     u620:
  1756  05C9                     l1277:
  1757                           
  1758                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1759  05C9  3028               	movlw	40
  1760  05CA  00F6               	movwf	??_lcd_init
  1761  05CB  0876               	movf	??_lcd_init,w
  1762  05CC  00F3               	movwf	lcd_put_byte@b
  1763  05CD  3000               	movlw	0
  1764  05CE  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1765  05D3                     l1279:	
  1766                           ;lcd.c: 272:  while(lcd_busy());
  1767                           
  1768  05D3  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1769  05D8  3A00               	xorlw	0
  1770  05D9  1D03               	skipz
  1771  05DA  2DDC               	goto	u631
  1772  05DB  2DDD               	goto	u630
  1773  05DC                     u631:
  1774  05DC  2DD3               	goto	l1279
  1775  05DD                     u630:
  1776  05DD                     l1281:
  1777                           
  1778                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1779  05DD  300C               	movlw	12
  1780  05DE  00F6               	movwf	??_lcd_init
  1781  05DF  0876               	movf	??_lcd_init,w
  1782  05E0  00F3               	movwf	lcd_put_byte@b
  1783  05E1  3000               	movlw	0
  1784  05E2  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1785  05E7                     l1283:	
  1786                           ;lcd.c: 275:  while(lcd_busy());
  1787                           
  1788  05E7  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1789  05EC  3A00               	xorlw	0
  1790  05ED  1D03               	skipz
  1791  05EE  2DF0               	goto	u641
  1792  05EF  2DF1               	goto	u640
  1793  05F0                     u641:
  1794  05F0  2DE7               	goto	l1283
  1795  05F1                     u640:
  1796  05F1                     l1285:
  1797                           
  1798                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1799  05F1  01F3               	clrf	lcd_put_byte@b
  1800  05F2  0AF3               	incf	lcd_put_byte@b,f
  1801  05F3  3000               	movlw	0
  1802  05F4  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1803  05F9                     l1287:	
  1804                           ;lcd.c: 278:  while(lcd_busy());
  1805                           
  1806  05F9  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1807  05FE  3A00               	xorlw	0
  1808  05FF  1D03               	skipz
  1809  0600  2E02               	goto	u651
  1810  0601  2E03               	goto	u650
  1811  0602                     u651:
  1812  0602  2DF9               	goto	l1287
  1813  0603                     u650:
  1814  0603                     l1289:
  1815                           
  1816                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1817  0603  3006               	movlw	6
  1818  0604  00F6               	movwf	??_lcd_init
  1819  0605  0876               	movf	??_lcd_init,w
  1820  0606  00F3               	movwf	lcd_put_byte@b
  1821  0607  3000               	movlw	0
  1822  0608  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1823  060D                     l1291:	
  1824                           ;lcd.c: 281:  while(lcd_busy());
  1825                           
  1826  060D  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1827  0612  3A00               	xorlw	0
  1828  0613  1D03               	skipz
  1829  0614  2E16               	goto	u661
  1830  0615  2E17               	goto	u660
  1831  0616                     u661:
  1832  0616  2E0D               	goto	l1291
  1833  0617                     u660:
  1834  0617                     l96:
  1835  0617  0008               	return
  1836  0618                     __end_of_lcd_init:
  1837                           
  1838                           	psect	text5
  1839  03B4                     __ptext5:	
  1840 ;; *************** function _lcd_ShiftRight *****************
  1841 ;; Defined at:
  1842 ;;		line 304 in file "lcd.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0, pclath, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0
  1858 ;;      Temps:          1       0       0       0       0
  1859 ;;      Totals:         1       0       0       0       0
  1860 ;;Total ram usage:        1 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 2
  1863 ;; This function calls:
  1864 ;;		_lcd_put_byte
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;;		_lcd_MoveRight
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _lcd_ShiftRight
  1873  03B4                     _lcd_ShiftRight:
  1874  03B4                     l1295:	
  1875                           ;incstack = 0
  1876                           ; Regs used in _lcd_ShiftRight: [wreg+status,2+status,0+pclath+cstack]
  1877                           
  1878                           
  1879                           ;lcd.c: 309:      lcd_put_byte(0,0x1C);
  1880  03B4  301C               	movlw	28
  1881  03B5  00F6               	movwf	??_lcd_ShiftRight
  1882  03B6  0876               	movf	??_lcd_ShiftRight,w
  1883  03B7  00F3               	movwf	lcd_put_byte@b
  1884  03B8  3000               	movlw	0
  1885  03B9  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1886  03BE                     l102:
  1887  03BE  0008               	return
  1888  03BF                     __end_of_lcd_ShiftRight:
  1889                           
  1890                           	psect	text6
  1891  03A9                     __ptext6:	
  1892 ;; *************** function _lcd_ShiftLeft *****************
  1893 ;; Defined at:
  1894 ;;		line 290 in file "lcd.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;		None
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0, pclath, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         0       0       0       0       0
  1909 ;;      Locals:         0       0       0       0       0
  1910 ;;      Temps:          1       0       0       0       0
  1911 ;;      Totals:         1       0       0       0       0
  1912 ;;Total ram usage:        1 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 2
  1915 ;; This function calls:
  1916 ;;		_lcd_put_byte
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;;		_lcd_MoveLeft
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function _lcd_ShiftLeft
  1925  03A9                     _lcd_ShiftLeft:
  1926  03A9                     l1293:	
  1927                           ;incstack = 0
  1928                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
  1929                           
  1930                           
  1931                           ;lcd.c: 295:      lcd_put_byte(0,0x18);
  1932  03A9  3018               	movlw	24
  1933  03AA  00F6               	movwf	??_lcd_ShiftLeft
  1934  03AB  0876               	movf	??_lcd_ShiftLeft,w
  1935  03AC  00F3               	movwf	lcd_put_byte@b
  1936  03AD  3000               	movlw	0
  1937  03AE  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1938  03B3                     l99:
  1939  03B3  0008               	return
  1940  03B4                     __end_of_lcd_ShiftLeft:
  1941                           
  1942                           	psect	text7
  1943  03BF                     __ptext7:	
  1944 ;; *************** function _getLengthArr *****************
  1945 ;; Defined at:
  1946 ;;		line 39 in file "newmain.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  character       1    wreg     PTR unsigned char 
  1949 ;;		 -> main@class(12), main@HKTT(12), main@your_live(15), main@your_born(17), 
  1950 ;;		 -> main@your_name(16), 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  character       1    4[COMMON] PTR unsigned char 
  1953 ;;		 -> main@class(12), main@HKTT(12), main@your_live(15), main@your_born(17), 
  1954 ;;		 -> main@your_name(16), 
  1955 ;;  i               2    2[COMMON] unsigned int 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2    0[COMMON] unsigned int 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         2       0       0       0       0
  1966 ;;      Locals:         3       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0
  1968 ;;      Totals:         5       0       0       0       0
  1969 ;;Total ram usage:        5 bytes
  1970 ;; Hardware stack levels used: 2
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _getLengthArr
  1980  03BF                     _getLengthArr:
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1984                           ;getLengthArr@character stored from wreg
  1985  03BF  00F4               	movwf	getLengthArr@character
  1986  03C0                     l1311:
  1987                           
  1988                           ;newmain.c: 40:     unsigned int i = 0;
  1989  03C0  01F2               	clrf	getLengthArr@i
  1990  03C1  01F3               	clrf	getLengthArr@i+1
  1991  03C2                     l1313:
  1992                           
  1993                           ;newmain.c: 42:         if(character[i] == '\n')
  1994  03C2  0872               	movf	getLengthArr@i,w
  1995  03C3  0774               	addwf	getLengthArr@character,w
  1996  03C4  0084               	movwf	4
  1997  03C5  120A  118A  2003  120A  118A  	fcall	stringdir
  1998  03CA  3A0A               	xorlw	10
  1999  03CB  1D03               	skipz
  2000  03CC  2BCE               	goto	u701
  2001  03CD  2BCF               	goto	u700
  2002  03CE                     u701:
  2003  03CE  2BD0               	goto	l1317
  2004  03CF                     u700:
  2005  03CF  2BD7               	goto	l1319
  2006  03D0                     l1317:
  2007                           
  2008                           ;newmain.c: 46:         i++;
  2009  03D0  3001               	movlw	1
  2010  03D1  07F2               	addwf	getLengthArr@i,f
  2011  03D2  1803               	skipnc
  2012  03D3  0AF3               	incf	getLengthArr@i+1,f
  2013  03D4  3000               	movlw	0
  2014  03D5  07F3               	addwf	getLengthArr@i+1,f
  2015  03D6  2BC2               	goto	l1313
  2016  03D7                     l1319:
  2017                           
  2018                           ;newmain.c: 48:     return i;
  2019  03D7  0873               	movf	getLengthArr@i+1,w
  2020  03D8  00F1               	movwf	?_getLengthArr+1
  2021  03D9  0872               	movf	getLengthArr@i,w
  2022  03DA  00F0               	movwf	?_getLengthArr
  2023  03DB                     l160:
  2024  03DB  0008               	return
  2025  03DC                     __end_of_getLengthArr:
  2026                           
  2027                           	psect	text8
  2028  04D2                     __ptext8:	
  2029 ;; *************** function _addCharSpecial *****************
  2030 ;; Defined at:
  2031 ;;		line 28 in file "newmain.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  character       1    wreg     PTR unsigned char 
  2034 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  character       1    9[COMMON] PTR unsigned char 
  2037 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  2038 ;;  i               2    7[COMMON] unsigned int 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       0       0       0       0
  2049 ;;      Locals:         3       0       0       0       0
  2050 ;;      Temps:          1       0       0       0       0
  2051 ;;      Totals:         4       0       0       0       0
  2052 ;;Total ram usage:        4 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 2
  2055 ;; This function calls:
  2056 ;;		_lcd_busy
  2057 ;;		_lcd_put_byte
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _addCharSpecial
  2065  04D2                     _addCharSpecial:
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2069                           ;addCharSpecial@character stored from wreg
  2070  04D2  00F9               	movwf	addCharSpecial@character
  2071  04D3                     l1297:
  2072                           
  2073                           ;newmain.c: 29:     unsigned int i = 0;
  2074  04D3  01F7               	clrf	addCharSpecial@i
  2075  04D4  01F8               	clrf	addCharSpecial@i+1
  2076  04D5                     l1299:
  2077                           
  2078                           ;newmain.c: 30:     lcd_put_byte(0, 0x40);
  2079  04D5  3040               	movlw	64
  2080  04D6  00F6               	movwf	??_addCharSpecial
  2081  04D7  0876               	movf	??_addCharSpecial,w
  2082  04D8  00F3               	movwf	lcd_put_byte@b
  2083  04D9  3000               	movlw	0
  2084  04DA  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  2085  04DF                     l1301:	
  2086                           ;newmain.c: 31:     while(lcd_busy());
  2087                           
  2088  04DF  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  2089  04E4  3A00               	xorlw	0
  2090  04E5  1D03               	skipz
  2091  04E6  2CE8               	goto	u671
  2092  04E7  2CE9               	goto	u670
  2093  04E8                     u671:
  2094  04E8  2CDF               	goto	l1301
  2095  04E9                     u670:
  2096  04E9  2D0B               	goto	l1309
  2097  04EA                     l1303:
  2098                           
  2099                           ;newmain.c: 33:         lcd_put_byte(1, character[i]);
  2100  04EA  0877               	movf	addCharSpecial@i,w
  2101  04EB  0779               	addwf	addCharSpecial@character,w
  2102  04EC  0084               	movwf	4
  2103  04ED  120A  118A  2003  120A  118A  	fcall	stringdir
  2104  04F2  00F6               	movwf	??_addCharSpecial
  2105  04F3  0876               	movf	??_addCharSpecial,w
  2106  04F4  00F3               	movwf	lcd_put_byte@b
  2107  04F5  3001               	movlw	1
  2108  04F6  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  2109  04FB                     l1305:	
  2110                           ;newmain.c: 34:         while(lcd_busy());
  2111                           
  2112  04FB  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  2113  0500  3A00               	xorlw	0
  2114  0501  1D03               	skipz
  2115  0502  2D04               	goto	u681
  2116  0503  2D05               	goto	u680
  2117  0504                     u681:
  2118  0504  2CFB               	goto	l1305
  2119  0505                     u680:
  2120  0505                     l1307:
  2121                           
  2122                           ;newmain.c: 35:         i++;
  2123  0505  3001               	movlw	1
  2124  0506  07F7               	addwf	addCharSpecial@i,f
  2125  0507  1803               	skipnc
  2126  0508  0AF8               	incf	addCharSpecial@i+1,f
  2127  0509  3000               	movlw	0
  2128  050A  07F8               	addwf	addCharSpecial@i+1,f
  2129  050B                     l1309:
  2130                           
  2131                           ;newmain.c: 32:     while(character[i] != 0x99) {
  2132  050B  0877               	movf	addCharSpecial@i,w
  2133  050C  0779               	addwf	addCharSpecial@character,w
  2134  050D  0084               	movwf	4
  2135  050E  120A  118A  2003  120A  118A  	fcall	stringdir
  2136  0513  3A99               	xorlw	153
  2137  0514  1D03               	skipz
  2138  0515  2D17               	goto	u691
  2139  0516  2D18               	goto	u690
  2140  0517                     u691:
  2141  0517  2CEA               	goto	l1303
  2142  0518                     u690:
  2143  0518                     l153:
  2144  0518  0008               	return
  2145  0519                     __end_of_addCharSpecial:
  2146                           
  2147                           	psect	text9
  2148  0455                     __ptext9:	
  2149 ;; *************** function _lcd_put_byte *****************
  2150 ;; Defined at:
  2151 ;;		line 134 in file "lcd.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  rs              1    wreg     unsigned char 
  2154 ;;  b               1    3[COMMON] unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  rs              1    5[COMMON] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         1       0       0       0       0
  2167 ;;      Locals:         1       0       0       0       0
  2168 ;;      Temps:          1       0       0       0       0
  2169 ;;      Totals:         3       0       0       0       0
  2170 ;;Total ram usage:        3 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 1
  2173 ;; This function calls:
  2174 ;;		_lcd_put_nibble
  2175 ;; This function is called by:
  2176 ;;		_lcd_gotoxy
  2177 ;;		_lcd_putc
  2178 ;;		_lcd_init
  2179 ;;		_lcd_ShiftLeft
  2180 ;;		_lcd_ShiftRight
  2181 ;;		_addCharSpecial
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _lcd_put_byte
  2187  0455                     _lcd_put_byte:
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2191                           ;lcd_put_byte@rs stored from wreg
  2192  0455  00F5               	movwf	lcd_put_byte@rs
  2193  0456                     l1197:
  2194                           
  2195                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  2196  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2197  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2198  0458  1208               	bcf	8,4	;volatile
  2199                           
  2200                           ;lcd.c: 140:  TRISD5 = 0;
  2201  0459  1288               	bcf	8,5	;volatile
  2202                           
  2203                           ;lcd.c: 141:  TRISD6 = 0;
  2204  045A  1308               	bcf	8,6	;volatile
  2205                           
  2206                           ;lcd.c: 142:  TRISD7 = 0;
  2207  045B  1388               	bcf	8,7	;volatile
  2208  045C                     l1199:
  2209                           
  2210                           ;lcd.c: 144:  if(rs)
  2211  045C  0875               	movf	lcd_put_byte@rs,w
  2212  045D  1903               	btfsc	3,2
  2213  045E  2C60               	goto	u541
  2214  045F  2C61               	goto	u540
  2215  0460                     u541:
  2216  0460  2C65               	goto	l44
  2217  0461                     u540:
  2218  0461                     l1201:
  2219                           
  2220                           ;lcd.c: 145:   RD1 = 1;
  2221  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0463  1488               	bsf	8,1	;volatile
  2224  0464  2C68               	goto	l1203
  2225  0465                     l44:	
  2226                           ;lcd.c: 146:  else
  2227                           
  2228                           
  2229                           ;lcd.c: 147:   RD1 = 0;
  2230  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0467  1088               	bcf	8,1	;volatile
  2233  0468                     l1203:
  2234                           
  2235                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2236  0468  3006               	movlw	6
  2237  0469  00F4               	movwf	??_lcd_put_byte
  2238  046A                     u927:
  2239  046A  0BF4               	decfsz	??_lcd_put_byte,f
  2240  046B  2C6A               	goto	u927
  2241  046C  0000               	nop
  2242  046D                     l1205:
  2243                           
  2244                           ;lcd.c: 150:  RD2 = 0;
  2245  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2246  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2247  046F  1108               	bcf	8,2	;volatile
  2248                           
  2249                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2250  0470  3006               	movlw	6
  2251  0471  00F4               	movwf	??_lcd_put_byte
  2252  0472                     u937:
  2253  0472  0BF4               	decfsz	??_lcd_put_byte,f
  2254  0473  2C72               	goto	u937
  2255  0474  0000               	nop
  2256  0475                     l1207:
  2257                           
  2258                           ;lcd.c: 153:  RD3 = 0;
  2259  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0477  1188               	bcf	8,3	;volatile
  2262  0478                     l1209:
  2263                           
  2264                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2265  0478  0873               	movf	lcd_put_byte@b,w
  2266  0479  00F4               	movwf	??_lcd_put_byte
  2267  047A  3004               	movlw	4
  2268  047B                     u555:
  2269  047B  1003               	clrc
  2270  047C  0CF4               	rrf	??_lcd_put_byte,f
  2271  047D  3EFF               	addlw	-1
  2272  047E  1D03               	skipz
  2273  047F  2C7B               	goto	u555
  2274  0480  0874               	movf	??_lcd_put_byte,w
  2275  0481  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  2276  0486                     l1211:
  2277                           
  2278                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2279  0486  0873               	movf	lcd_put_byte@b,w
  2280  0487  390F               	andlw	15
  2281  0488  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  2282  048D                     l46:
  2283  048D  0008               	return
  2284  048E                     __end_of_lcd_put_byte:
  2285                           
  2286                           	psect	text10
  2287  048E                     __ptext10:	
  2288 ;; *************** function _lcd_put_nibble *****************
  2289 ;; Defined at:
  2290 ;;		line 103 in file "lcd.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  b               1    wreg     unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  b               1    1[COMMON] unsigned char 
  2295 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         0       0       0       0       0
  2306 ;;      Locals:         2       0       0       0       0
  2307 ;;      Temps:          1       0       0       0       0
  2308 ;;      Totals:         3       0       0       0       0
  2309 ;;Total ram usage:        3 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_lcd_put_byte
  2315 ;;		_lcd_init
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _lcd_put_nibble
  2321  048E                     _lcd_put_nibble:
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _lcd_put_nibble: [wreg]
  2325                           ;lcd_put_nibble@b stored from wreg
  2326  048E  00F1               	movwf	lcd_put_nibble@b
  2327  048F                     l1159:
  2328                           
  2329                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2330  048F  1683               	bsf	3,5	;RP0=1, select bank1
  2331  0490  1303               	bcf	3,6	;RP1=0, select bank1
  2332  0491  1208               	bcf	8,4	;volatile
  2333                           
  2334                           ;lcd.c: 110:  TRISD5 = 0;
  2335  0492  1288               	bcf	8,5	;volatile
  2336                           
  2337                           ;lcd.c: 111:  TRISD6 = 0;
  2338  0493  1308               	bcf	8,6	;volatile
  2339                           
  2340                           ;lcd.c: 112:  TRISD7 = 0;
  2341  0494  1388               	bcf	8,7	;volatile
  2342  0495                     l1161:
  2343                           
  2344                           ;lcd.c: 114:  temp.Val = b;
  2345  0495  0871               	movf	lcd_put_nibble@b,w
  2346  0496  00F0               	movwf	??_lcd_put_nibble
  2347  0497  0870               	movf	??_lcd_put_nibble,w
  2348  0498  00F2               	movwf	lcd_put_nibble@temp
  2349  0499                     l1163:
  2350                           
  2351                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2352  0499  1872               	btfsc	lcd_put_nibble@temp,0
  2353  049A  2C9C               	goto	u461
  2354  049B  2CA0               	goto	u460
  2355  049C                     u461:
  2356  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2357  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2358  049E  1608               	bsf	8,4	;volatile
  2359  049F  2CA3               	goto	u474
  2360  04A0                     u460:
  2361  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2362  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2363  04A2  1208               	bcf	8,4	;volatile
  2364  04A3                     u474:
  2365  04A3                     l1165:
  2366                           
  2367                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2368  04A3  18F2               	btfsc	lcd_put_nibble@temp,1
  2369  04A4  2CA6               	goto	u481
  2370  04A5  2CAA               	goto	u480
  2371  04A6                     u481:
  2372  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2373  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2374  04A8  1688               	bsf	8,5	;volatile
  2375  04A9  2CAD               	goto	u494
  2376  04AA                     u480:
  2377  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2378  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2379  04AC  1288               	bcf	8,5	;volatile
  2380  04AD                     u494:
  2381  04AD                     l1167:
  2382                           
  2383                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2384  04AD  1972               	btfsc	lcd_put_nibble@temp,2
  2385  04AE  2CB0               	goto	u501
  2386  04AF  2CB4               	goto	u500
  2387  04B0                     u501:
  2388  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2389  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2390  04B2  1708               	bsf	8,6	;volatile
  2391  04B3  2CB7               	goto	u514
  2392  04B4                     u500:
  2393  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2394  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2395  04B6  1308               	bcf	8,6	;volatile
  2396  04B7                     u514:
  2397  04B7                     l1169:
  2398                           
  2399                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2400  04B7  19F2               	btfsc	lcd_put_nibble@temp,3
  2401  04B8  2CBA               	goto	u521
  2402  04B9  2CBE               	goto	u520
  2403  04BA                     u521:
  2404  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2405  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2406  04BC  1788               	bsf	8,7	;volatile
  2407  04BD  2CC1               	goto	u534
  2408  04BE                     u520:
  2409  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2410  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2411  04C0  1388               	bcf	8,7	;volatile
  2412  04C1                     u534:
  2413                           
  2414                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2415  04C1  3006               	movlw	6
  2416  04C2  00F0               	movwf	??_lcd_put_nibble
  2417  04C3                     u947:
  2418  04C3  0BF0               	decfsz	??_lcd_put_nibble,f
  2419  04C4  2CC3               	goto	u947
  2420  04C5  0000               	nop
  2421  04C6                     l1171:
  2422                           
  2423                           ;lcd.c: 122:  RD3 = 1;
  2424  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2425  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2426  04C8  1588               	bsf	8,3	;volatile
  2427                           
  2428                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2429  04C9  3006               	movlw	6
  2430  04CA  00F0               	movwf	??_lcd_put_nibble
  2431  04CB                     u957:
  2432  04CB  0BF0               	decfsz	??_lcd_put_nibble,f
  2433  04CC  2CCB               	goto	u957
  2434  04CD  0000               	nop
  2435  04CE                     l1173:
  2436                           
  2437                           ;lcd.c: 124:  RD3 = 0;
  2438  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2439  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2440  04D0  1188               	bcf	8,3	;volatile
  2441  04D1                     l41:
  2442  04D1  0008               	return
  2443  04D2                     __end_of_lcd_put_nibble:
  2444                           
  2445                           	psect	text11
  2446  0425                     __ptext11:	
  2447 ;; *************** function _lcd_busy *****************
  2448 ;; Defined at:
  2449 ;;		line 18 in file "lcd.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  busy            1    1[COMMON] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      unsigned char 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2463 ;;      Params:         0       0       0       0       0
  2464 ;;      Locals:         1       0       0       0       0
  2465 ;;      Temps:          1       0       0       0       0
  2466 ;;      Totals:         2       0       0       0       0
  2467 ;;Total ram usage:        2 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_lcd_gotoxy
  2473 ;;		_lcd_putc
  2474 ;;		_lcd_init
  2475 ;;		_addCharSpecial
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _lcd_busy
  2481  0425                     _lcd_busy:
  2482  0425                     l1175:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _lcd_busy: [wreg+status,2]
  2485                           
  2486                           
  2487                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2488  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2490  0427  1608               	bsf	8,4	;volatile
  2491                           
  2492                           ;lcd.c: 25:  TRISD5 = 1;
  2493  0428  1688               	bsf	8,5	;volatile
  2494                           
  2495                           ;lcd.c: 26:  TRISD6 = 1;
  2496  0429  1708               	bsf	8,6	;volatile
  2497                           
  2498                           ;lcd.c: 27:  TRISD7 = 1;
  2499  042A  1788               	bsf	8,7	;volatile
  2500                           
  2501                           ;lcd.c: 29:  RD2 = 1;
  2502  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2503  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2504  042D  1508               	bsf	8,2	;volatile
  2505                           
  2506                           ;lcd.c: 30:  RD1 = 0;
  2507  042E  1088               	bcf	8,1	;volatile
  2508  042F                     l1177:
  2509                           
  2510                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2511  042F  3006               	movlw	6
  2512  0430  00F0               	movwf	??_lcd_busy
  2513  0431                     u967:
  2514  0431  0BF0               	decfsz	??_lcd_busy,f
  2515  0432  2C31               	goto	u967
  2516  0433  0000               	nop
  2517  0434                     l1179:
  2518                           
  2519                           ;lcd.c: 32:  RD3 = 1;
  2520  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0436  1588               	bsf	8,3	;volatile
  2523                           
  2524                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2525  0437  3006               	movlw	6
  2526  0438  00F0               	movwf	??_lcd_busy
  2527  0439                     u977:
  2528  0439  0BF0               	decfsz	??_lcd_busy,f
  2529  043A  2C39               	goto	u977
  2530  043B  0000               	nop
  2531  043C                     l1181:
  2532                           
  2533                           ;lcd.c: 35:  busy = RD7;
  2534  043C  3000               	movlw	0
  2535  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2536  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2537  043F  1B88               	btfsc	8,7	;volatile
  2538  0440  3001               	movlw	1
  2539  0441  00F1               	movwf	lcd_busy@busy
  2540  0442                     l1183:
  2541                           
  2542                           ;lcd.c: 37:  RD3 = 0;
  2543  0442  1188               	bcf	8,3	;volatile
  2544  0443                     l1185:
  2545                           
  2546                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2547  0443  3006               	movlw	6
  2548  0444  00F0               	movwf	??_lcd_busy
  2549  0445                     u987:
  2550  0445  0BF0               	decfsz	??_lcd_busy,f
  2551  0446  2C45               	goto	u987
  2552  0447  0000               	nop
  2553  0448                     l1187:
  2554                           
  2555                           ;lcd.c: 39:  RD3 = 1;
  2556  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2558  044A  1588               	bsf	8,3	;volatile
  2559  044B                     l1189:
  2560                           
  2561                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2562  044B  3006               	movlw	6
  2563  044C  00F0               	movwf	??_lcd_busy
  2564  044D                     u997:
  2565  044D  0BF0               	decfsz	??_lcd_busy,f
  2566  044E  2C4D               	goto	u997
  2567  044F  0000               	nop
  2568  0450                     l1191:
  2569                           
  2570                           ;lcd.c: 41:  RD3 = 0;
  2571  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0452  1188               	bcf	8,3	;volatile
  2574  0453                     l1193:
  2575                           
  2576                           ;lcd.c: 43:  return busy;
  2577  0453  0871               	movf	lcd_busy@busy,w
  2578  0454                     l33:
  2579  0454  0008               	return
  2580  0455                     __end_of_lcd_busy:
  2581  007E                     btemp	set	126	;btemp
  2582  007E                     wtemp0	set	126
  2583                           
  2584                           	psect	config
  2585                           
  2586                           ;Config register CONFIG1 @ 0x2007
  2587                           ;	Oscillator Selection bits
  2588                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2589                           ;	Watchdog Timer Enable bit
  2590                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2591                           ;	Power-up Timer Enable bit
  2592                           ;	PWRTE = OFF, PWRT disabled
  2593                           ;	RE3/MCLR pin function select bit
  2594                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2595                           ;	Code Protection bit
  2596                           ;	CP = OFF, Program memory code protection is disabled
  2597                           ;	Data Code Protection bit
  2598                           ;	CPD = OFF, Data memory code protection is disabled
  2599                           ;	Brown Out Reset Selection bits
  2600                           ;	BOREN = OFF, BOR disabled
  2601                           ;	Internal External Switchover bit
  2602                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2603                           ;	Fail-Safe Clock Monitor Enabled bit
  2604                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2605                           ;	Low Voltage Programming Enable bit
  2606                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2607                           ;	In-Circuit Debugger Mode bit
  2608                           ;	DEBUG = 0x1, unprogrammed default
  2609  2007                     	org	8199
  2610  2007  20F2               	dw	8434
  2611                           
  2612                           ;Config register CONFIG2 @ 0x2008
  2613                           ;	Brown-out Reset Selection bit
  2614                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2615                           ;	Flash Program Memory Self Write Enable bits
  2616                           ;	WRT = OFF, Write protection off
  2617  2008                     	org	8200
  2618  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    169
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[12]), main@HKTT(CODE[12]), main@your_live(CODE[15]), main@your_born(CODE[17]), 
		 -> main@your_name(CODE[16]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 49
		 -> main@special_HKTT_class(CODE[33]), main@special_name_born_live(CODE[49]), 

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 15
		 -> main@MSSV(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_ShiftRight->_lcd_put_byte
    _lcd_ShiftLeft->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   12893
                                              1 BANK0      9     9      0
                     _addCharSpecial
                       _getLengthArr
                      _lcd_ShiftLeft
                     _lcd_ShiftRight
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2947
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2869
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1713
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftRight                                       1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftLeft                                        1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _getLengthArr                                         5     3      2     233
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1268
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _getLengthArr
   _lcd_ShiftLeft
     _lcd_put_byte
   _lcd_ShiftRight
     _lcd_put_byte
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 07 06:39:00 2021

                   ??_lcd_ShiftLeft 0076                                   pc 0002  
                                l33 0454                                  l41 04D1  
                                l44 0465                                  l46 048D  
                                l54 0424                                  l72 0574  
                                l78 03FE                                  l96 0617  
                                l99 03B3              __end_of_lcd_put_nibble 04D2  
                  ??_lcd_ShiftRight 0076                                  fsr 0004  
                   ?_addCharSpecial 0070                       ?_lcd_put_byte 0073  
                               l102 03BE                                 l203 07F9  
                               l160 03DB                                 l153 0518  
                               _RD1 0041                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u500 04B4  
                               u501 04B0                                 u520 04BE  
                               u600 0560                                 u521 04BA  
                               u601 055F                                 u514 04B7  
                               u610 03FE                                 u611 03FD  
                               u460 04A0                                 u540 0461  
                               u700 03CF                                 u620 05C9  
                               u461 049C                                 u541 0460  
                               u701 03CE                                 u621 05C8  
                               u534 04C1                                 u630 05DD  
                               u631 05DC                                 u480 04AA  
                               u640 05F1                                 u560 0405  
                               u800 07C2                                 u481 04A6  
                               u641 05F0                                 u561 0404  
                               u801 07C1                                 u474 04A3  
                               u650 0603                                 u570 0424  
                               u810 07F9                                 u555 047B  
                               u651 0602                                 u571 0423  
                               u811 07F8                                 u660 0617  
                               u580 052D                                 u740 0677  
                               u661 0616                                 u581 052C  
                               u805 07BE                                 u741 0676  
                               u494 04AD                                 u670 04E9  
                               u590 054B                                 u750 06A3  
                               u671 04E8                                 u591 054A  
                               u751 06A2                                 u680 0505  
                               u760 06DE                                 u681 0504  
                               u761 06DD                                 u745 0673  
                               u690 0518                                 u770 0714  
                               u691 0517                                 u907 05A5  
                               u771 0713                                 u827 0646  
                               u780 074B                                 u917 05B4  
                               u781 074A                                 u765 06DA  
                               u837 068D                                 u790 078C  
                               u927 046A                                 u791 078B  
                               u847 071C                                 u775 0710  
                               u937 0472                                 u857 072E  
                               u947 04C3                                 u867 07CA  
                               u795 0788                                 u957 04CB  
                               u877 07DC                                 u967 0431  
                               u887 0582                                 u977 0439  
                               u897 0596                                 u987 0445  
                               u997 044D                                 fsr0 0004  
                              l1201 0461                                l1211 0486  
                              l1203 0468                                l1205 046D  
                              l1301 04DF                                l1221 040F  
                              l1213 0400                                l1207 0475  
                              l1303 04EA                                l1311 03C0  
                              l1223 041A                                l1215 0405  
                              l1231 052E                                l1161 0495  
                              l1209 0478                                l1305 04FB  
                              l1313 03C2                                l1217 040A  
                              l1233 0537                                l1241 0561  
                              l1225 051A                                l1401 06E6  
                              l1171 04C6                                l1163 0499  
                              l1307 0505                                l1219 040B  
                              l1235 0541                                l1227 051B  
                              l1251 03EC                                l1411 0714  
                              l1403 06F2                                l1181 043C  
                              l1173 04CE                                l1165 04A3  
                              l1309 050B                                l1317 03D0  
                              l1261 058A                                l1237 054C  
                              l1229 0523                                l1253 03F2  
                              l1421 0735                                l1413 0722  
                              l1405 06F5                                l1191 0450  
                              l1183 0442                                l1175 0425  
                              l1167 04AD                                l1159 048F  
                              l1319 03D7                                l1271 05AA  
                              l1263 058B                                l1255 0575  
                              l1239 0556                                l1247 03DF  
                              l1431 075E                                l1423 073A  
                              l1407 0702                                l1193 0453  
                              l1185 0443                                l1177 042F  
                              l1169 04B7                                l1281 05DD  
                              l1273 05B9                                l1265 058C  
                              l1257 057E                                l1249 03E0  
                              l1441 078C                                l1433 076A  
                              l1425 0742                                l1409 070A  
                              l1361 062B                                l1353 0618  
                              l1187 0448                                l1179 0434  
                              l1291 060D                                l1283 05E7  
                              l1275 05BF                                l1267 0592  
                              l1259 0587                                l1451 07B8  
                              l1443 0794                                l1435 076D  
                              l1427 074B                                l1419 0726  
                              l1371 0658                                l1363 0638  
                              l1355 061C                                l1189 044B  
                              l1197 0456                                l1293 03A9  
                              l1285 05F1                                l1277 05C9  
                              l1269 05A1                                l1461 07D4  
                              l1453 07C2                                l1445 07A0  
                              l1437 077A                                l1429 0757  
                              l1381 0685                                l1373 0665  
                              l1365 063E                                l1357 0620  
                              l1199 045C                                l1295 03B4  
                              l1287 05F9                                l1279 05D3  
                              l1463 07E3                                l1455 07D0  
                              l1447 07A3                                l1439 0782  
                              l1391 06BC                                l1375 066D  
                              l1367 064C                                l1383 0693  
                              l1359 0625                                l1297 04D3  
                              l1289 0603                                l1465 07E8  
                              l1449 07B0                                l1393 06BF  
                              l1385 06A3                                l1377 0677  
                              l1369 0653                                l1299 04D5  
                              l1467 07F0                                l1395 06CC  
                              l1387 06A9                                l1379 067F  
                              l1397 06D4                                l1389 06B0  
                              l1399 06DE                                l1489 0569  
                              _main 0618                        lcd_busy@busy 0071  
                              btemp 007E                                start 0000  
                   ?_lcd_put_nibble 0070                      ??_lcd_put_byte 0074  
                             ?_main 0070               getLengthArr@character 0074  
                             main@i 0028                               pclath 000A  
                             status 0003                               wtemp0 007E  
                   __initialization 07FC                __end_of_getLengthArr 03DC  
                      __end_of_main 07FC                       lcd_gotoxy@col 0078  
                     lcd_gotoxy@row 0076                  lcd_put_nibble@temp 0072  
                            ??_main 0021                              _TRISD1 0441  
                            _TRISD2 0442                              _TRISD3 0443  
                            _TRISD4 0444                              _TRISD5 0445  
                            _TRISD6 0446                              _TRISD7 0447  
                  __end_of_lcd_busy 0455                    __end_of_lcd_init 0618  
                  __end_of_lcd_putc 0575                    __end_of_lcd_puts 03FF  
                     lcd_put_byte@b 0073                    __end_ofmain@HKTT 00B2  
                  __end_ofmain@MSSV 008B             __end_of__initialization 07FC  
              __end_of_lcd_put_byte 048E                    ??_addCharSpecial 0076  
                    __pcstackCOMMON 0070                       main@your_born 005B  
                     main@your_name 006C                       main@your_live 008B  
                 lcd_gotoxy@address 0079               __size_of_getLengthArr 001D  
                  ??_lcd_put_nibble 0070                          __pmaintext 0618  
             __end_of_lcd_ShiftLeft 03B4                          _lcd_gotoxy 03FF  
                      _getLengthArr 03BF                           ?_lcd_busy 0070  
                         ?_lcd_init 0070                           ?_lcd_putc 0070  
                         ?_lcd_puts 0070                          __stringtab 0003  
           addCharSpecial@character 0079                             __ptext1 03DC  
                           __ptext2 0519                             __ptext3 03FF  
                           __ptext4 0575                             __ptext5 03B4  
                           __ptext6 03A9                             __ptext7 03BF  
                           __ptext8 04D2                             __ptext9 0455  
           __size_of_lcd_ShiftRight 000B               __size_of_lcd_put_byte 0039  
                        ??_lcd_busy 0070                          ??_lcd_init 0076  
                        ??_lcd_putc 007A                          ??_lcd_puts 007D  
              end_of_initialization 07FC                      lcd_put_byte@rs 0075  
            main@special_HKTT_class 003A                   __end_ofmain@class 00A6  
                      _lcd_put_byte 0455                         ?_lcd_gotoxy 0076  
                        main@length 0026                 start_initialization 07FC  
               __size_of_lcd_gotoxy 0026                           ___latbits 0002  
                     __pcstackBANK0 0020                     addCharSpecial@i 0077  
                    _lcd_ShiftRight 03B4                   __size_of_lcd_busy 0030  
                 __size_of_lcd_init 00A3                   __size_of_lcd_putc 005C  
                 __size_of_lcd_puts 0023                           __pstrings 0003  
           __size_of_addCharSpecial 0047              __end_of_lcd_ShiftRight 03BF  
            __size_of_lcd_ShiftLeft 000B                         __stringbase 0008  
           __size_of_lcd_put_nibble 0044                           main@class 009A  
                   ?_lcd_ShiftRight 0070                       getLengthArr@i 0072  
                         lcd_putc@c 007C                           lcd_puts@s 0020  
                         main@times 0024                        ??_lcd_gotoxy 0077  
    __end_ofmain@special_HKTT_class 005B               __end_ofmain@your_born 006C  
             __end_ofmain@your_name 007C               __end_ofmain@your_live 009A  
                __end_of_lcd_gotoxy 0425                       _lcd_ShiftLeft 03A9  
                __end_of__stringtab 0009                            __ptext10 048E  
                          __ptext11 0425                            _lcd_busy 0425  
                          _lcd_init 0575                            _lcd_putc 0519  
                          _lcd_puts 03DC                       __size_of_main 01E4  
                          main@HKTT 00A6                            main@MSSV 007C  
                    ?_lcd_ShiftLeft 0070                      _addCharSpecial 04D2  
                   lcd_put_nibble@b 0071  __end_ofmain@special_name_born_live 003A  
        main@special_name_born_live 0009                       ?_getLengthArr 0070  
                         stringcode 0003              __end_of_addCharSpecial 0519  
                    _lcd_put_nibble 048E                            stringdir 0003  
                          stringtab 0003                      ??_getLengthArr 0072  
