

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 07 10:07:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	strings
   294  0299                     __pstrings:
   295  0299                     stringtab:
   296  0299                     __stringtab:
   297  0299                     stringcode:	
   298                           ;	String table - string pointers are 1 byte each
   299                           
   300  0299                     stringdir:
   301  0299  3002               	movlw	high stringdir
   302  029A  008A               	movwf	10
   303  029B  0804               	movf	4,w
   304  029C  0A84               	incf	4,f
   305  029D  0782               	addwf	2,f
   306  029E                     __stringbase:
   307  029E  3400               	retlw	0
   308  029F                     __end_of__stringtab:
   309  029F                     main@special_name_title:
   310  029F  340D               	retlw	13
   311  02A0  3412               	retlw	18
   312  02A1  3408               	retlw	8
   313  02A2  3414               	retlw	20
   314  02A3  3408               	retlw	8
   315  02A4  3414               	retlw	20
   316  02A5  341E               	retlw	30
   317  02A6  3400               	retlw	0
   318  02A7  3401               	retlw	1
   319  02A8  340A               	retlw	10
   320  02A9  3414               	retlw	20
   321  02AA  3400               	retlw	0
   322  02AB  341C               	retlw	28
   323  02AC  3414               	retlw	20
   324  02AD  341F               	retlw	31
   325  02AE  3400               	retlw	0
   326  02AF  3400               	retlw	0
   327  02B0  3404               	retlw	4
   328  02B1  3408               	retlw	8
   329  02B2  3400               	retlw	0
   330  02B3  341C               	retlw	28
   331  02B4  3414               	retlw	20
   332  02B5  341E               	retlw	30
   333  02B6  3400               	retlw	0
   334  02B7  340C               	retlw	12
   335  02B8  3404               	retlw	4
   336  02B9  340B               	retlw	11
   337  02BA  3401               	retlw	1
   338  02BB  3412               	retlw	18
   339  02BC  3412               	retlw	18
   340  02BD  340C               	retlw	12
   341  02BE  3400               	retlw	0
   342  02BF  3404               	retlw	4
   343  02C0  3404               	retlw	4
   344  02C1  3412               	retlw	18
   345  02C2  3412               	retlw	18
   346  02C3  340E               	retlw	14
   347  02C4  3402               	retlw	2
   348  02C5  340E               	retlw	14
   349  02C6  3400               	retlw	0
   350  02C7  3499               	retlw	153
   351  02C8                     __end_ofmain@special_name_title:
   352  02C8                     main@your_name:
   353  02C8  344E               	retlw	78
   354  02C9  3467               	retlw	103
   355  02CA  3475               	retlw	117
   356  02CB  3479               	retlw	121
   357  02CC  3400               	retlw	0
   358  02CD  346E               	retlw	110
   359  02CE  3420               	retlw	32
   360  02CF  3454               	retlw	84
   361  02D0  3401               	retlw	1
   362  02D1  346E               	retlw	110
   363  02D2  3420               	retlw	32
   364  02D3  3450               	retlw	80
   365  02D4  3468               	retlw	104
   366  02D5  3402               	retlw	2
   367  02D6  3470               	retlw	112
   368  02D7  340A               	retlw	10
   369  02D8                     __end_ofmain@your_name:
   370  02D8                     main@title:
   371  02D8  3454               	retlw	84
   372  02D9  3448               	retlw	72
   373  02DA  3420               	retlw	32
   374  02DB  3456               	retlw	86
   375  02DC  3469               	retlw	105
   376  02DD  3420               	retlw	32
   377  02DE  3478               	retlw	120
   378  02DF  3403               	retlw	3
   379  02E0  3420               	retlw	32
   380  02E1  346C               	retlw	108
   381  02E2  3404               	retlw	4
   382  02E3  340A               	retlw	10
   383  02E4                     __end_ofmain@title:
   384  0006                     _PORTB	set	6
   385  005C                     _INTE	set	92
   386  0059                     _INTF	set	89
   387  005F                     _GIE	set	95
   388  0044                     _RD4	set	68
   389  0045                     _RD5	set	69
   390  0046                     _RD6	set	70
   391  0047                     _RD7	set	71
   392  0043                     _RD3	set	67
   393  0041                     _RD1	set	65
   394  0042                     _RD2	set	66
   395  0095                     _WPUB	set	149
   396  0086                     _TRISB	set	134
   397  040E                     _INTEDG	set	1038
   398  040F                     _nRBPU	set	1039
   399  0442                     _TRISD2	set	1090
   400  0441                     _TRISD1	set	1089
   401  0443                     _TRISD3	set	1091
   402  0447                     _TRISD7	set	1095
   403  0446                     _TRISD6	set	1094
   404  0445                     _TRISD5	set	1093
   405  0444                     _TRISD4	set	1092
   406  0189                     _ANSELH	set	393
   407  0188                     _ANSEL	set	392
   408                           
   409                           	psect	cinit
   410  000F                     start_initialization:	
   411                           ; #config settings
   412                           
   413  000F                     __initialization:
   414  000F                     end_of_initialization:	
   415                           ;End of C runtime variable initialization code
   416                           
   417  000F                     __end_of__initialization:
   418  000F  0183               	clrf	3
   419  0010  120A  118A  28C0   	ljmp	_main	;jump to C main() function
   420                           
   421                           	psect	cstackCOMMON
   422  0070                     __pcstackCOMMON:
   423  0070                     ?_lcd_busy:
   424  0070                     ?_lcd_put_nibble:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_lcd_putc:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_lcd_init:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_addCharSpecial:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_declarePort:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_main:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_myIsr:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_myIsr:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?i1_declarePort:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ??i1_declarePort:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 1 bytes @ 0x0
   456  0070                     	ds	5
   457  0075                     ??_lcd_busy:
   458  0075                     ??_lcd_put_nibble:	
   459                           ; 1 bytes @ 0x5
   460                           
   461  0075                     ??_declarePort:	
   462                           ; 1 bytes @ 0x5
   463                           
   464  0075                     ?_getLengthArr:	
   465                           ; 1 bytes @ 0x5
   466                           
   467                           
   468                           ; 2 bytes @ 0x5
   469  0075                     	ds	1
   470  0076                     lcd_busy@busy:
   471  0076                     lcd_put_nibble@b:	
   472                           ; 1 bytes @ 0x6
   473                           
   474                           
   475                           ; 1 bytes @ 0x6
   476  0076                     	ds	1
   477  0077                     ??_getLengthArr:
   478  0077                     lcd_put_nibble@temp:	
   479                           ; 1 bytes @ 0x7
   480                           
   481                           
   482                           ; 1 bytes @ 0x7
   483  0077                     	ds	1
   484  0078                     ?_lcd_put_byte:
   485  0078                     lcd_put_byte@b:	
   486                           ; 1 bytes @ 0x8
   487                           
   488                           
   489                           ; 1 bytes @ 0x8
   490  0078                     	ds	1
   491                           
   492                           	psect	cstackBANK0
   493  0020                     __pcstackBANK0:
   494  0020                     ??_lcd_put_byte:
   495  0020                     getLengthArr@character:	
   496                           ; 1 bytes @ 0x0
   497                           
   498                           
   499                           ; 1 bytes @ 0x0
   500  0020                     	ds	1
   501  0021                     lcd_put_byte@rs:
   502  0021                     getLengthArr@i:	
   503                           ; 1 bytes @ 0x1
   504                           
   505                           
   506                           ; 2 bytes @ 0x1
   507  0021                     	ds	1
   508  0022                     ?_lcd_gotoxy:
   509  0022                     ??_lcd_init:	
   510                           ; 1 bytes @ 0x2
   511                           
   512  0022                     ??_addCharSpecial:	
   513                           ; 1 bytes @ 0x2
   514                           
   515  0022                     lcd_gotoxy@row:	
   516                           ; 1 bytes @ 0x2
   517                           
   518                           
   519                           ; 1 bytes @ 0x2
   520  0022                     	ds	1
   521  0023                     ??_lcd_gotoxy:
   522  0023                     addCharSpecial@i:	
   523                           ; 1 bytes @ 0x3
   524                           
   525                           
   526                           ; 2 bytes @ 0x3
   527  0023                     	ds	1
   528  0024                     lcd_gotoxy@col:
   529                           
   530                           ; 1 bytes @ 0x4
   531  0024                     	ds	1
   532  0025                     lcd_gotoxy@address:
   533  0025                     addCharSpecial@character:	
   534                           ; 1 bytes @ 0x5
   535                           
   536                           
   537                           ; 1 bytes @ 0x5
   538  0025                     	ds	1
   539  0026                     ??_lcd_putc:
   540                           
   541                           ; 1 bytes @ 0x6
   542  0026                     	ds	2
   543  0028                     lcd_putc@c:
   544                           
   545                           ; 1 bytes @ 0x8
   546  0028                     	ds	1
   547  0029                     ??_main:
   548                           
   549                           ; 1 bytes @ 0x9
   550  0029                     	ds	3
   551  002C                     main@length:
   552                           
   553                           ; 2 bytes @ 0xC
   554  002C                     	ds	2
   555  002E                     main@i:
   556                           
   557                           ; 2 bytes @ 0xE
   558  002E                     	ds	2
   559                           
   560                           	psect	maintext
   561  00C0                     __pmaintext:	
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 61 in file "bai_3.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  i               2   14[BANK0 ] unsigned int 
   572 ;;  length          2   12[BANK0 ] unsigned int 
   573 ;;  times           2    0        unsigned int 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : B00/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         0       4       0       0       0
   585 ;;      Temps:          0       3       0       0       0
   586 ;;      Totals:         0       7       0       0       0
   587 ;;Total ram usage:        7 bytes
   588 ;; Hardware stack levels required when called: 6
   589 ;; This function calls:
   590 ;;		_addCharSpecial
   591 ;;		_declarePort
   592 ;;		_getLengthArr
   593 ;;		_lcd_gotoxy
   594 ;;		_lcd_init
   595 ;;		_lcd_putc
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _main
   603  00C0                     _main:
   604  00C0                     l1326:	
   605                           ;incstack = 0
   606                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   607                           
   608                           
   609                           ;bai_3.c: 62:     declarePort();
   610  00C0  120A  118A  23DC  120A  118A  	fcall	_declarePort
   611  00C5                     l1328:
   612  00C5                     l1330:
   613  00C5                     l1332:
   614  00C5                     l1334:
   615                           
   616                           ;bai_3.c: 75:     lcd_init();
   617  00C5  120A  118A  2013  120A  118A  	fcall	_lcd_init
   618  00CA                     l1336:
   619                           
   620                           ;bai_3.c: 76:     addCharSpecial(special_name_title);
   621  00CA  3001               	movlw	(low ((main@special_name_title-__stringbase)| (0+32768)))& (0+255)
   622  00CB  120A  118A  224C  120A  118A  	fcall	_addCharSpecial
   623  00D0                     l1338:
   624                           
   625                           ;bai_3.c: 78:         lcd_putc('\f');
   626  00D0  300C               	movlw	12
   627  00D1  120A  118A  21EE  120A  118A  	fcall	_lcd_putc
   628                           
   629                           ;bai_3.c: 79:         _delay((unsigned long)((500)*(4000000/4000.0)));
   630  00D6  3003               	movlw	3
   631  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   632  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   633  00D9  00AB               	movwf	??_main+2
   634  00DA  308A               	movlw	138
   635  00DB  00AA               	movwf	??_main+1
   636  00DC  3055               	movlw	85
   637  00DD  00A9               	movwf	??_main
   638  00DE                     u707:
   639  00DE  0BA9               	decfsz	??_main,f
   640  00DF  28DE               	goto	u707
   641  00E0  0BAA               	decfsz	??_main+1,f
   642  00E1  28DE               	goto	u707
   643  00E2  0BAB               	decfsz	??_main+2,f
   644  00E3  28DE               	goto	u707
   645  00E4                     l1340:
   646                           
   647                           ;bai_3.c: 80:         lcd_gotoxy(1, 0);
   648  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   649  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   650  00E6  01A2               	clrf	lcd_gotoxy@row
   651  00E7  3001               	movlw	1
   652  00E8  120A  118A  2395  120A  118A  	fcall	_lcd_gotoxy
   653  00ED                     l1342:
   654                           
   655                           ;bai_3.c: 81:         length = getLengthArr(title);
   656  00ED  303A               	movlw	(low ((main@title-__stringbase)| (0+32768)))& (0+255)
   657  00EE  120A  118A  23BD  120A  118A  	fcall	_getLengthArr
   658  00F3  0876               	movf	?_getLengthArr+1,w
   659  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   660  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   661  00F6  00AD               	movwf	main@length+1
   662  00F7  0875               	movf	?_getLengthArr,w
   663  00F8  00AC               	movwf	main@length
   664  00F9                     l1344:
   665                           
   666                           ;bai_3.c: 82:         for(i = 0; i < length; i++) {
   667  00F9  01AE               	clrf	main@i
   668  00FA  01AF               	clrf	main@i+1
   669  00FB  2911               	goto	l1350
   670  00FC                     l1346:
   671                           
   672                           ;bai_3.c: 83:             lcd_putc(title[i]);
   673  00FC  082E               	movf	main@i,w
   674  00FD  3E3A               	addlw	low ((main@title-__stringbase)| (0+32768))
   675  00FE  0084               	movwf	4
   676  00FF  120A  118A  2299  120A  118A  	fcall	stringdir
   677  0104  120A  118A  21EE  120A  118A  	fcall	_lcd_putc
   678  0109                     l1348:
   679                           
   680                           ;bai_3.c: 84:         }
   681  0109  3001               	movlw	1
   682  010A  1283               	bcf	3,5	;RP0=0, select bank0
   683  010B  1303               	bcf	3,6	;RP1=0, select bank0
   684  010C  07AE               	addwf	main@i,f
   685  010D  1803               	skipnc
   686  010E  0AAF               	incf	main@i+1,f
   687  010F  3000               	movlw	0
   688  0110  07AF               	addwf	main@i+1,f
   689  0111                     l1350:
   690  0111  082D               	movf	main@length+1,w
   691  0112  022F               	subwf	main@i+1,w
   692  0113  1D03               	skipz
   693  0114  2917               	goto	u685
   694  0115  082C               	movf	main@length,w
   695  0116  022E               	subwf	main@i,w
   696  0117                     u685:
   697  0117  1C03               	skipc
   698  0118  291A               	goto	u681
   699  0119  291B               	goto	u680
   700  011A                     u681:
   701  011A  28FC               	goto	l1346
   702  011B                     u680:
   703  011B                     l1352:
   704                           
   705                           ;bai_3.c: 85:         lcd_gotoxy(0, 1);
   706  011B  01A2               	clrf	lcd_gotoxy@row
   707  011C  0AA2               	incf	lcd_gotoxy@row,f
   708  011D  3000               	movlw	0
   709  011E  120A  118A  2395  120A  118A  	fcall	_lcd_gotoxy
   710  0123                     l1354:
   711                           
   712                           ;bai_3.c: 86:         length = getLengthArr(your_name);
   713  0123  302A               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   714  0124  120A  118A  23BD  120A  118A  	fcall	_getLengthArr
   715  0129  0876               	movf	?_getLengthArr+1,w
   716  012A  1283               	bcf	3,5	;RP0=0, select bank0
   717  012B  1303               	bcf	3,6	;RP1=0, select bank0
   718  012C  00AD               	movwf	main@length+1
   719  012D  0875               	movf	?_getLengthArr,w
   720  012E  00AC               	movwf	main@length
   721  012F                     l1356:
   722                           
   723                           ;bai_3.c: 87:         for(i = 0; i < length; i++) {
   724  012F  01AE               	clrf	main@i
   725  0130  01AF               	clrf	main@i+1
   726  0131  2947               	goto	l1362
   727  0132                     l1358:
   728                           
   729                           ;bai_3.c: 88:             lcd_putc(your_name[i]);
   730  0132  082E               	movf	main@i,w
   731  0133  3E2A               	addlw	low ((main@your_name-__stringbase)| (0+32768))
   732  0134  0084               	movwf	4
   733  0135  120A  118A  2299  120A  118A  	fcall	stringdir
   734  013A  120A  118A  21EE  120A  118A  	fcall	_lcd_putc
   735  013F                     l1360:
   736                           
   737                           ;bai_3.c: 89:         }
   738  013F  3001               	movlw	1
   739  0140  1283               	bcf	3,5	;RP0=0, select bank0
   740  0141  1303               	bcf	3,6	;RP1=0, select bank0
   741  0142  07AE               	addwf	main@i,f
   742  0143  1803               	skipnc
   743  0144  0AAF               	incf	main@i+1,f
   744  0145  3000               	movlw	0
   745  0146  07AF               	addwf	main@i+1,f
   746  0147                     l1362:
   747  0147  082D               	movf	main@length+1,w
   748  0148  022F               	subwf	main@i+1,w
   749  0149  1D03               	skipz
   750  014A  294D               	goto	u695
   751  014B  082C               	movf	main@length,w
   752  014C  022E               	subwf	main@i,w
   753  014D                     u695:
   754  014D  1C03               	skipc
   755  014E  2950               	goto	u691
   756  014F  2951               	goto	u690
   757  0150                     u691:
   758  0150  2932               	goto	l1358
   759  0151                     u690:
   760  0151                     l1364:
   761                           
   762                           ;bai_3.c: 90:         _delay((unsigned long)((500)*(4000000/4000.0)));
   763  0151  3003               	movlw	3
   764  0152  1283               	bcf	3,5	;RP0=0, select bank0
   765  0153  1303               	bcf	3,6	;RP1=0, select bank0
   766  0154  00AB               	movwf	??_main+2
   767  0155  308A               	movlw	138
   768  0156  00AA               	movwf	??_main+1
   769  0157  3055               	movlw	85
   770  0158  00A9               	movwf	??_main
   771  0159                     u717:
   772  0159  0BA9               	decfsz	??_main,f
   773  015A  2959               	goto	u717
   774  015B  0BAA               	decfsz	??_main+1,f
   775  015C  2959               	goto	u717
   776  015D  0BAB               	decfsz	??_main+2,f
   777  015E  2959               	goto	u717
   778  015F  28D0               	goto	l1338
   779  0160  120A  118A  280C   	ljmp	start
   780  0163                     __end_of_main:
   781                           
   782                           	psect	text1
   783  01EE                     __ptext1:	
   784 ;; *************** function _lcd_putc *****************
   785 ;; Defined at:
   786 ;;		line 190 in file "lcd.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  c               1    wreg     unsigned char 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  c               1    8[BANK0 ] unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0       1       0       0       0
   802 ;;      Temps:          0       2       0       0       0
   803 ;;      Totals:         0       3       0       0       0
   804 ;;Total ram usage:        3 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 5
   807 ;; This function calls:
   808 ;;		_lcd_busy
   809 ;;		_lcd_gotoxy
   810 ;;		_lcd_put_byte
   811 ;; This function is called by:
   812 ;;		_main
   813 ;;		_lcd_puts
   814 ;;		_lcd_String_Delay
   815 ;;		_putch
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _lcd_putc
   821  01EE                     _lcd_putc:
   822                           
   823                           ;incstack = 0
   824                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   825                           ;lcd_putc@c stored from wreg
   826  01EE  1283               	bcf	3,5	;RP0=0, select bank0
   827  01EF  1303               	bcf	3,6	;RP1=0, select bank0
   828  01F0  00A8               	movwf	lcd_putc@c
   829  01F1                     l1182:
   830                           
   831                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   832  01F1  2A38               	goto	l1198
   833  01F2                     l1184:
   834                           
   835                           ;lcd.c: 198:    lcd_put_byte(0,1);
   836  01F2  01F8               	clrf	lcd_put_byte@b
   837  01F3  0AF8               	incf	lcd_put_byte@b,f
   838  01F4  3000               	movlw	0
   839  01F5  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
   840  01FA                     l1186:	
   841                           ;lcd.c: 199:    while(lcd_busy());
   842                           
   843  01FA  120A  118A  2365  120A  118A  	fcall	_lcd_busy
   844  01FF  3A00               	xorlw	0
   845  0200  1D03               	skipz
   846  0201  2A03               	goto	u521
   847  0202  2A04               	goto	u520
   848  0203                     u521:
   849  0203  29FA               	goto	l1186
   850  0204                     u520:
   851  0204  2A4B               	goto	l72
   852  0205                     l1188:
   853                           
   854                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   855  0205  01A2               	clrf	lcd_gotoxy@row
   856  0206  0AA2               	incf	lcd_gotoxy@row,f
   857  0207  3000               	movlw	0
   858  0208  120A  118A  2395  120A  118A  	fcall	_lcd_gotoxy
   859                           
   860                           ;lcd.c: 203:    break;
   861  020D  2A4B               	goto	l72
   862  020E                     l1190:
   863                           
   864                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   865  020E  3010               	movlw	16
   866  020F  00A6               	movwf	??_lcd_putc
   867  0210  0826               	movf	??_lcd_putc,w
   868  0211  00F8               	movwf	lcd_put_byte@b
   869  0212  3000               	movlw	0
   870  0213  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
   871  0218                     l1192:	
   872                           ;lcd.c: 206:    while(lcd_busy());
   873                           
   874  0218  120A  118A  2365  120A  118A  	fcall	_lcd_busy
   875  021D  3A00               	xorlw	0
   876  021E  1D03               	skipz
   877  021F  2A21               	goto	u531
   878  0220  2A22               	goto	u530
   879  0221                     u531:
   880  0221  2A18               	goto	l1192
   881  0222                     u530:
   882  0222  2A4B               	goto	l72
   883  0223                     l1194:
   884                           
   885                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   886  0223  0828               	movf	lcd_putc@c,w
   887  0224  00A6               	movwf	??_lcd_putc
   888  0225  0826               	movf	??_lcd_putc,w
   889  0226  00F8               	movwf	lcd_put_byte@b
   890  0227  3001               	movlw	1
   891  0228  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
   892  022D                     l1196:	
   893                           ;lcd.c: 212:     while(lcd_busy());
   894                           
   895  022D  120A  118A  2365  120A  118A  	fcall	_lcd_busy
   896  0232  3A00               	xorlw	0
   897  0233  1D03               	skipz
   898  0234  2A36               	goto	u541
   899  0235  2A37               	goto	u540
   900  0236                     u541:
   901  0236  2A2D               	goto	l1196
   902  0237                     u540:
   903  0237  2A4B               	goto	l72
   904  0238                     l1198:
   905  0238  0828               	movf	lcd_putc@c,w
   906  0239  00A6               	movwf	??_lcd_putc
   907  023A  01A7               	clrf	??_lcd_putc+1
   908                           
   909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   910                           ; Switch size 1, requested type "simple"
   911                           ; Number of cases is 1, Range of values is 0 to 0
   912                           ; switch strategies available:
   913                           ; Name         Instructions Cycles
   914                           ; simple_byte            4     3 (average)
   915                           ; direct_byte           11     8 (fixed)
   916                           ; jumptable            260     6 (fixed)
   917                           ;	Chosen strategy is simple_byte
   918  023B  0827               	movf	??_lcd_putc+1,w
   919  023C  3A00               	xorlw	0	; case 0
   920  023D  1903               	skipnz
   921  023E  2A40               	goto	l1396
   922  023F  2A23               	goto	l1194
   923  0240                     l1396:
   924                           
   925                           ; Switch size 1, requested type "simple"
   926                           ; Number of cases is 3, Range of values is 8 to 12
   927                           ; switch strategies available:
   928                           ; Name         Instructions Cycles
   929                           ; simple_byte           10     6 (average)
   930                           ; direct_byte           26    11 (fixed)
   931                           ; jumptable            263     9 (fixed)
   932                           ;	Chosen strategy is simple_byte
   933  0240  0826               	movf	??_lcd_putc,w
   934  0241  3A08               	xorlw	8	; case 8
   935  0242  1903               	skipnz
   936  0243  2A0E               	goto	l1190
   937  0244  3A02               	xorlw	2	; case 10
   938  0245  1903               	skipnz
   939  0246  2A05               	goto	l1188
   940  0247  3A06               	xorlw	6	; case 12
   941  0248  1903               	skipnz
   942  0249  29F2               	goto	l1184
   943  024A  2A23               	goto	l1194
   944  024B                     l72:
   945  024B  0008               	return
   946  024C                     __end_of_lcd_putc:
   947                           
   948                           	psect	text2
   949  0395                     __ptext2:	
   950 ;; *************** function _lcd_gotoxy *****************
   951 ;; Defined at:
   952 ;;		line 167 in file "lcd.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  col             1    wreg     unsigned char 
   955 ;;  row             1    2[BANK0 ] unsigned char 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  col             1    4[BANK0 ] unsigned char 
   958 ;;  address         1    5[BANK0 ] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0, pclath, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       1       0       0       0
   969 ;;      Locals:         0       2       0       0       0
   970 ;;      Temps:          0       1       0       0       0
   971 ;;      Totals:         0       4       0       0       0
   972 ;;Total ram usage:        4 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; Hardware stack levels required when called: 4
   975 ;; This function calls:
   976 ;;		_lcd_busy
   977 ;;		_lcd_put_byte
   978 ;; This function is called by:
   979 ;;		_lcd_putc
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _lcd_gotoxy
   986  0395                     _lcd_gotoxy:
   987                           
   988                           ;incstack = 0
   989                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
   990                           ;lcd_gotoxy@col stored from wreg
   991  0395  1283               	bcf	3,5	;RP0=0, select bank0
   992  0396  1303               	bcf	3,6	;RP1=0, select bank0
   993  0397  00A4               	movwf	lcd_gotoxy@col
   994  0398                     l1170:
   995                           
   996                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
   997  0398  0822               	movf	lcd_gotoxy@row,w
   998  0399  1903               	btfsc	3,2
   999  039A  2B9C               	goto	u501
  1000  039B  2B9D               	goto	u500
  1001  039C                     u501:
  1002  039C  2BA2               	goto	l1174
  1003  039D                     u500:
  1004  039D                     l1172:
  1005                           
  1006                           ;lcd.c: 174:   address=0x40;
  1007  039D  3040               	movlw	64
  1008  039E  00A3               	movwf	??_lcd_gotoxy
  1009  039F  0823               	movf	??_lcd_gotoxy,w
  1010  03A0  00A5               	movwf	lcd_gotoxy@address
  1011  03A1  2BA3               	goto	l1176
  1012  03A2                     l1174:
  1013                           
  1014                           ;lcd.c: 176:   address=0;
  1015  03A2  01A5               	clrf	lcd_gotoxy@address
  1016  03A3                     l1176:
  1017                           
  1018                           ;lcd.c: 178:  address += col;
  1019  03A3  0824               	movf	lcd_gotoxy@col,w
  1020  03A4  00A3               	movwf	??_lcd_gotoxy
  1021  03A5  0823               	movf	??_lcd_gotoxy,w
  1022  03A6  07A5               	addwf	lcd_gotoxy@address,f
  1023  03A7                     l1178:
  1024                           
  1025                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1026  03A7  0825               	movf	lcd_gotoxy@address,w
  1027  03A8  3880               	iorlw	128
  1028  03A9  00A3               	movwf	??_lcd_gotoxy
  1029  03AA  0823               	movf	??_lcd_gotoxy,w
  1030  03AB  00F8               	movwf	lcd_put_byte@b
  1031  03AC  3000               	movlw	0
  1032  03AD  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
  1033  03B2                     l1180:	
  1034                           ;lcd.c: 181:  while(lcd_busy());
  1035                           
  1036  03B2  120A  118A  2365  120A  118A  	fcall	_lcd_busy
  1037  03B7  3A00               	xorlw	0
  1038  03B8  1D03               	skipz
  1039  03B9  2BBB               	goto	u511
  1040  03BA  2BBC               	goto	u510
  1041  03BB                     u511:
  1042  03BB  2BB2               	goto	l1180
  1043  03BC                     u510:
  1044  03BC                     l54:
  1045  03BC  0008               	return
  1046  03BD                     __end_of_lcd_gotoxy:
  1047                           
  1048                           	psect	text3
  1049  0013                     __ptext3:	
  1050 ;; *************** function _lcd_init *****************
  1051 ;; Defined at:
  1052 ;;		line 241 in file "lcd.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  i               1    0        unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0
  1068 ;;      Temps:          0       2       0       0       0
  1069 ;;      Totals:         0       2       0       0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 4
  1073 ;; This function calls:
  1074 ;;		_lcd_busy
  1075 ;;		_lcd_put_byte
  1076 ;;		_lcd_put_nibble
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _lcd_init
  1084  0013                     _lcd_init:
  1085  0013                     l1206:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1088                           
  1089                           
  1090                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1091  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0014  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0015  1188               	bcf	8,3	;volatile
  1094                           
  1095                           ;lcd.c: 248:  TRISD1 = 0;
  1096  0016  1088               	bcf	8,1	;volatile
  1097                           
  1098                           ;lcd.c: 249:  TRISD2 = 0;
  1099  0017  1108               	bcf	8,2	;volatile
  1100                           
  1101                           ;lcd.c: 250:  TRISD4 = 0;
  1102  0018  1208               	bcf	8,4	;volatile
  1103                           
  1104                           ;lcd.c: 251:  TRISD5 = 0;
  1105  0019  1288               	bcf	8,5	;volatile
  1106                           
  1107                           ;lcd.c: 252:  TRISD6 = 0;
  1108  001A  1308               	bcf	8,6	;volatile
  1109                           
  1110                           ;lcd.c: 253:  TRISD7 = 0;
  1111  001B  1388               	bcf	8,7	;volatile
  1112  001C                     l1208:
  1113                           
  1114                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1115  001C  3014               	movlw	20
  1116  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1117  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1118  001F  00A3               	movwf	??_lcd_init+1
  1119  0020  3079               	movlw	121
  1120  0021  00A2               	movwf	??_lcd_init
  1121  0022                     u727:
  1122  0022  0BA2               	decfsz	??_lcd_init,f
  1123  0023  2822               	goto	u727
  1124  0024  0BA3               	decfsz	??_lcd_init+1,f
  1125  0025  2822               	goto	u727
  1126  0026                     l1210:
  1127                           
  1128                           ;lcd.c: 257:  RD1 = 0;
  1129  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0028  1088               	bcf	8,1	;volatile
  1132  0029                     l1212:
  1133                           
  1134                           ;lcd.c: 258:  RD2 = 0;
  1135  0029  1108               	bcf	8,2	;volatile
  1136  002A                     l1214:
  1137                           
  1138                           ;lcd.c: 259:  RD3 = 0;
  1139  002A  1188               	bcf	8,3	;volatile
  1140  002B                     l1216:
  1141                           
  1142                           ;lcd.c: 261:  lcd_put_nibble(3);
  1143  002B  3003               	movlw	3
  1144  002C  120A  118A  22E4  120A  118A  	fcall	_lcd_put_nibble
  1145  0031                     l1218:
  1146                           
  1147                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1148  0031  300D               	movlw	13
  1149  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0034  00A3               	movwf	??_lcd_init+1
  1152  0035  30FB               	movlw	251
  1153  0036  00A2               	movwf	??_lcd_init
  1154  0037                     u737:
  1155  0037  0BA2               	decfsz	??_lcd_init,f
  1156  0038  2837               	goto	u737
  1157  0039  0BA3               	decfsz	??_lcd_init+1,f
  1158  003A  2837               	goto	u737
  1159                           
  1160                           ;lcd.c: 263:  lcd_put_nibble(3);
  1161  003B  3003               	movlw	3
  1162  003C  120A  118A  22E4  120A  118A  	fcall	_lcd_put_nibble
  1163  0041                     l1220:
  1164                           
  1165                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1166  0041  300D               	movlw	13
  1167  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0044  00A3               	movwf	??_lcd_init+1
  1170  0045  30FB               	movlw	251
  1171  0046  00A2               	movwf	??_lcd_init
  1172  0047                     u747:
  1173  0047  0BA2               	decfsz	??_lcd_init,f
  1174  0048  2847               	goto	u747
  1175  0049  0BA3               	decfsz	??_lcd_init+1,f
  1176  004A  2847               	goto	u747
  1177  004B                     l1222:
  1178                           
  1179                           ;lcd.c: 265:  lcd_put_nibble(3);
  1180  004B  3003               	movlw	3
  1181  004C  120A  118A  22E4  120A  118A  	fcall	_lcd_put_nibble
  1182                           
  1183                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1184  0051  300D               	movlw	13
  1185  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0054  00A3               	movwf	??_lcd_init+1
  1188  0055  30FB               	movlw	251
  1189  0056  00A2               	movwf	??_lcd_init
  1190  0057                     u757:
  1191  0057  0BA2               	decfsz	??_lcd_init,f
  1192  0058  2857               	goto	u757
  1193  0059  0BA3               	decfsz	??_lcd_init+1,f
  1194  005A  2857               	goto	u757
  1195  005B                     l1224:
  1196                           
  1197                           ;lcd.c: 268:  lcd_put_nibble(2);
  1198  005B  3002               	movlw	2
  1199  005C  120A  118A  22E4  120A  118A  	fcall	_lcd_put_nibble
  1200  0061                     l1226:	
  1201                           ;lcd.c: 269:  while(lcd_busy());
  1202                           
  1203  0061  120A  118A  2365  120A  118A  	fcall	_lcd_busy
  1204  0066  3A00               	xorlw	0
  1205  0067  1D03               	skipz
  1206  0068  286A               	goto	u551
  1207  0069  286B               	goto	u550
  1208  006A                     u551:
  1209  006A  2861               	goto	l1226
  1210  006B                     u550:
  1211  006B                     l1228:
  1212                           
  1213                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1214  006B  3028               	movlw	40
  1215  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1216  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1217  006E  00A2               	movwf	??_lcd_init
  1218  006F  0822               	movf	??_lcd_init,w
  1219  0070  00F8               	movwf	lcd_put_byte@b
  1220  0071  3000               	movlw	0
  1221  0072  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
  1222  0077                     l1230:	
  1223                           ;lcd.c: 272:  while(lcd_busy());
  1224                           
  1225  0077  120A  118A  2365  120A  118A  	fcall	_lcd_busy
  1226  007C  3A00               	xorlw	0
  1227  007D  1D03               	skipz
  1228  007E  2880               	goto	u561
  1229  007F  2881               	goto	u560
  1230  0080                     u561:
  1231  0080  2877               	goto	l1230
  1232  0081                     u560:
  1233  0081                     l1232:
  1234                           
  1235                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1236  0081  300C               	movlw	12
  1237  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0084  00A2               	movwf	??_lcd_init
  1240  0085  0822               	movf	??_lcd_init,w
  1241  0086  00F8               	movwf	lcd_put_byte@b
  1242  0087  3000               	movlw	0
  1243  0088  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
  1244  008D                     l1234:	
  1245                           ;lcd.c: 275:  while(lcd_busy());
  1246                           
  1247  008D  120A  118A  2365  120A  118A  	fcall	_lcd_busy
  1248  0092  3A00               	xorlw	0
  1249  0093  1D03               	skipz
  1250  0094  2896               	goto	u571
  1251  0095  2897               	goto	u570
  1252  0096                     u571:
  1253  0096  288D               	goto	l1234
  1254  0097                     u570:
  1255  0097                     l1236:
  1256                           
  1257                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1258  0097  01F8               	clrf	lcd_put_byte@b
  1259  0098  0AF8               	incf	lcd_put_byte@b,f
  1260  0099  3000               	movlw	0
  1261  009A  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
  1262  009F                     l1238:	
  1263                           ;lcd.c: 278:  while(lcd_busy());
  1264                           
  1265  009F  120A  118A  2365  120A  118A  	fcall	_lcd_busy
  1266  00A4  3A00               	xorlw	0
  1267  00A5  1D03               	skipz
  1268  00A6  28A8               	goto	u581
  1269  00A7  28A9               	goto	u580
  1270  00A8                     u581:
  1271  00A8  289F               	goto	l1238
  1272  00A9                     u580:
  1273  00A9                     l1240:
  1274                           
  1275                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1276  00A9  3006               	movlw	6
  1277  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1278  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1279  00AC  00A2               	movwf	??_lcd_init
  1280  00AD  0822               	movf	??_lcd_init,w
  1281  00AE  00F8               	movwf	lcd_put_byte@b
  1282  00AF  3000               	movlw	0
  1283  00B0  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
  1284  00B5                     l1242:	
  1285                           ;lcd.c: 281:  while(lcd_busy());
  1286                           
  1287  00B5  120A  118A  2365  120A  118A  	fcall	_lcd_busy
  1288  00BA  3A00               	xorlw	0
  1289  00BB  1D03               	skipz
  1290  00BC  28BE               	goto	u591
  1291  00BD  28BF               	goto	u590
  1292  00BE                     u591:
  1293  00BE  28B5               	goto	l1242
  1294  00BF                     u590:
  1295  00BF                     l96:
  1296  00BF  0008               	return
  1297  00C0                     __end_of_lcd_init:
  1298                           
  1299                           	psect	text4
  1300  03BD                     __ptext4:	
  1301 ;; *************** function _getLengthArr *****************
  1302 ;; Defined at:
  1303 ;;		line 38 in file "bai_3.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  character       1    wreg     PTR unsigned char 
  1306 ;;		 -> main@your_name(16), main@title(12), 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  character       1    0[BANK0 ] PTR unsigned char 
  1309 ;;		 -> main@your_name(16), main@title(12), 
  1310 ;;  i               2    1[BANK0 ] unsigned int 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2    5[COMMON] unsigned int 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         2       0       0       0       0
  1321 ;;      Locals:         0       3       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         2       3       0       0       0
  1324 ;;Total ram usage:        5 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 2
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function _getLengthArr
  1336  03BD                     _getLengthArr:
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1340                           ;getLengthArr@character stored from wreg
  1341  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1342  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1343  03BF  00A0               	movwf	getLengthArr@character
  1344  03C0                     l1262:
  1345                           
  1346                           ;bai_3.c: 39:     unsigned int i = 0;
  1347  03C0  01A1               	clrf	getLengthArr@i
  1348  03C1  01A2               	clrf	getLengthArr@i+1
  1349  03C2                     l1264:
  1350                           
  1351                           ;bai_3.c: 41:         if(character[i] == '\n')
  1352  03C2  0821               	movf	getLengthArr@i,w
  1353  03C3  0720               	addwf	getLengthArr@character,w
  1354  03C4  0084               	movwf	4
  1355  03C5  120A  118A  2299  120A  118A  	fcall	stringdir
  1356  03CA  3A0A               	xorlw	10
  1357  03CB  1D03               	skipz
  1358  03CC  2BCE               	goto	u631
  1359  03CD  2BCF               	goto	u630
  1360  03CE                     u631:
  1361  03CE  2BD0               	goto	l1268
  1362  03CF                     u630:
  1363  03CF  2BD7               	goto	l1270
  1364  03D0                     l1268:
  1365                           
  1366                           ;bai_3.c: 45:         i++;
  1367  03D0  3001               	movlw	1
  1368  03D1  07A1               	addwf	getLengthArr@i,f
  1369  03D2  1803               	skipnc
  1370  03D3  0AA2               	incf	getLengthArr@i+1,f
  1371  03D4  3000               	movlw	0
  1372  03D5  07A2               	addwf	getLengthArr@i+1,f
  1373  03D6  2BC2               	goto	l1264
  1374  03D7                     l1270:
  1375                           
  1376                           ;bai_3.c: 47:     return i;
  1377  03D7  0822               	movf	getLengthArr@i+1,w
  1378  03D8  00F6               	movwf	?_getLengthArr+1
  1379  03D9  0821               	movf	getLengthArr@i,w
  1380  03DA  00F5               	movwf	?_getLengthArr
  1381  03DB                     l174:
  1382  03DB  0008               	return
  1383  03DC                     __end_of_getLengthArr:
  1384                           
  1385                           	psect	text5
  1386  03DC                     __ptext5:	
  1387 ;; *************** function _declarePort *****************
  1388 ;; Defined at:
  1389 ;;		line 50 in file "bai_3.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 2
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _declarePort
  1419  03DC                     _declarePort:
  1420  03DC                     l1274:	
  1421                           ;incstack = 0
  1422                           ; Regs used in _declarePort: [wreg+status,2]
  1423                           
  1424                           
  1425                           ;bai_3.c: 51:     ANSEL = ANSELH = 0;
  1426  03DC  1683               	bsf	3,5	;RP0=1, select bank3
  1427  03DD  1703               	bsf	3,6	;RP1=1, select bank3
  1428  03DE  0189               	clrf	9	;volatile
  1429  03DF  0188               	clrf	8	;volatile
  1430  03E0                     l1276:
  1431                           
  1432                           ;bai_3.c: 52:     TRISB = WPUB = 0x01;
  1433  03E0  3001               	movlw	1
  1434  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  1435  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  1436  03E3  0095               	movwf	21	;volatile
  1437  03E4  0086               	movwf	6	;volatile
  1438  03E5                     l1278:
  1439                           
  1440                           ;bai_3.c: 54:     nRBPU = 0;
  1441  03E5  1381               	bcf	1,7	;volatile
  1442  03E6                     l1280:
  1443                           
  1444                           ;bai_3.c: 55:     GIE = 1;
  1445  03E6  178B               	bsf	11,7	;volatile
  1446  03E7                     l1282:
  1447                           
  1448                           ;bai_3.c: 56:     INTF = 0;
  1449  03E7  108B               	bcf	11,1	;volatile
  1450  03E8                     l1284:
  1451                           
  1452                           ;bai_3.c: 57:     INTE = 1;
  1453  03E8  160B               	bsf	11,4	;volatile
  1454  03E9                     l1286:
  1455                           
  1456                           ;bai_3.c: 58:     INTEDG = 1;
  1457  03E9  1701               	bsf	1,6	;volatile
  1458  03EA                     l177:
  1459  03EA  0008               	return
  1460  03EB                     __end_of_declarePort:
  1461                           
  1462                           	psect	text6
  1463  024C                     __ptext6:	
  1464 ;; *************** function _addCharSpecial *****************
  1465 ;; Defined at:
  1466 ;;		line 27 in file "bai_3.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  character       1    wreg     PTR unsigned char 
  1469 ;;		 -> main@special_name_title(41), 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  character       1    5[BANK0 ] PTR unsigned char 
  1472 ;;		 -> main@special_name_title(41), 
  1473 ;;  i               2    3[BANK0 ] unsigned int 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         0       3       0       0       0
  1485 ;;      Temps:          0       1       0       0       0
  1486 ;;      Totals:         0       4       0       0       0
  1487 ;;Total ram usage:        4 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 4
  1490 ;; This function calls:
  1491 ;;		_lcd_busy
  1492 ;;		_lcd_put_byte
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _addCharSpecial
  1500  024C                     _addCharSpecial:
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1504                           ;addCharSpecial@character stored from wreg
  1505  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1506  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1507  024E  00A5               	movwf	addCharSpecial@character
  1508  024F                     l1248:
  1509                           
  1510                           ;bai_3.c: 28:     unsigned int i = 0;
  1511  024F  01A3               	clrf	addCharSpecial@i
  1512  0250  01A4               	clrf	addCharSpecial@i+1
  1513  0251                     l1250:
  1514                           
  1515                           ;bai_3.c: 29:     lcd_put_byte(0, 0x40);
  1516  0251  3040               	movlw	64
  1517  0252  00A2               	movwf	??_addCharSpecial
  1518  0253  0822               	movf	??_addCharSpecial,w
  1519  0254  00F8               	movwf	lcd_put_byte@b
  1520  0255  3000               	movlw	0
  1521  0256  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
  1522  025B                     l1252:	
  1523                           ;bai_3.c: 30:     while(lcd_busy());
  1524                           
  1525  025B  120A  118A  2365  120A  118A  	fcall	_lcd_busy
  1526  0260  3A00               	xorlw	0
  1527  0261  1D03               	skipz
  1528  0262  2A64               	goto	u601
  1529  0263  2A65               	goto	u600
  1530  0264                     u601:
  1531  0264  2A5B               	goto	l1252
  1532  0265                     u600:
  1533  0265  2A89               	goto	l1260
  1534  0266                     l1254:
  1535                           
  1536                           ;bai_3.c: 32:         lcd_put_byte(1, character[i]);
  1537  0266  0823               	movf	addCharSpecial@i,w
  1538  0267  0725               	addwf	addCharSpecial@character,w
  1539  0268  0084               	movwf	4
  1540  0269  120A  118A  2299  120A  118A  	fcall	stringdir
  1541  026E  00A2               	movwf	??_addCharSpecial
  1542  026F  0822               	movf	??_addCharSpecial,w
  1543  0270  00F8               	movwf	lcd_put_byte@b
  1544  0271  3001               	movlw	1
  1545  0272  120A  118A  2328  120A  118A  	fcall	_lcd_put_byte
  1546  0277                     l1256:	
  1547                           ;bai_3.c: 33:         while(lcd_busy());
  1548                           
  1549  0277  120A  118A  2365  120A  118A  	fcall	_lcd_busy
  1550  027C  3A00               	xorlw	0
  1551  027D  1D03               	skipz
  1552  027E  2A80               	goto	u611
  1553  027F  2A81               	goto	u610
  1554  0280                     u611:
  1555  0280  2A77               	goto	l1256
  1556  0281                     u610:
  1557  0281                     l1258:
  1558                           
  1559                           ;bai_3.c: 34:         i++;
  1560  0281  3001               	movlw	1
  1561  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0284  07A3               	addwf	addCharSpecial@i,f
  1564  0285  1803               	skipnc
  1565  0286  0AA4               	incf	addCharSpecial@i+1,f
  1566  0287  3000               	movlw	0
  1567  0288  07A4               	addwf	addCharSpecial@i+1,f
  1568  0289                     l1260:
  1569                           
  1570                           ;bai_3.c: 31:     while(character[i] != 0x99) {
  1571  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1572  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1573  028B  0823               	movf	addCharSpecial@i,w
  1574  028C  0725               	addwf	addCharSpecial@character,w
  1575  028D  0084               	movwf	4
  1576  028E  120A  118A  2299  120A  118A  	fcall	stringdir
  1577  0293  3A99               	xorlw	153
  1578  0294  1D03               	skipz
  1579  0295  2A97               	goto	u621
  1580  0296  2A98               	goto	u620
  1581  0297                     u621:
  1582  0297  2A66               	goto	l1254
  1583  0298                     u620:
  1584  0298                     l167:
  1585  0298  0008               	return
  1586  0299                     __end_of_addCharSpecial:
  1587                           
  1588                           	psect	text7
  1589  0328                     __ptext7:	
  1590 ;; *************** function _lcd_put_byte *****************
  1591 ;; Defined at:
  1592 ;;		line 134 in file "lcd.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  rs              1    wreg     unsigned char 
  1595 ;;  b               1    8[COMMON] unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  rs              1    1[BANK0 ] unsigned char 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0, pclath, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         1       0       0       0       0
  1608 ;;      Locals:         0       1       0       0       0
  1609 ;;      Temps:          0       1       0       0       0
  1610 ;;      Totals:         1       2       0       0       0
  1611 ;;Total ram usage:        3 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 3
  1614 ;; This function calls:
  1615 ;;		_lcd_put_nibble
  1616 ;; This function is called by:
  1617 ;;		_lcd_gotoxy
  1618 ;;		_lcd_putc
  1619 ;;		_lcd_init
  1620 ;;		_addCharSpecial
  1621 ;;		_lcd_ShiftLeft
  1622 ;;		_lcd_ShiftRight
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function _lcd_put_byte
  1628  0328                     _lcd_put_byte:
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1632                           ;lcd_put_byte@rs stored from wreg
  1633  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1635  032A  00A1               	movwf	lcd_put_byte@rs
  1636  032B                     l1154:
  1637                           
  1638                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1639  032B  1683               	bsf	3,5	;RP0=1, select bank1
  1640  032C  1303               	bcf	3,6	;RP1=0, select bank1
  1641  032D  1208               	bcf	8,4	;volatile
  1642                           
  1643                           ;lcd.c: 140:  TRISD5 = 0;
  1644  032E  1288               	bcf	8,5	;volatile
  1645                           
  1646                           ;lcd.c: 141:  TRISD6 = 0;
  1647  032F  1308               	bcf	8,6	;volatile
  1648                           
  1649                           ;lcd.c: 142:  TRISD7 = 0;
  1650  0330  1388               	bcf	8,7	;volatile
  1651  0331                     l1156:
  1652                           
  1653                           ;lcd.c: 144:  if(rs)
  1654  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0333  0821               	movf	lcd_put_byte@rs,w
  1657  0334  1903               	btfsc	3,2
  1658  0335  2B37               	goto	u481
  1659  0336  2B38               	goto	u480
  1660  0337                     u481:
  1661  0337  2B3A               	goto	l44
  1662  0338                     u480:
  1663  0338                     l1158:
  1664                           
  1665                           ;lcd.c: 145:   RD1 = 1;
  1666  0338  1488               	bsf	8,1	;volatile
  1667  0339  2B3B               	goto	l1160
  1668  033A                     l44:	
  1669                           ;lcd.c: 146:  else
  1670                           
  1671                           
  1672                           ;lcd.c: 147:   RD1 = 0;
  1673  033A  1088               	bcf	8,1	;volatile
  1674  033B                     l1160:
  1675                           
  1676                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1677  033B  3005               	movlw	5
  1678  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1679  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1680  033E  00A0               	movwf	??_lcd_put_byte
  1681  033F                     u767:
  1682  033F  0BA0               	decfsz	??_lcd_put_byte,f
  1683  0340  2B3F               	goto	u767
  1684  0341  2B42               	nop2
  1685  0342                     l1162:
  1686                           
  1687                           ;lcd.c: 150:  RD2 = 0;
  1688  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0344  1108               	bcf	8,2	;volatile
  1691                           
  1692                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1693  0345  3005               	movlw	5
  1694  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0348  00A0               	movwf	??_lcd_put_byte
  1697  0349                     u777:
  1698  0349  0BA0               	decfsz	??_lcd_put_byte,f
  1699  034A  2B49               	goto	u777
  1700  034B  2B4C               	nop2
  1701  034C                     l1164:
  1702                           
  1703                           ;lcd.c: 153:  RD3 = 0;
  1704  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1705  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1706  034E  1188               	bcf	8,3	;volatile
  1707  034F                     l1166:
  1708                           
  1709                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1710  034F  0878               	movf	lcd_put_byte@b,w
  1711  0350  00A0               	movwf	??_lcd_put_byte
  1712  0351  3004               	movlw	4
  1713  0352                     u495:
  1714  0352  1003               	clrc
  1715  0353  0CA0               	rrf	??_lcd_put_byte,f
  1716  0354  3EFF               	addlw	-1
  1717  0355  1D03               	skipz
  1718  0356  2B52               	goto	u495
  1719  0357  0820               	movf	??_lcd_put_byte,w
  1720  0358  120A  118A  22E4  120A  118A  	fcall	_lcd_put_nibble
  1721  035D                     l1168:
  1722                           
  1723                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1724  035D  0878               	movf	lcd_put_byte@b,w
  1725  035E  390F               	andlw	15
  1726  035F  120A  118A  22E4  120A  118A  	fcall	_lcd_put_nibble
  1727  0364                     l46:
  1728  0364  0008               	return
  1729  0365                     __end_of_lcd_put_byte:
  1730                           
  1731                           	psect	text8
  1732  02E4                     __ptext8:	
  1733 ;; *************** function _lcd_put_nibble *****************
  1734 ;; Defined at:
  1735 ;;		line 103 in file "lcd.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  b               1    wreg     unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  b               1    6[COMMON] unsigned char 
  1740 ;;  temp            1    7[COMMON] struct _BYTE_VAL
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         2       0       0       0       0
  1752 ;;      Temps:          1       0       0       0       0
  1753 ;;      Totals:         3       0       0       0       0
  1754 ;;Total ram usage:        3 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 2
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_lcd_put_byte
  1761 ;;		_lcd_init
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _lcd_put_nibble
  1767  02E4                     _lcd_put_nibble:
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _lcd_put_nibble: [wreg]
  1771                           ;lcd_put_nibble@b stored from wreg
  1772  02E4  00F6               	movwf	lcd_put_nibble@b
  1773  02E5                     l1116:
  1774                           
  1775                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1776  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1777  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  1778  02E7  1208               	bcf	8,4	;volatile
  1779                           
  1780                           ;lcd.c: 110:  TRISD5 = 0;
  1781  02E8  1288               	bcf	8,5	;volatile
  1782                           
  1783                           ;lcd.c: 111:  TRISD6 = 0;
  1784  02E9  1308               	bcf	8,6	;volatile
  1785                           
  1786                           ;lcd.c: 112:  TRISD7 = 0;
  1787  02EA  1388               	bcf	8,7	;volatile
  1788  02EB                     l1118:
  1789                           
  1790                           ;lcd.c: 114:  temp.Val = b;
  1791  02EB  0876               	movf	lcd_put_nibble@b,w
  1792  02EC  00F5               	movwf	??_lcd_put_nibble
  1793  02ED  0875               	movf	??_lcd_put_nibble,w
  1794  02EE  00F7               	movwf	lcd_put_nibble@temp
  1795  02EF                     l1120:
  1796                           
  1797                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1798  02EF  1877               	btfsc	lcd_put_nibble@temp,0
  1799  02F0  2AF2               	goto	u401
  1800  02F1  2AF6               	goto	u400
  1801  02F2                     u401:
  1802  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1803  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1804  02F4  1608               	bsf	8,4	;volatile
  1805  02F5  2AF9               	goto	u414
  1806  02F6                     u400:
  1807  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1808  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1809  02F8  1208               	bcf	8,4	;volatile
  1810  02F9                     u414:
  1811  02F9                     l1122:
  1812                           
  1813                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1814  02F9  18F7               	btfsc	lcd_put_nibble@temp,1
  1815  02FA  2AFC               	goto	u421
  1816  02FB  2B00               	goto	u420
  1817  02FC                     u421:
  1818  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1819  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1820  02FE  1688               	bsf	8,5	;volatile
  1821  02FF  2B03               	goto	u434
  1822  0300                     u420:
  1823  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0302  1288               	bcf	8,5	;volatile
  1826  0303                     u434:
  1827  0303                     l1124:
  1828                           
  1829                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1830  0303  1977               	btfsc	lcd_put_nibble@temp,2
  1831  0304  2B06               	goto	u441
  1832  0305  2B0A               	goto	u440
  1833  0306                     u441:
  1834  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0307  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0308  1708               	bsf	8,6	;volatile
  1837  0309  2B0D               	goto	u454
  1838  030A                     u440:
  1839  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1840  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1841  030C  1308               	bcf	8,6	;volatile
  1842  030D                     u454:
  1843  030D                     l1126:
  1844                           
  1845                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1846  030D  19F7               	btfsc	lcd_put_nibble@temp,3
  1847  030E  2B10               	goto	u461
  1848  030F  2B14               	goto	u460
  1849  0310                     u461:
  1850  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0312  1788               	bsf	8,7	;volatile
  1853  0313  2B17               	goto	u474
  1854  0314                     u460:
  1855  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0316  1388               	bcf	8,7	;volatile
  1858  0317                     u474:
  1859                           
  1860                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1861  0317  3006               	movlw	6
  1862  0318  00F5               	movwf	??_lcd_put_nibble
  1863  0319                     u787:
  1864  0319  0BF5               	decfsz	??_lcd_put_nibble,f
  1865  031A  2B19               	goto	u787
  1866  031B  0000               	nop
  1867  031C                     l1128:
  1868                           
  1869                           ;lcd.c: 122:  RD3 = 1;
  1870  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1871  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1872  031E  1588               	bsf	8,3	;volatile
  1873                           
  1874                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1875  031F  3006               	movlw	6
  1876  0320  00F5               	movwf	??_lcd_put_nibble
  1877  0321                     u797:
  1878  0321  0BF5               	decfsz	??_lcd_put_nibble,f
  1879  0322  2B21               	goto	u797
  1880  0323  0000               	nop
  1881  0324                     l1130:
  1882                           
  1883                           ;lcd.c: 124:  RD3 = 0;
  1884  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0326  1188               	bcf	8,3	;volatile
  1887  0327                     l41:
  1888  0327  0008               	return
  1889  0328                     __end_of_lcd_put_nibble:
  1890                           
  1891                           	psect	text9
  1892  0365                     __ptext9:	
  1893 ;; *************** function _lcd_busy *****************
  1894 ;; Defined at:
  1895 ;;		line 18 in file "lcd.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  busy            1    6[COMMON] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      unsigned char 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       0       0       0       0
  1910 ;;      Locals:         1       0       0       0       0
  1911 ;;      Temps:          1       0       0       0       0
  1912 ;;      Totals:         2       0       0       0       0
  1913 ;;Total ram usage:        2 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 2
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_lcd_gotoxy
  1920 ;;		_lcd_putc
  1921 ;;		_lcd_init
  1922 ;;		_addCharSpecial
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _lcd_busy
  1928  0365                     _lcd_busy:
  1929  0365                     l1132:	
  1930                           ;incstack = 0
  1931                           ; Regs used in _lcd_busy: [wreg+status,2]
  1932                           
  1933                           
  1934                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1935  0365  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0366  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0367  1608               	bsf	8,4	;volatile
  1938                           
  1939                           ;lcd.c: 25:  TRISD5 = 1;
  1940  0368  1688               	bsf	8,5	;volatile
  1941                           
  1942                           ;lcd.c: 26:  TRISD6 = 1;
  1943  0369  1708               	bsf	8,6	;volatile
  1944                           
  1945                           ;lcd.c: 27:  TRISD7 = 1;
  1946  036A  1788               	bsf	8,7	;volatile
  1947                           
  1948                           ;lcd.c: 29:  RD2 = 1;
  1949  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1950  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1951  036D  1508               	bsf	8,2	;volatile
  1952                           
  1953                           ;lcd.c: 30:  RD1 = 0;
  1954  036E  1088               	bcf	8,1	;volatile
  1955  036F                     l1134:
  1956                           
  1957                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1958  036F  3006               	movlw	6
  1959  0370  00F5               	movwf	??_lcd_busy
  1960  0371                     u807:
  1961  0371  0BF5               	decfsz	??_lcd_busy,f
  1962  0372  2B71               	goto	u807
  1963  0373  0000               	nop
  1964  0374                     l1136:
  1965                           
  1966                           ;lcd.c: 32:  RD3 = 1;
  1967  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0376  1588               	bsf	8,3	;volatile
  1970                           
  1971                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1972  0377  3006               	movlw	6
  1973  0378  00F5               	movwf	??_lcd_busy
  1974  0379                     u817:
  1975  0379  0BF5               	decfsz	??_lcd_busy,f
  1976  037A  2B79               	goto	u817
  1977  037B  0000               	nop
  1978  037C                     l1138:
  1979                           
  1980                           ;lcd.c: 35:  busy = RD7;
  1981  037C  3000               	movlw	0
  1982  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1983  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1984  037F  1B88               	btfsc	8,7	;volatile
  1985  0380  3001               	movlw	1
  1986  0381  00F6               	movwf	lcd_busy@busy
  1987  0382                     l1140:
  1988                           
  1989                           ;lcd.c: 37:  RD3 = 0;
  1990  0382  1188               	bcf	8,3	;volatile
  1991  0383                     l1142:
  1992                           
  1993                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1994  0383  3006               	movlw	6
  1995  0384  00F5               	movwf	??_lcd_busy
  1996  0385                     u827:
  1997  0385  0BF5               	decfsz	??_lcd_busy,f
  1998  0386  2B85               	goto	u827
  1999  0387  0000               	nop
  2000  0388                     l1144:
  2001                           
  2002                           ;lcd.c: 39:  RD3 = 1;
  2003  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2005  038A  1588               	bsf	8,3	;volatile
  2006  038B                     l1146:
  2007                           
  2008                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2009  038B  3006               	movlw	6
  2010  038C  00F5               	movwf	??_lcd_busy
  2011  038D                     u837:
  2012  038D  0BF5               	decfsz	??_lcd_busy,f
  2013  038E  2B8D               	goto	u837
  2014  038F  0000               	nop
  2015  0390                     l1148:
  2016                           
  2017                           ;lcd.c: 41:  RD3 = 0;
  2018  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0392  1188               	bcf	8,3	;volatile
  2021  0393                     l1150:
  2022                           
  2023                           ;lcd.c: 43:  return busy;
  2024  0393  0876               	movf	lcd_busy@busy,w
  2025  0394                     l33:
  2026  0394  0008               	return
  2027  0395                     __end_of_lcd_busy:
  2028                           
  2029                           	psect	text10
  2030  0163                     __ptext10:	
  2031 ;; *************** function _myIsr *****************
  2032 ;; Defined at:
  2033 ;;		line 94 in file "bai_3.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, pclath, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2047 ;;      Params:         0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0
  2049 ;;      Temps:          5       0       0       0       0
  2050 ;;      Totals:         5       0       0       0       0
  2051 ;;Total ram usage:        5 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 1
  2054 ;; This function calls:
  2055 ;;		i1_declarePort
  2056 ;; This function is called by:
  2057 ;;		Interrupt level 1
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _myIsr
  2063  0163                     _myIsr:
  2064  0163                     i1l1090:
  2065                           
  2066                           ;bai_3.c: 95:     INTF = 0;
  2067  0163  108B               	bcf	11,1	;volatile
  2068  0164                     i1l1092:
  2069                           
  2070                           ;bai_3.c: 96:     TRISB = 0b00100000;
  2071  0164  3020               	movlw	32
  2072  0165  1683               	bsf	3,5	;RP0=1, select bank1
  2073  0166  1303               	bcf	3,6	;RP1=0, select bank1
  2074  0167  0086               	movwf	6	;volatile
  2075                           
  2076                           ;bai_3.c: 97:     PORTB = 0b00001000;
  2077  0168  3008               	movlw	8
  2078  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2079  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2080  016B  0086               	movwf	6	;volatile
  2081                           
  2082                           ;bai_3.c: 98:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2083  016C  3003               	movlw	3
  2084  016D  00F2               	movwf	??_myIsr+2
  2085  016E  308A               	movlw	138
  2086  016F  00F1               	movwf	??_myIsr+1
  2087  0170  3055               	movlw	85
  2088  0171  00F0               	movwf	??_myIsr
  2089  0172                     u84_27:
  2090  0172  0BF0               	decfsz	??_myIsr,f
  2091  0173  2972               	goto	u84_27
  2092  0174  0BF1               	decfsz	??_myIsr+1,f
  2093  0175  2972               	goto	u84_27
  2094  0176  0BF2               	decfsz	??_myIsr+2,f
  2095  0177  2972               	goto	u84_27
  2096  0178  2979               	nop2
  2097                           
  2098                           ;bai_3.c: 99:     TRISB = 0b00100000;
  2099  0179  3020               	movlw	32
  2100  017A  1683               	bsf	3,5	;RP0=1, select bank1
  2101  017B  1303               	bcf	3,6	;RP1=0, select bank1
  2102  017C  0086               	movwf	6	;volatile
  2103                           
  2104                           ;bai_3.c: 100:     PORTB = 0b00010000;
  2105  017D  3010               	movlw	16
  2106  017E  1283               	bcf	3,5	;RP0=0, select bank0
  2107  017F  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0180  0086               	movwf	6	;volatile
  2109                           
  2110                           ;bai_3.c: 101:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2111  0181  3003               	movlw	3
  2112  0182  00F2               	movwf	??_myIsr+2
  2113  0183  308A               	movlw	138
  2114  0184  00F1               	movwf	??_myIsr+1
  2115  0185  3055               	movlw	85
  2116  0186  00F0               	movwf	??_myIsr
  2117  0187                     u85_27:
  2118  0187  0BF0               	decfsz	??_myIsr,f
  2119  0188  2987               	goto	u85_27
  2120  0189  0BF1               	decfsz	??_myIsr+1,f
  2121  018A  2987               	goto	u85_27
  2122  018B  0BF2               	decfsz	??_myIsr+2,f
  2123  018C  2987               	goto	u85_27
  2124  018D  298E               	nop2
  2125                           
  2126                           ;bai_3.c: 102:     TRISB = 0b00001000;
  2127  018E  3008               	movlw	8
  2128  018F  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0190  1303               	bcf	3,6	;RP1=0, select bank1
  2130  0191  0086               	movwf	6	;volatile
  2131                           
  2132                           ;bai_3.c: 103:     PORTB = 0b00010000;
  2133  0192  3010               	movlw	16
  2134  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0195  0086               	movwf	6	;volatile
  2137                           
  2138                           ;bai_3.c: 104:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2139  0196  3003               	movlw	3
  2140  0197  00F2               	movwf	??_myIsr+2
  2141  0198  308A               	movlw	138
  2142  0199  00F1               	movwf	??_myIsr+1
  2143  019A  3055               	movlw	85
  2144  019B  00F0               	movwf	??_myIsr
  2145  019C                     u86_27:
  2146  019C  0BF0               	decfsz	??_myIsr,f
  2147  019D  299C               	goto	u86_27
  2148  019E  0BF1               	decfsz	??_myIsr+1,f
  2149  019F  299C               	goto	u86_27
  2150  01A0  0BF2               	decfsz	??_myIsr+2,f
  2151  01A1  299C               	goto	u86_27
  2152  01A2  29A3               	nop2
  2153                           
  2154                           ;bai_3.c: 105:     TRISB = 0b00001000;
  2155  01A3  3008               	movlw	8
  2156  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2157  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  2158  01A6  0086               	movwf	6	;volatile
  2159                           
  2160                           ;bai_3.c: 106:     PORTB = 0b00100000;
  2161  01A7  3020               	movlw	32
  2162  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2163  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2164  01AA  0086               	movwf	6	;volatile
  2165                           
  2166                           ;bai_3.c: 107:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2167  01AB  3003               	movlw	3
  2168  01AC  00F2               	movwf	??_myIsr+2
  2169  01AD  308A               	movlw	138
  2170  01AE  00F1               	movwf	??_myIsr+1
  2171  01AF  3055               	movlw	85
  2172  01B0  00F0               	movwf	??_myIsr
  2173  01B1                     u87_27:
  2174  01B1  0BF0               	decfsz	??_myIsr,f
  2175  01B2  29B1               	goto	u87_27
  2176  01B3  0BF1               	decfsz	??_myIsr+1,f
  2177  01B4  29B1               	goto	u87_27
  2178  01B5  0BF2               	decfsz	??_myIsr+2,f
  2179  01B6  29B1               	goto	u87_27
  2180  01B7  29B8               	nop2
  2181                           
  2182                           ;bai_3.c: 108:     TRISB = 0b00010000;
  2183  01B8  3010               	movlw	16
  2184  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  2185  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  2186  01BB  0086               	movwf	6	;volatile
  2187                           
  2188                           ;bai_3.c: 109:     PORTB = 0b00100000;
  2189  01BC  3020               	movlw	32
  2190  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2191  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2192  01BF  0086               	movwf	6	;volatile
  2193                           
  2194                           ;bai_3.c: 110:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2195  01C0  3003               	movlw	3
  2196  01C1  00F2               	movwf	??_myIsr+2
  2197  01C2  308A               	movlw	138
  2198  01C3  00F1               	movwf	??_myIsr+1
  2199  01C4  3055               	movlw	85
  2200  01C5  00F0               	movwf	??_myIsr
  2201  01C6                     u88_27:
  2202  01C6  0BF0               	decfsz	??_myIsr,f
  2203  01C7  29C6               	goto	u88_27
  2204  01C8  0BF1               	decfsz	??_myIsr+1,f
  2205  01C9  29C6               	goto	u88_27
  2206  01CA  0BF2               	decfsz	??_myIsr+2,f
  2207  01CB  29C6               	goto	u88_27
  2208  01CC  29CD               	nop2
  2209                           
  2210                           ;bai_3.c: 111:     TRISB = 0b00010000;
  2211  01CD  3010               	movlw	16
  2212  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  2213  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  2214  01D0  0086               	movwf	6	;volatile
  2215                           
  2216                           ;bai_3.c: 112:     PORTB = 0b00001000;
  2217  01D1  3008               	movlw	8
  2218  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2219  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2220  01D4  0086               	movwf	6	;volatile
  2221                           
  2222                           ;bai_3.c: 113:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2223  01D5  3003               	movlw	3
  2224  01D6  00F2               	movwf	??_myIsr+2
  2225  01D7  308A               	movlw	138
  2226  01D8  00F1               	movwf	??_myIsr+1
  2227  01D9  3055               	movlw	85
  2228  01DA  00F0               	movwf	??_myIsr
  2229  01DB                     u89_27:
  2230  01DB  0BF0               	decfsz	??_myIsr,f
  2231  01DC  29DB               	goto	u89_27
  2232  01DD  0BF1               	decfsz	??_myIsr+1,f
  2233  01DE  29DB               	goto	u89_27
  2234  01DF  0BF2               	decfsz	??_myIsr+2,f
  2235  01E0  29DB               	goto	u89_27
  2236  01E1  29E2               	nop2
  2237  01E2                     i1l1094:
  2238                           
  2239                           ;bai_3.c: 114:     declarePort();
  2240  01E2  120A  118A  23EB  120A  118A  	fcall	i1_declarePort
  2241  01E7                     i1l202:
  2242  01E7  0874               	movf	??_myIsr+4,w
  2243  01E8  008A               	movwf	10
  2244  01E9  0E73               	swapf	??_myIsr+3,w
  2245  01EA  0083               	movwf	3
  2246  01EB  0EFE               	swapf	btemp,f
  2247  01EC  0E7E               	swapf	btemp,w
  2248  01ED  0009               	retfie
  2249  01EE                     __end_of_myIsr:
  2250                           
  2251                           	psect	intentry
  2252  0004                     __pintentry:	
  2253                           ;incstack = 0
  2254                           ; Regs used in _myIsr: [wreg+status,2+status,0+pclath+cstack]
  2255                           
  2256  0004                     interrupt_function:
  2257  007E                     saved_w	set	btemp
  2258  0004  00FE               	movwf	btemp
  2259  0005  0E03               	swapf	3,w
  2260  0006  00F3               	movwf	??_myIsr+3
  2261  0007  080A               	movf	10,w
  2262  0008  00F4               	movwf	??_myIsr+4
  2263  0009  120A  118A  2963   	ljmp	_myIsr
  2264                           
  2265                           	psect	text11
  2266  03EB                     __ptext11:	
  2267 ;; *************** function i1_declarePort *****************
  2268 ;; Defined at:
  2269 ;;		line 50 in file "bai_3.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       0       0       0       0
  2287 ;;Total ram usage:        0 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_myIsr
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function i1_declarePort
  2298  03EB                     i1_declarePort:
  2299  03EB                     i1l964:	
  2300                           ;incstack = 0
  2301                           ; Regs used in i1_declarePort: [wreg+status,2]
  2302                           
  2303                           
  2304                           ;bai_3.c: 51:     ANSEL = ANSELH = 0;
  2305  03EB  1683               	bsf	3,5	;RP0=1, select bank3
  2306  03EC  1703               	bsf	3,6	;RP1=1, select bank3
  2307  03ED  0189               	clrf	9	;volatile
  2308  03EE  0188               	clrf	8	;volatile
  2309  03EF                     i1l966:
  2310                           
  2311                           ;bai_3.c: 52:     TRISB = WPUB = 0x01;
  2312  03EF  3001               	movlw	1
  2313  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2314  03F1  1303               	bcf	3,6	;RP1=0, select bank1
  2315  03F2  0095               	movwf	21	;volatile
  2316  03F3  0086               	movwf	6	;volatile
  2317  03F4                     i1l968:
  2318                           
  2319                           ;bai_3.c: 54:     nRBPU = 0;
  2320  03F4  1381               	bcf	1,7	;volatile
  2321  03F5                     i1l970:
  2322                           
  2323                           ;bai_3.c: 55:     GIE = 1;
  2324  03F5  178B               	bsf	11,7	;volatile
  2325  03F6                     i1l972:
  2326                           
  2327                           ;bai_3.c: 56:     INTF = 0;
  2328  03F6  108B               	bcf	11,1	;volatile
  2329  03F7                     i1l974:
  2330                           
  2331                           ;bai_3.c: 57:     INTE = 1;
  2332  03F7  160B               	bsf	11,4	;volatile
  2333  03F8                     i1l976:
  2334                           
  2335                           ;bai_3.c: 58:     INTEDG = 1;
  2336  03F8  1701               	bsf	1,6	;volatile
  2337  03F9                     i1l177:
  2338  03F9  0008               	return
  2339  03FA                     __end_ofi1_declarePort:
  2340  007E                     btemp	set	126	;btemp
  2341  007E                     wtemp0	set	126
  2342                           
  2343                           	psect	config
  2344                           
  2345                           ;Config register CONFIG1 @ 0x2007
  2346                           ;	Oscillator Selection bits
  2347                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2348                           ;	Watchdog Timer Enable bit
  2349                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2350                           ;	Power-up Timer Enable bit
  2351                           ;	PWRTE = OFF, PWRT disabled
  2352                           ;	RE3/MCLR pin function select bit
  2353                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2354                           ;	Code Protection bit
  2355                           ;	CP = OFF, Program memory code protection is disabled
  2356                           ;	Data Code Protection bit
  2357                           ;	CPD = OFF, Data memory code protection is disabled
  2358                           ;	Brown Out Reset Selection bits
  2359                           ;	BOREN = OFF, BOR disabled
  2360                           ;	Internal External Switchover bit
  2361                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2362                           ;	Fail-Safe Clock Monitor Enabled bit
  2363                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2364                           ;	Low Voltage Programming Enable bit
  2365                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2366                           ;	In-Circuit Debugger Mode bit
  2367                           ;	DEBUG = 0x1, unprogrammed default
  2368  2007                     	org	8199
  2369  2007  20F2               	dw	8434
  2370                           
  2371                           ;Config register CONFIG2 @ 0x2008
  2372                           ;	Brown-out Reset Selection bit
  2373                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2374                           ;	Flash Program Memory Self Write Enable bits
  2375                           ;	WRT = OFF, Write protection off
  2376  2008                     	org	8200
  2377  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    69
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     16      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 16
		 -> main@your_name(CODE[16]), main@title(CODE[12]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 41
		 -> main@special_name_title(CODE[41]), 


Critical Paths under _main in COMMON

    _lcd_putc->_lcd_put_byte
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    6707
                                              9 BANK0      7     7      0
                     _addCharSpecial
                        _declarePort
                       _getLengthArr
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             3     3      0    2565
                                              6 BANK0      3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           4     3      1    1409
                                              2 BANK0      4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              2 BANK0      2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _getLengthArr                                         5     3      2     134
                                              5 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1235
                                              2 BANK0      4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_put_byte                                         3     2      1    1089
                                              8 COMMON     1     0      1
                                              0 BANK0      2     2      0
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_nibble                                       3     3      0     111
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      23
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                                5     5      0       0
                                              0 COMMON     5     5      0
                      i1_declarePort
 ---------------------------------------------------------------------------------
 (6) i1_declarePort                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _declarePort
   _getLengthArr
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte

 _myIsr (ROOT)
   i1_declarePort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 07 10:07:34 2021

                             pc 0002                              l33 0394                              l41 0327  
                            l44 033A                              l46 0364                              l54 03BC  
                            l72 024B                              l96 00BF          __end_of_lcd_put_nibble 0328  
                            fsr 0004                 ?_addCharSpecial 0070                   ?_lcd_put_byte 0078  
                           l174 03DB                             l167 0298                             l177 03EA  
                           _GIE 005F                             _RD1 0041                             _RD2 0042  
                           _RD3 0043                             _RD4 0044                             _RD5 0045  
                           _RD6 0046                             _RD7 0047                             u400 02F6  
                           u401 02F2                             u420 0300                             u500 039D  
                           u421 02FC                             u501 039C                             u414 02F9  
                           u510 03BC                             u511 03BB                             u440 030A  
                           u600 0265                             u520 0204                             u441 0306  
                           u601 0264                             u521 0203                             u434 0303  
                           u610 0281                             u530 0222                             u611 0280  
                           u531 0221                             u460 0314                             u620 0298  
                           u540 0237                             u461 0310                             u621 0297  
                           u541 0236                             u454 030D                             u630 03CF  
                           u550 006B                             u631 03CE                             u551 006A  
                           u480 0338                             u560 0081                             u481 0337  
                           u561 0080                             u474 0317                             u570 0097  
                           u571 0096                             u707 00DE                             u580 00A9  
                           u581 00A8                             u717 0159                             u590 00BF  
                           u807 0371                             u495 0352                             u591 00BE  
                           u727 0022                             u680 011B                             u817 0379  
                           u737 0037                             u681 011A                             u690 0151  
                           u827 0385                             u747 0047                             u691 0150  
                           u837 038D                             u757 0057                             u685 0117  
                           u767 033F                             u695 014D                             u777 0349  
                           u787 0319                             u797 0321                             fsr0 0004  
                          l1120 02EF                            l1130 0324                            l1122 02F9  
                          l1210 0026                            l1140 0382                            l1132 0365  
                          l1124 0303                            l1116 02E5                            l1220 0041  
                          l1212 0029                            l1150 0393                            l1142 0383  
                          l1134 036F                            l1126 030D                            l1118 02EB  
                          l1230 0077                            l1222 004B                            l1214 002A  
                          l1206 0013                            l1144 0388                            l1136 0374  
                          l1128 031C                            l1160 033B                            l1240 00A9  
                          l1232 0081                            l1224 005B                            l1216 002B  
                          l1208 001C                            l1146 038B                            l1138 037C  
                          l1162 0342                            l1154 032B                            l1250 0251  
                          l1242 00B5                            l1234 008D                            l1226 0061  
                          l1218 0031                            l1170 0398                            l1330 00C5  
                          l1148 0390                            l1164 034C                            l1156 0331  
                          l1260 0289                            l1252 025B                            l1236 0097  
                          l1228 006B                            l1180 03B2                            l1172 039D  
                          l1340 00E4                            l1332 00C5                            l1166 034F  
                          l1158 0338                            l1254 0266                            l1270 03D7  
                          l1262 03C0                            l1238 009F                            l1174 03A2  
                          l1190 020E                            l1182 01F1                            l1350 0111  
                          l1342 00ED                            l1334 00C5                            l1326 00C0  
                          l1168 035D                            l1256 0277                            l1248 024F  
                          l1280 03E6                            l1264 03C2                            l1176 03A3  
                          l1192 0218                            l1184 01F2                            l1360 013F  
                          l1352 011B                            l1344 00F9                            l1336 00CA  
                          l1328 00C5                            l1258 0281                            l1282 03E7  
                          l1274 03DC                            l1178 03A7                            l1194 0223  
                          l1186 01FA                            l1362 0147                            l1354 0123  
                          l1346 00FC                            l1338 00D0                            l1284 03E8  
                          l1276 03E0                            l1268 03D0                            l1196 022D  
                          l1188 0205                            l1364 0151                            l1356 012F  
                          l1348 0109                            l1286 03E9                            l1278 03E5  
                          l1198 0238                            l1358 0132                            l1396 0240  
                          _INTE 005C                            _INTF 0059                            _WPUB 0095  
                          _main 00C0                    lcd_busy@busy 0076                            btemp 007E  
                          start 000C          __size_ofi1_declarePort 000F                 ?_lcd_put_nibble 0070  
                ??_lcd_put_byte 0020                           ?_main 0070           getLengthArr@character 0020  
                         _ANSEL 0188                           i1l202 01E7                           i1l177 03F9  
                         i1l970 03F5                           i1l972 03F6                           i1l964 03EB  
                         i1l974 03F7                           i1l966 03EF                           i1l976 03F8  
                         i1l968 03F4                           _PORTB 0006                           _TRISB 0086  
                         u84_27 0172                           u85_27 0187                           u86_27 019C  
                         u87_27 01B1                           u88_27 01C6                           u89_27 01DB  
                         _nRBPU 040F            __size_of_declarePort 000F                           _myIsr 0163  
                         main@i 002E                           pclath 000A                           status 0003  
                         wtemp0 007E                 __initialization 000F            __end_of_getLengthArr 03DC  
                  __end_of_main 0163                   lcd_gotoxy@col 0024                   lcd_gotoxy@row 0022  
            lcd_put_nibble@temp 0077                          ??_main 0029                   i1_declarePort 03EB  
                        ?_myIsr 0070                          _ANSELH 0189                          i1l1090 0163  
                        i1l1092 0164                          i1l1094 01E2                          _INTEDG 040E  
                        _TRISD1 0441                          _TRISD2 0442                          _TRISD3 0443  
                        _TRISD4 0444                          _TRISD5 0445                          _TRISD6 0446  
                        _TRISD7 0447                __end_of_lcd_busy 0395                __end_of_lcd_init 00C0  
              __end_of_lcd_putc 024C                   lcd_put_byte@b 0078                  ?i1_declarePort 0070  
                        saved_w 007E         __end_of__initialization 000F            __end_of_lcd_put_byte 0365  
__end_ofmain@special_name_title 02C8                ??_addCharSpecial 0022                  __pcstackCOMMON 0070  
                 main@your_name 02C8                   __end_of_myIsr 01EE               lcd_gotoxy@address 0025  
                       ??_myIsr 0070           __size_of_getLengthArr 001F                ??_lcd_put_nibble 0075  
                    __pmaintext 00C0                      __pintentry 0004                 ??i1_declarePort 0070  
                    _lcd_gotoxy 0395                    _getLengthArr 03BD                       ?_lcd_busy 0070  
                     ?_lcd_init 0070                       ?_lcd_putc 0070                      __stringtab 0299  
       addCharSpecial@character 0025                         __ptext1 01EE                         __ptext2 0395  
                       __ptext3 0013                         __ptext4 03BD                         __ptext5 03DC  
                       __ptext6 024C                         __ptext7 0328                         __ptext8 02E4  
                       __ptext9 0365                   ??_declarePort 0075           __size_of_lcd_put_byte 003D  
                    ??_lcd_busy 0075                      ??_lcd_init 0022                      ??_lcd_putc 0026  
          end_of_initialization 000F                  lcd_put_byte@rs 0021               __end_ofmain@title 02E4  
                  _lcd_put_byte 0328                     ?_lcd_gotoxy 0022             __end_of_declarePort 03EB  
                    main@length 002C             start_initialization 000F             __size_of_lcd_gotoxy 0028  
                   _declarePort 03DC                       ___latbits 0002                   __pcstackBANK0 0020  
               addCharSpecial@i 0023               __size_of_lcd_busy 0030               __size_of_lcd_init 00AD  
             __size_of_lcd_putc 005E                       __pstrings 0299         __size_of_addCharSpecial 004D  
         __end_ofi1_declarePort 03FA                  __size_of_myIsr 008B               interrupt_function 0004  
                   __stringbase 029E         __size_of_lcd_put_nibble 0044                   getLengthArr@i 0021  
                     lcd_putc@c 0028                       main@title 02D8                    ??_lcd_gotoxy 0023  
         __end_ofmain@your_name 02D8              __end_of_lcd_gotoxy 03BD              __end_of__stringtab 029F  
                      __ptext10 0163                        __ptext11 03EB                        _lcd_busy 0365  
                      _lcd_init 0013                        _lcd_putc 01EE                   __size_of_main 00A3  
                _addCharSpecial 024C                    ?_declarePort 0070                 lcd_put_nibble@b 0076  
                 ?_getLengthArr 0075                        intlevel1 0000                       stringcode 0299  
        __end_of_addCharSpecial 0299          main@special_name_title 029F                  _lcd_put_nibble 02E4  
                      stringdir 0299                        stringtab 0299                  ??_getLengthArr 0077  
