

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 04 21:39:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	strings
   291  0003                     __pstrings:
   292  0003                     stringtab:
   293  0003                     __stringtab:
   294  0003                     stringcode:	
   295                           ;	String table - string pointers are 1 byte each
   296                           
   297  0003                     stringdir:
   298  0003  3000               	movlw	high stringdir
   299  0004  008A               	movwf	10
   300  0005  0804               	movf	4,w
   301  0006  0A84               	incf	4,f
   302  0007  0782               	addwf	2,f
   303  0008                     __stringbase:
   304  0008  3400               	retlw	0
   305  0009                     __end_of__stringtab:
   306  0009                     main@special_name_born_live:
   307  0009  340D               	retlw	13
   308  000A  3412               	retlw	18
   309  000B  3408               	retlw	8
   310  000C  3414               	retlw	20
   311  000D  3408               	retlw	8
   312  000E  3414               	retlw	20
   313  000F  341E               	retlw	30
   314  0010  3400               	retlw	0
   315  0011  3401               	retlw	1
   316  0012  340A               	retlw	10
   317  0013  3414               	retlw	20
   318  0014  3400               	retlw	0
   319  0015  341C               	retlw	28
   320  0016  3414               	retlw	20
   321  0017  341F               	retlw	31
   322  0018  3400               	retlw	0
   323  0019  3400               	retlw	0
   324  001A  3404               	retlw	4
   325  001B  3408               	retlw	8
   326  001C  3400               	retlw	0
   327  001D  341C               	retlw	28
   328  001E  3414               	retlw	20
   329  001F  341E               	retlw	30
   330  0020  3400               	retlw	0
   331  0021  3408               	retlw	8
   332  0022  3404               	retlw	4
   333  0023  3400               	retlw	0
   334  0024  340C               	retlw	12
   335  0025  3412               	retlw	18
   336  0026  3412               	retlw	18
   337  0027  340F               	retlw	15
   338  0028  3400               	retlw	0
   339  0029  3400               	retlw	0
   340  002A  3406               	retlw	6
   341  002B  3402               	retlw	2
   342  002C  340C               	retlw	12
   343  002D  3412               	retlw	18
   344  002E  3412               	retlw	18
   345  002F  340C               	retlw	12
   346  0030  3400               	retlw	0
   347  0031  3408               	retlw	8
   348  0032  3414               	retlw	20
   349  0033  3400               	retlw	0
   350  0034  341C               	retlw	28
   351  0035  3414               	retlw	20
   352  0036  341E               	retlw	30
   353  0037  3408               	retlw	8
   354  0038  3400               	retlw	0
   355  0039  3499               	retlw	153
   356  003A                     __end_ofmain@special_name_born_live:
   357  003A                     main@special_HKTT_class:
   358  003A  340E               	retlw	14
   359  003B  3409               	retlw	9
   360  003C  3409               	retlw	9
   361  003D  341D               	retlw	29
   362  003E  3409               	retlw	9
   363  003F  3409               	retlw	9
   364  0040  340E               	retlw	14
   365  0041  3400               	retlw	0
   366  0042  3408               	retlw	8
   367  0043  3404               	retlw	4
   368  0044  3400               	retlw	0
   369  0045  340C               	retlw	12
   370  0046  3412               	retlw	18
   371  0047  3412               	retlw	18
   372  0048  340C               	retlw	12
   373  0049  3400               	retlw	0
   374  004A  3401               	retlw	1
   375  004B  340A               	retlw	10
   376  004C  3414               	retlw	20
   377  004D  3400               	retlw	0
   378  004E  341C               	retlw	28
   379  004F  3414               	retlw	20
   380  0050  341F               	retlw	31
   381  0051  3400               	retlw	0
   382  0052  3401               	retlw	1
   383  0053  340D               	retlw	13
   384  0054  3405               	retlw	5
   385  0055  341C               	retlw	28
   386  0056  3414               	retlw	20
   387  0057  3414               	retlw	20
   388  0058  341C               	retlw	28
   389  0059  3400               	retlw	0
   390  005A  3499               	retlw	153
   391  005B                     __end_ofmain@special_HKTT_class:
   392  005B                     main@your_born:
   393  005B  344E               	retlw	78
   394  005C  3467               	retlw	103
   395  005D  3403               	retlw	3
   396  005E  3479               	retlw	121
   397  005F  3453               	retlw	83
   398  0060  3469               	retlw	105
   399  0061  346E               	retlw	110
   400  0062  3468               	retlw	104
   401  0063  343A               	retlw	58
   402  0064  3431               	retlw	49
   403  0065  3432               	retlw	50
   404  0066  342F               	retlw	47
   405  0067  3432               	retlw	50
   406  0068  3430               	retlw	48
   407  0069  3430               	retlw	48
   408  006A  3431               	retlw	49
   409  006B  340A               	retlw	10
   410  006C                     __end_ofmain@your_born:
   411  006C                     main@your_name:
   412  006C  344E               	retlw	78
   413  006D  3467               	retlw	103
   414  006E  3475               	retlw	117
   415  006F  3479               	retlw	121
   416  0070  3400               	retlw	0
   417  0071  346E               	retlw	110
   418  0072  3420               	retlw	32
   419  0073  3454               	retlw	84
   420  0074  3401               	retlw	1
   421  0075  346E               	retlw	110
   422  0076  3420               	retlw	32
   423  0077  3450               	retlw	80
   424  0078  3468               	retlw	104
   425  0079  3402               	retlw	2
   426  007A  3470               	retlw	112
   427  007B  340A               	retlw	10
   428  007C                     __end_ofmain@your_name:
   429  007C                     main@MSSV:
   430  007C  344D               	retlw	77
   431  007D  3453               	retlw	83
   432  007E  3453               	retlw	83
   433  007F  3456               	retlw	86
   434  0080  343A               	retlw	58
   435  0081  3431               	retlw	49
   436  0082  3439               	retlw	57
   437  0083  3434               	retlw	52
   438  0084  3433               	retlw	51
   439  0085  3436               	retlw	54
   440  0086  3434               	retlw	52
   441  0087  3438               	retlw	56
   442  0088  3431               	retlw	49
   443  0089  340A               	retlw	10
   444  008A  3400               	retlw	0
   445  008B                     __end_ofmain@MSSV:
   446  008B                     main@your_live:
   447  008B  344E               	retlw	78
   448  008C  3404               	retlw	4
   449  008D  3469               	retlw	105
   450  008E  3453               	retlw	83
   451  008F  343A               	retlw	58
   452  0090  344E               	retlw	78
   453  0091  3469               	retlw	105
   454  0092  346E               	retlw	110
   455  0093  3468               	retlw	104
   456  0094  3454               	retlw	84
   457  0095  3468               	retlw	104
   458  0096  3475               	retlw	117
   459  0097  3405               	retlw	5
   460  0098  346E               	retlw	110
   461  0099  340A               	retlw	10
   462  009A                     __end_ofmain@your_live:
   463  009A                     main@class:
   464  009A  344C               	retlw	76
   465  009B  3403               	retlw	3
   466  009C  3470               	retlw	112
   467  009D  343A               	retlw	58
   468  009E  3400               	retlw	0
   469  009F  3448               	retlw	72
   470  00A0  3456               	retlw	86
   471  00A1  3454               	retlw	84
   472  00A2  3431               	retlw	49
   473  00A3  3435               	retlw	53
   474  00A4  3441               	retlw	65
   475  00A5  340A               	retlw	10
   476  00A6                     __end_ofmain@class:
   477  00A6                     main@HKTT:
   478  00A6  3448               	retlw	72
   479  00A7  344B               	retlw	75
   480  00A8  3454               	retlw	84
   481  00A9  3454               	retlw	84
   482  00AA  343A               	retlw	58
   483  00AB  3447               	retlw	71
   484  00AC  3401               	retlw	1
   485  00AD  3420               	retlw	32
   486  00AE  3456               	retlw	86
   487  00AF  3402               	retlw	2
   488  00B0  3470               	retlw	112
   489  00B1  340A               	retlw	10
   490  00B2                     __end_ofmain@HKTT:
   491  0044                     _RD4	set	68
   492  0045                     _RD5	set	69
   493  0046                     _RD6	set	70
   494  0047                     _RD7	set	71
   495  0043                     _RD3	set	67
   496  0041                     _RD1	set	65
   497  0042                     _RD2	set	66
   498  0442                     _TRISD2	set	1090
   499  0441                     _TRISD1	set	1089
   500  0443                     _TRISD3	set	1091
   501  0447                     _TRISD7	set	1095
   502  0446                     _TRISD6	set	1094
   503  0445                     _TRISD5	set	1093
   504  0444                     _TRISD4	set	1092
   505                           
   506                           	psect	cinit
   507  07FC                     start_initialization:	
   508                           ; #config settings
   509                           
   510  07FC                     __initialization:
   511  07FC                     end_of_initialization:	
   512                           ;End of C runtime variable initialization code
   513                           
   514  07FC                     __end_of__initialization:
   515  07FC  0183               	clrf	3
   516  07FD  120A  118A  2E7A   	ljmp	_main	;jump to C main() function
   517                           
   518                           	psect	cstackCOMMON
   519  0070                     __pcstackCOMMON:
   520  0070                     ?_lcd_busy:
   521  0070                     ??_lcd_busy:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_lcd_putc:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_lcd_init:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_addCharSpecial:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_main:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_lcd_put_nibble:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_lcd_put_nibble:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_getLengthArr:	
   543                           ; 1 bytes @ 0x0
   544                           
   545                           
   546                           ; 2 bytes @ 0x0
   547  0070                     	ds	1
   548  0071                     lcd_busy@busy:
   549  0071                     lcd_put_nibble@b:	
   550                           ; 1 bytes @ 0x1
   551                           
   552                           
   553                           ; 1 bytes @ 0x1
   554  0071                     	ds	1
   555  0072                     ??_getLengthArr:
   556  0072                     getLengthArr@character:	
   557                           ; 1 bytes @ 0x2
   558                           
   559  0072                     lcd_put_nibble@temp:	
   560                           ; 1 bytes @ 0x2
   561                           
   562                           
   563                           ; 1 bytes @ 0x2
   564  0072                     	ds	1
   565  0073                     ?_lcd_put_byte:
   566  0073                     lcd_put_byte@b:	
   567                           ; 1 bytes @ 0x3
   568                           
   569  0073                     getLengthArr@i:	
   570                           ; 1 bytes @ 0x3
   571                           
   572                           
   573                           ; 2 bytes @ 0x3
   574  0073                     	ds	1
   575  0074                     ??_lcd_put_byte:
   576                           
   577                           ; 1 bytes @ 0x4
   578  0074                     	ds	1
   579  0075                     lcd_put_byte@rs:
   580                           
   581                           ; 1 bytes @ 0x5
   582  0075                     	ds	1
   583  0076                     ?_lcd_gotoxy:
   584  0076                     ??_lcd_init:	
   585                           ; 1 bytes @ 0x6
   586                           
   587  0076                     ??_addCharSpecial:	
   588                           ; 1 bytes @ 0x6
   589                           
   590  0076                     lcd_gotoxy@row:	
   591                           ; 1 bytes @ 0x6
   592                           
   593                           
   594                           ; 1 bytes @ 0x6
   595  0076                     	ds	1
   596  0077                     ??_lcd_gotoxy:
   597  0077                     addCharSpecial@i:	
   598                           ; 1 bytes @ 0x7
   599                           
   600                           
   601                           ; 2 bytes @ 0x7
   602  0077                     	ds	1
   603  0078                     lcd_gotoxy@col:
   604                           
   605                           ; 1 bytes @ 0x8
   606  0078                     	ds	1
   607  0079                     addCharSpecial@character:
   608  0079                     lcd_gotoxy@address:	
   609                           ; 1 bytes @ 0x9
   610                           
   611                           
   612                           ; 1 bytes @ 0x9
   613  0079                     	ds	1
   614  007A                     ??_lcd_putc:
   615                           
   616                           ; 1 bytes @ 0xA
   617  007A                     	ds	2
   618  007C                     lcd_putc@c:
   619                           
   620                           ; 1 bytes @ 0xC
   621  007C                     	ds	1
   622  007D                     ?_showContent:
   623  007D                     showContent@character_second:	
   624                           ; 1 bytes @ 0xD
   625                           
   626                           
   627                           ; 1 bytes @ 0xD
   628  007D                     	ds	1
   629  007E                     ??_showContent:
   630                           
   631                           	psect	cstackBANK0
   632  0020                     __pcstackBANK0:	
   633                           ; 1 bytes @ 0xE
   634                           
   635  0020                     showContent@length_1:
   636                           
   637                           ; 2 bytes @ 0x0
   638  0020                     	ds	2
   639  0022                     showContent@length_2:
   640                           
   641                           ; 2 bytes @ 0x2
   642  0022                     	ds	2
   643  0024                     showContent@character_firt:
   644                           
   645                           ; 1 bytes @ 0x4
   646  0024                     	ds	1
   647  0025                     showContent@i:
   648                           
   649                           ; 2 bytes @ 0x5
   650  0025                     	ds	2
   651  0027                     ??_main:
   652                           
   653                           ; 1 bytes @ 0x7
   654  0027                     	ds	3
   655  002A                     main@length:
   656                           
   657                           ; 2 bytes @ 0xA
   658  002A                     	ds	2
   659                           
   660                           	psect	maintext
   661  067A                     __pmaintext:	
   662 ;;
   663 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   664 ;;
   665 ;; *************** function _main *****************
   666 ;; Defined at:
   667 ;;		line 67 in file "newmain.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  length          2   10[BANK0 ] unsigned int 
   672 ;;  i               2    0        unsigned int 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : B00/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         0       2       0       0       0
   684 ;;      Temps:          0       3       0       0       0
   685 ;;      Totals:         0       5       0       0       0
   686 ;;Total ram usage:        5 bytes
   687 ;; Hardware stack levels required when called: 5
   688 ;; This function calls:
   689 ;;		_addCharSpecial
   690 ;;		_lcd_init
   691 ;;		_showContent
   692 ;; This function is called by:
   693 ;;		Startup code after reset
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _main
   699  067A                     _main:
   700  067A                     l1248:	
   701                           ;incstack = 0
   702                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   703                           
   704  067A  1283               	bcf	3,5	;RP0=0, select bank0
   705  067B  1303               	bcf	3,6	;RP1=0, select bank0
   706  067C  01AA               	clrf	main@length
   707  067D  01AB               	clrf	main@length+1
   708  067E                     l1250:
   709                           
   710                           ;newmain.c: 93:     lcd_init();
   711  067E  120A  118A  2759  120A  118A  	fcall	_lcd_init
   712  0683                     l1252:
   713                           
   714                           ;newmain.c: 94:     addCharSpecial(special_name_born_live);
   715  0683  3001               	movlw	(low ((main@special_name_born_live-__stringbase)| (0+32768)))& (0+255)
   716  0684  120A  118A  25D7  120A  118A  	fcall	_addCharSpecial
   717  0689                     l1254:
   718                           
   719                           ;newmain.c: 95:     showContent(your_name, MSSV);
   720  0689  3074               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   721  068A  1283               	bcf	3,5	;RP0=0, select bank0
   722  068B  1303               	bcf	3,6	;RP1=0, select bank0
   723  068C  00A7               	movwf	??_main
   724  068D  0827               	movf	??_main,w
   725  068E  00FD               	movwf	showContent@character_second
   726  068F  3064               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   727  0690  120A  118A  26E0  120A  118A  	fcall	_showContent
   728  0695                     l1256:
   729                           
   730                           ;newmain.c: 96:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   731  0695  300B               	movlw	11
   732  0696  1283               	bcf	3,5	;RP0=0, select bank0
   733  0697  1303               	bcf	3,6	;RP1=0, select bank0
   734  0698  00A9               	movwf	??_main+2
   735  0699  3026               	movlw	38
   736  069A  00A8               	movwf	??_main+1
   737  069B  305D               	movlw	93
   738  069C  00A7               	movwf	??_main
   739  069D                     u707:
   740  069D  0BA7               	decfsz	??_main,f
   741  069E  2E9D               	goto	u707
   742  069F  0BA8               	decfsz	??_main+1,f
   743  06A0  2E9D               	goto	u707
   744  06A1  0BA9               	decfsz	??_main+2,f
   745  06A2  2E9D               	goto	u707
   746  06A3                     l1258:
   747                           
   748                           ;newmain.c: 97:     showContent(your_born, your_live);
   749  06A3  3083               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   750  06A4  1283               	bcf	3,5	;RP0=0, select bank0
   751  06A5  1303               	bcf	3,6	;RP1=0, select bank0
   752  06A6  00A7               	movwf	??_main
   753  06A7  0827               	movf	??_main,w
   754  06A8  00FD               	movwf	showContent@character_second
   755  06A9  3053               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   756  06AA  120A  118A  26E0  120A  118A  	fcall	_showContent
   757  06AF                     l1260:
   758                           
   759                           ;newmain.c: 98:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   760  06AF  300B               	movlw	11
   761  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   762  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   763  06B2  00A9               	movwf	??_main+2
   764  06B3  3026               	movlw	38
   765  06B4  00A8               	movwf	??_main+1
   766  06B5  305D               	movlw	93
   767  06B6  00A7               	movwf	??_main
   768  06B7                     u717:
   769  06B7  0BA7               	decfsz	??_main,f
   770  06B8  2EB7               	goto	u717
   771  06B9  0BA8               	decfsz	??_main+1,f
   772  06BA  2EB7               	goto	u717
   773  06BB  0BA9               	decfsz	??_main+2,f
   774  06BC  2EB7               	goto	u717
   775  06BD                     l1262:
   776                           
   777                           ;newmain.c: 99:     addCharSpecial(special_HKTT_class);
   778  06BD  3032               	movlw	(low ((main@special_HKTT_class-__stringbase)| (0+32768)))& (0+255)
   779  06BE  120A  118A  25D7  120A  118A  	fcall	_addCharSpecial
   780  06C3                     l1264:
   781                           
   782                           ;newmain.c: 100:     showContent(HKTT, class);
   783  06C3  3092               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
   784  06C4  1283               	bcf	3,5	;RP0=0, select bank0
   785  06C5  1303               	bcf	3,6	;RP1=0, select bank0
   786  06C6  00A7               	movwf	??_main
   787  06C7  0827               	movf	??_main,w
   788  06C8  00FD               	movwf	showContent@character_second
   789  06C9  309E               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
   790  06CA  120A  118A  26E0  120A  118A  	fcall	_showContent
   791  06CF                     l1266:
   792                           
   793                           ;newmain.c: 101:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   794  06CF  300B               	movlw	11
   795  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   796  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   797  06D2  00A9               	movwf	??_main+2
   798  06D3  3026               	movlw	38
   799  06D4  00A8               	movwf	??_main+1
   800  06D5  305D               	movlw	93
   801  06D6  00A7               	movwf	??_main
   802  06D7                     u727:
   803  06D7  0BA7               	decfsz	??_main,f
   804  06D8  2ED7               	goto	u727
   805  06D9  0BA8               	decfsz	??_main+1,f
   806  06DA  2ED7               	goto	u727
   807  06DB  0BA9               	decfsz	??_main+2,f
   808  06DC  2ED7               	goto	u727
   809  06DD                     l61:
   810  06DD  120A  118A  2800   	ljmp	start
   811  06E0                     __end_of_main:
   812                           
   813                           	psect	text1
   814  06E0                     __ptext1:	
   815 ;; *************** function _showContent *****************
   816 ;; Defined at:
   817 ;;		line 52 in file "newmain.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  character_fi    1    wreg     PTR unsigned char 
   820 ;;		 -> main@HKTT(12), main@your_born(17), main@your_name(16), 
   821 ;;  character_se    1   13[COMMON] PTR unsigned char 
   822 ;;		 -> main@class(12), main@your_live(15), main@MSSV(15), 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  character_fi    1    4[BANK0 ] PTR unsigned char 
   825 ;;		 -> main@HKTT(12), main@your_born(17), main@your_name(16), 
   826 ;;  i               2    5[BANK0 ] unsigned int 
   827 ;;  length_2        2    2[BANK0 ] unsigned int 
   828 ;;  length_1        2    0[BANK0 ] unsigned int 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         1       0       0       0       0
   839 ;;      Locals:         0       7       0       0       0
   840 ;;      Temps:          0       0       0       0       0
   841 ;;      Totals:         1       7       0       0       0
   842 ;;Total ram usage:        8 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 4
   845 ;; This function calls:
   846 ;;		_getLengthArr
   847 ;;		_lcd_gotoxy
   848 ;;		_lcd_putc
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _showContent
   856  06E0                     _showContent:
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _showContent: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   860                           ;showContent@character_firt stored from wreg
   861  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   862  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   863  06E2  00A4               	movwf	showContent@character_firt
   864  06E3                     l1182:
   865                           
   866                           ;newmain.c: 53:     unsigned int i;;newmain.c: 54:     unsigned int length_1 = getLength
      +                          Arr(character_firt);
   867  06E3  0824               	movf	showContent@character_firt,w
   868  06E4  120A  118A  24E7  120A  118A  	fcall	_getLengthArr
   869  06E9  0871               	movf	?_getLengthArr+1,w
   870  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   871  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   872  06EC  00A1               	movwf	showContent@length_1+1
   873  06ED  0870               	movf	?_getLengthArr,w
   874  06EE  00A0               	movwf	showContent@length_1
   875                           
   876                           ;newmain.c: 55:     lcd_putc('\f');
   877  06EF  300C               	movlw	12
   878  06F0  120A  118A  261E  120A  118A  	fcall	_lcd_putc
   879  06F5                     l1184:
   880                           
   881                           ;newmain.c: 56:     lcd_gotoxy(0, 0);
   882  06F5  01F6               	clrf	lcd_gotoxy@row
   883  06F6  3000               	movlw	0
   884  06F7  120A  118A  2504  120A  118A  	fcall	_lcd_gotoxy
   885  06FC                     l1186:
   886                           
   887                           ;newmain.c: 57:     for(i = 0; i < length_1; i++) {
   888  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   889  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   890  06FE  01A5               	clrf	showContent@i
   891  06FF  01A6               	clrf	showContent@i+1
   892  0700  2F16               	goto	l1192
   893  0701                     l1188:
   894                           
   895                           ;newmain.c: 58:         lcd_putc(character_firt[i]);
   896  0701  0825               	movf	showContent@i,w
   897  0702  0724               	addwf	showContent@character_firt,w
   898  0703  0084               	movwf	4
   899  0704  120A  118A  2003  120A  118A  	fcall	stringdir
   900  0709  120A  118A  261E  120A  118A  	fcall	_lcd_putc
   901  070E                     l1190:
   902                           
   903                           ;newmain.c: 59:     }
   904  070E  3001               	movlw	1
   905  070F  1283               	bcf	3,5	;RP0=0, select bank0
   906  0710  1303               	bcf	3,6	;RP1=0, select bank0
   907  0711  07A5               	addwf	showContent@i,f
   908  0712  1803               	skipnc
   909  0713  0AA6               	incf	showContent@i+1,f
   910  0714  3000               	movlw	0
   911  0715  07A6               	addwf	showContent@i+1,f
   912  0716                     l1192:
   913  0716  0821               	movf	showContent@length_1+1,w
   914  0717  0226               	subwf	showContent@i+1,w
   915  0718  1D03               	skipz
   916  0719  2F1C               	goto	u595
   917  071A  0820               	movf	showContent@length_1,w
   918  071B  0225               	subwf	showContent@i,w
   919  071C                     u595:
   920  071C  1C03               	skipc
   921  071D  2F1F               	goto	u591
   922  071E  2F20               	goto	u590
   923  071F                     u591:
   924  071F  2F01               	goto	l1188
   925  0720                     u590:
   926  0720                     l1194:
   927                           
   928                           ;newmain.c: 60:     unsigned int length_2 = getLengthArr(character_second);
   929  0720  087D               	movf	showContent@character_second,w
   930  0721  120A  118A  24E7  120A  118A  	fcall	_getLengthArr
   931  0726  0871               	movf	?_getLengthArr+1,w
   932  0727  1283               	bcf	3,5	;RP0=0, select bank0
   933  0728  1303               	bcf	3,6	;RP1=0, select bank0
   934  0729  00A3               	movwf	showContent@length_2+1
   935  072A  0870               	movf	?_getLengthArr,w
   936  072B  00A2               	movwf	showContent@length_2
   937  072C                     l1196:
   938                           
   939                           ;newmain.c: 61:     lcd_gotoxy(0, 1);
   940  072C  01F6               	clrf	lcd_gotoxy@row
   941  072D  0AF6               	incf	lcd_gotoxy@row,f
   942  072E  3000               	movlw	0
   943  072F  120A  118A  2504  120A  118A  	fcall	_lcd_gotoxy
   944  0734                     l1198:
   945                           
   946                           ;newmain.c: 62:     for(i = 0; i < length_2; i++) {
   947  0734  1283               	bcf	3,5	;RP0=0, select bank0
   948  0735  1303               	bcf	3,6	;RP1=0, select bank0
   949  0736  01A5               	clrf	showContent@i
   950  0737  01A6               	clrf	showContent@i+1
   951  0738  2F4E               	goto	l1204
   952  0739                     l1200:
   953                           
   954                           ;newmain.c: 63:         lcd_putc(character_second[i]);
   955  0739  0825               	movf	showContent@i,w
   956  073A  077D               	addwf	showContent@character_second,w
   957  073B  0084               	movwf	4
   958  073C  120A  118A  2003  120A  118A  	fcall	stringdir
   959  0741  120A  118A  261E  120A  118A  	fcall	_lcd_putc
   960  0746                     l1202:
   961                           
   962                           ;newmain.c: 64:     }
   963  0746  3001               	movlw	1
   964  0747  1283               	bcf	3,5	;RP0=0, select bank0
   965  0748  1303               	bcf	3,6	;RP1=0, select bank0
   966  0749  07A5               	addwf	showContent@i,f
   967  074A  1803               	skipnc
   968  074B  0AA6               	incf	showContent@i+1,f
   969  074C  3000               	movlw	0
   970  074D  07A6               	addwf	showContent@i+1,f
   971  074E                     l1204:
   972  074E  0823               	movf	showContent@length_2+1,w
   973  074F  0226               	subwf	showContent@i+1,w
   974  0750  1D03               	skipz
   975  0751  2F54               	goto	u605
   976  0752  0822               	movf	showContent@length_2,w
   977  0753  0225               	subwf	showContent@i,w
   978  0754                     u605:
   979  0754  1C03               	skipc
   980  0755  2F57               	goto	u601
   981  0756  2F58               	goto	u600
   982  0757                     u601:
   983  0757  2F39               	goto	l1200
   984  0758                     u600:
   985  0758                     l40:
   986  0758  0008               	return
   987  0759                     __end_of_showContent:
   988                           
   989                           	psect	text2
   990  061E                     __ptext2:	
   991 ;; *************** function _lcd_putc *****************
   992 ;; Defined at:
   993 ;;		line 190 in file "lcd.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  c               1    wreg     unsigned char 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  c               1   12[COMMON] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         0       0       0       0       0
  1008 ;;      Locals:         1       0       0       0       0
  1009 ;;      Temps:          2       0       0       0       0
  1010 ;;      Totals:         3       0       0       0       0
  1011 ;;Total ram usage:        3 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 3
  1014 ;; This function calls:
  1015 ;;		_lcd_busy
  1016 ;;		_lcd_gotoxy
  1017 ;;		_lcd_put_byte
  1018 ;; This function is called by:
  1019 ;;		_showContent
  1020 ;;		_lcd_puts
  1021 ;;		_lcd_String_Delay
  1022 ;;		_putch
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _lcd_putc
  1028  061E                     _lcd_putc:
  1029                           
  1030                           ;incstack = 0
  1031                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1032                           ;lcd_putc@c stored from wreg
  1033  061E  00FC               	movwf	lcd_putc@c
  1034  061F                     l1146:
  1035                           
  1036                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1037  061F  2E66               	goto	l1162
  1038  0620                     l1148:
  1039                           
  1040                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1041  0620  01F3               	clrf	lcd_put_byte@b
  1042  0621  0AF3               	incf	lcd_put_byte@b,f
  1043  0622  3000               	movlw	0
  1044  0623  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1045  0628                     l1150:	
  1046                           ;lcd.c: 199:    while(lcd_busy());
  1047                           
  1048  0628  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1049  062D  3A00               	xorlw	0
  1050  062E  1D03               	skipz
  1051  062F  2E31               	goto	u531
  1052  0630  2E32               	goto	u530
  1053  0631                     u531:
  1054  0631  2E28               	goto	l1150
  1055  0632                     u530:
  1056  0632  2E79               	goto	l133
  1057  0633                     l1152:
  1058                           
  1059                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1060  0633  01F6               	clrf	lcd_gotoxy@row
  1061  0634  0AF6               	incf	lcd_gotoxy@row,f
  1062  0635  3000               	movlw	0
  1063  0636  120A  118A  2504  120A  118A  	fcall	_lcd_gotoxy
  1064                           
  1065                           ;lcd.c: 203:    break;
  1066  063B  2E79               	goto	l133
  1067  063C                     l1154:
  1068                           
  1069                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1070  063C  3010               	movlw	16
  1071  063D  00FA               	movwf	??_lcd_putc
  1072  063E  087A               	movf	??_lcd_putc,w
  1073  063F  00F3               	movwf	lcd_put_byte@b
  1074  0640  3000               	movlw	0
  1075  0641  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1076  0646                     l1156:	
  1077                           ;lcd.c: 206:    while(lcd_busy());
  1078                           
  1079  0646  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1080  064B  3A00               	xorlw	0
  1081  064C  1D03               	skipz
  1082  064D  2E4F               	goto	u541
  1083  064E  2E50               	goto	u540
  1084  064F                     u541:
  1085  064F  2E46               	goto	l1156
  1086  0650                     u540:
  1087  0650  2E79               	goto	l133
  1088  0651                     l1158:
  1089                           
  1090                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1091  0651  087C               	movf	lcd_putc@c,w
  1092  0652  00FA               	movwf	??_lcd_putc
  1093  0653  087A               	movf	??_lcd_putc,w
  1094  0654  00F3               	movwf	lcd_put_byte@b
  1095  0655  3001               	movlw	1
  1096  0656  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1097  065B                     l1160:	
  1098                           ;lcd.c: 212:     while(lcd_busy());
  1099                           
  1100  065B  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1101  0660  3A00               	xorlw	0
  1102  0661  1D03               	skipz
  1103  0662  2E64               	goto	u551
  1104  0663  2E65               	goto	u550
  1105  0664                     u551:
  1106  0664  2E5B               	goto	l1160
  1107  0665                     u550:
  1108  0665  2E79               	goto	l133
  1109  0666                     l1162:
  1110  0666  087C               	movf	lcd_putc@c,w
  1111  0667  00FA               	movwf	??_lcd_putc
  1112  0668  01FB               	clrf	??_lcd_putc+1
  1113                           
  1114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1115                           ; Switch size 1, requested type "simple"
  1116                           ; Number of cases is 1, Range of values is 0 to 0
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte            4     3 (average)
  1120                           ; direct_byte           11     8 (fixed)
  1121                           ; jumptable            260     6 (fixed)
  1122                           ;	Chosen strategy is simple_byte
  1123  0669  087B               	movf	??_lcd_putc+1,w
  1124  066A  3A00               	xorlw	0	; case 0
  1125  066B  1903               	skipnz
  1126  066C  2E6E               	goto	l1326
  1127  066D  2E51               	goto	l1158
  1128  066E                     l1326:
  1129                           
  1130                           ; Switch size 1, requested type "simple"
  1131                           ; Number of cases is 3, Range of values is 8 to 12
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte           10     6 (average)
  1135                           ; direct_byte           26    11 (fixed)
  1136                           ; jumptable            263     9 (fixed)
  1137                           ;	Chosen strategy is simple_byte
  1138  066E  087A               	movf	??_lcd_putc,w
  1139  066F  3A08               	xorlw	8	; case 8
  1140  0670  1903               	skipnz
  1141  0671  2E3C               	goto	l1154
  1142  0672  3A02               	xorlw	2	; case 10
  1143  0673  1903               	skipnz
  1144  0674  2E33               	goto	l1152
  1145  0675  3A06               	xorlw	6	; case 12
  1146  0676  1903               	skipnz
  1147  0677  2E20               	goto	l1148
  1148  0678  2E51               	goto	l1158
  1149  0679                     l133:
  1150  0679  0008               	return
  1151  067A                     __end_of_lcd_putc:
  1152                           
  1153                           	psect	text3
  1154  0504                     __ptext3:	
  1155 ;; *************** function _lcd_gotoxy *****************
  1156 ;; Defined at:
  1157 ;;		line 167 in file "lcd.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  col             1    wreg     unsigned char 
  1160 ;;  row             1    6[COMMON] unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  col             1    8[COMMON] unsigned char 
  1163 ;;  address         1    9[COMMON] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         1       0       0       0       0
  1174 ;;      Locals:         2       0       0       0       0
  1175 ;;      Temps:          1       0       0       0       0
  1176 ;;      Totals:         4       0       0       0       0
  1177 ;;Total ram usage:        4 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 2
  1180 ;; This function calls:
  1181 ;;		_lcd_busy
  1182 ;;		_lcd_put_byte
  1183 ;; This function is called by:
  1184 ;;		_showContent
  1185 ;;		_lcd_putc
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _lcd_gotoxy
  1191  0504                     _lcd_gotoxy:
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1195                           ;lcd_gotoxy@col stored from wreg
  1196  0504  00F8               	movwf	lcd_gotoxy@col
  1197  0505                     l1122:
  1198                           
  1199                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1200  0505  0876               	movf	lcd_gotoxy@row,w
  1201  0506  1903               	btfsc	3,2
  1202  0507  2D09               	goto	u501
  1203  0508  2D0A               	goto	u500
  1204  0509                     u501:
  1205  0509  2D0F               	goto	l1126
  1206  050A                     u500:
  1207  050A                     l1124:
  1208                           
  1209                           ;lcd.c: 174:   address=0x40;
  1210  050A  3040               	movlw	64
  1211  050B  00F7               	movwf	??_lcd_gotoxy
  1212  050C  0877               	movf	??_lcd_gotoxy,w
  1213  050D  00F9               	movwf	lcd_gotoxy@address
  1214  050E  2D10               	goto	l1128
  1215  050F                     l1126:
  1216                           
  1217                           ;lcd.c: 176:   address=0;
  1218  050F  01F9               	clrf	lcd_gotoxy@address
  1219  0510                     l1128:
  1220                           
  1221                           ;lcd.c: 178:  address += col;
  1222  0510  0878               	movf	lcd_gotoxy@col,w
  1223  0511  00F7               	movwf	??_lcd_gotoxy
  1224  0512  0877               	movf	??_lcd_gotoxy,w
  1225  0513  07F9               	addwf	lcd_gotoxy@address,f
  1226  0514                     l1130:
  1227                           
  1228                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1229  0514  0879               	movf	lcd_gotoxy@address,w
  1230  0515  3880               	iorlw	128
  1231  0516  00F7               	movwf	??_lcd_gotoxy
  1232  0517  0877               	movf	??_lcd_gotoxy,w
  1233  0518  00F3               	movwf	lcd_put_byte@b
  1234  0519  3000               	movlw	0
  1235  051A  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1236  051F                     l1132:	
  1237                           ;lcd.c: 181:  while(lcd_busy());
  1238                           
  1239  051F  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1240  0524  3A00               	xorlw	0
  1241  0525  1D03               	skipz
  1242  0526  2D28               	goto	u511
  1243  0527  2D29               	goto	u510
  1244  0528                     u511:
  1245  0528  2D1F               	goto	l1132
  1246  0529                     u510:
  1247  0529                     l115:
  1248  0529  0008               	return
  1249  052A                     __end_of_lcd_gotoxy:
  1250                           
  1251                           	psect	text4
  1252  04E7                     __ptext4:	
  1253 ;; *************** function _getLengthArr *****************
  1254 ;; Defined at:
  1255 ;;		line 40 in file "newmain.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  character       1    wreg     PTR unsigned char 
  1258 ;;		 -> main@class(12), main@HKTT(12), main@your_live(15), main@your_born(17), 
  1259 ;;		 -> main@MSSV(15), main@your_name(16), 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  character       1    2[COMMON] PTR unsigned char 
  1262 ;;		 -> main@class(12), main@HKTT(12), main@your_live(15), main@your_born(17), 
  1263 ;;		 -> main@MSSV(15), main@your_name(16), 
  1264 ;;  i               2    3[COMMON] unsigned int 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  2    0[COMMON] unsigned int 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         2       0       0       0       0
  1275 ;;      Locals:         3       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0
  1277 ;;      Totals:         5       0       0       0       0
  1278 ;;Total ram usage:        5 bytes
  1279 ;; Hardware stack levels used: 2
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_showContent
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _getLengthArr
  1289  04E7                     _getLengthArr:
  1290                           
  1291                           ;incstack = 0
  1292                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1293                           ;getLengthArr@character stored from wreg
  1294  04E7  00F2               	movwf	getLengthArr@character
  1295  04E8                     l1134:
  1296                           
  1297                           ;newmain.c: 41:     unsigned int i = 0;
  1298  04E8  01F3               	clrf	getLengthArr@i
  1299  04E9  01F4               	clrf	getLengthArr@i+1
  1300  04EA                     l1136:
  1301                           
  1302                           ;newmain.c: 43:         if(character[i] == '\n')
  1303  04EA  0873               	movf	getLengthArr@i,w
  1304  04EB  0772               	addwf	getLengthArr@character,w
  1305  04EC  0084               	movwf	4
  1306  04ED  120A  118A  2003  120A  118A  	fcall	stringdir
  1307  04F2  3A0A               	xorlw	10
  1308  04F3  1D03               	skipz
  1309  04F4  2CF6               	goto	u521
  1310  04F5  2CF7               	goto	u520
  1311  04F6                     u521:
  1312  04F6  2CF8               	goto	l1140
  1313  04F7                     u520:
  1314  04F7  2CFF               	goto	l1142
  1315  04F8                     l1140:
  1316                           
  1317                           ;newmain.c: 47:         i++;
  1318  04F8  3001               	movlw	1
  1319  04F9  07F3               	addwf	getLengthArr@i,f
  1320  04FA  1803               	skipnc
  1321  04FB  0AF4               	incf	getLengthArr@i+1,f
  1322  04FC  3000               	movlw	0
  1323  04FD  07F4               	addwf	getLengthArr@i+1,f
  1324  04FE  2CEA               	goto	l1136
  1325  04FF                     l1142:
  1326                           
  1327                           ;newmain.c: 49:     return i;
  1328  04FF  0874               	movf	getLengthArr@i+1,w
  1329  0500  00F1               	movwf	?_getLengthArr+1
  1330  0501  0873               	movf	getLengthArr@i,w
  1331  0502  00F0               	movwf	?_getLengthArr
  1332  0503                     l31:
  1333  0503  0008               	return
  1334  0504                     __end_of_getLengthArr:
  1335                           
  1336                           	psect	text5
  1337  0759                     __ptext5:	
  1338 ;; *************** function _lcd_init *****************
  1339 ;; Defined at:
  1340 ;;		line 241 in file "lcd.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  i               1    0        unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0
  1356 ;;      Temps:          2       0       0       0       0
  1357 ;;      Totals:         2       0       0       0       0
  1358 ;;Total ram usage:        2 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 2
  1361 ;; This function calls:
  1362 ;;		_lcd_busy
  1363 ;;		_lcd_put_byte
  1364 ;;		_lcd_put_nibble
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function _lcd_init
  1372  0759                     _lcd_init:
  1373  0759                     l1206:	
  1374                           ;incstack = 0
  1375                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1376                           
  1377                           
  1378                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1379  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1380  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1381  075B  1188               	bcf	8,3	;volatile
  1382                           
  1383                           ;lcd.c: 248:  TRISD1 = 0;
  1384  075C  1088               	bcf	8,1	;volatile
  1385                           
  1386                           ;lcd.c: 249:  TRISD2 = 0;
  1387  075D  1108               	bcf	8,2	;volatile
  1388                           
  1389                           ;lcd.c: 250:  TRISD4 = 0;
  1390  075E  1208               	bcf	8,4	;volatile
  1391                           
  1392                           ;lcd.c: 251:  TRISD5 = 0;
  1393  075F  1288               	bcf	8,5	;volatile
  1394                           
  1395                           ;lcd.c: 252:  TRISD6 = 0;
  1396  0760  1308               	bcf	8,6	;volatile
  1397                           
  1398                           ;lcd.c: 253:  TRISD7 = 0;
  1399  0761  1388               	bcf	8,7	;volatile
  1400  0762                     l1208:
  1401                           
  1402                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1403  0762  3014               	movlw	20
  1404  0763  00F7               	movwf	??_lcd_init+1
  1405  0764  3079               	movlw	121
  1406  0765  00F6               	movwf	??_lcd_init
  1407  0766                     u737:
  1408  0766  0BF6               	decfsz	??_lcd_init,f
  1409  0767  2F66               	goto	u737
  1410  0768  0BF7               	decfsz	??_lcd_init+1,f
  1411  0769  2F66               	goto	u737
  1412  076A  2F6B               	nop2
  1413  076B                     l1210:
  1414                           
  1415                           ;lcd.c: 257:  RD1 = 0;
  1416  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1417  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1418  076D  1088               	bcf	8,1	;volatile
  1419  076E                     l1212:
  1420                           
  1421                           ;lcd.c: 258:  RD2 = 0;
  1422  076E  1108               	bcf	8,2	;volatile
  1423  076F                     l1214:
  1424                           
  1425                           ;lcd.c: 259:  RD3 = 0;
  1426  076F  1188               	bcf	8,3	;volatile
  1427  0770                     l1216:
  1428                           
  1429                           ;lcd.c: 261:  lcd_put_nibble(3);
  1430  0770  3003               	movlw	3
  1431  0771  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1432  0776                     l1218:
  1433                           
  1434                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1435  0776  300D               	movlw	13
  1436  0777  00F7               	movwf	??_lcd_init+1
  1437  0778  30FB               	movlw	251
  1438  0779  00F6               	movwf	??_lcd_init
  1439  077A                     u747:
  1440  077A  0BF6               	decfsz	??_lcd_init,f
  1441  077B  2F7A               	goto	u747
  1442  077C  0BF7               	decfsz	??_lcd_init+1,f
  1443  077D  2F7A               	goto	u747
  1444  077E  2F7F               	nop2
  1445                           
  1446                           ;lcd.c: 263:  lcd_put_nibble(3);
  1447  077F  3003               	movlw	3
  1448  0780  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1449  0785                     l1220:
  1450                           
  1451                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1452  0785  300D               	movlw	13
  1453  0786  00F7               	movwf	??_lcd_init+1
  1454  0787  30FB               	movlw	251
  1455  0788  00F6               	movwf	??_lcd_init
  1456  0789                     u757:
  1457  0789  0BF6               	decfsz	??_lcd_init,f
  1458  078A  2F89               	goto	u757
  1459  078B  0BF7               	decfsz	??_lcd_init+1,f
  1460  078C  2F89               	goto	u757
  1461  078D  2F8E               	nop2
  1462  078E                     l1222:
  1463                           
  1464                           ;lcd.c: 265:  lcd_put_nibble(3);
  1465  078E  3003               	movlw	3
  1466  078F  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1467                           
  1468                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1469  0794  300D               	movlw	13
  1470  0795  00F7               	movwf	??_lcd_init+1
  1471  0796  30FB               	movlw	251
  1472  0797  00F6               	movwf	??_lcd_init
  1473  0798                     u767:
  1474  0798  0BF6               	decfsz	??_lcd_init,f
  1475  0799  2F98               	goto	u767
  1476  079A  0BF7               	decfsz	??_lcd_init+1,f
  1477  079B  2F98               	goto	u767
  1478  079C  2F9D               	nop2
  1479  079D                     l1224:
  1480                           
  1481                           ;lcd.c: 268:  lcd_put_nibble(2);
  1482  079D  3002               	movlw	2
  1483  079E  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1484  07A3                     l1226:	
  1485                           ;lcd.c: 269:  while(lcd_busy());
  1486                           
  1487  07A3  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1488  07A8  3A00               	xorlw	0
  1489  07A9  1D03               	skipz
  1490  07AA  2FAC               	goto	u611
  1491  07AB  2FAD               	goto	u610
  1492  07AC                     u611:
  1493  07AC  2FA3               	goto	l1226
  1494  07AD                     u610:
  1495  07AD                     l1228:
  1496                           
  1497                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1498  07AD  3028               	movlw	40
  1499  07AE  00F6               	movwf	??_lcd_init
  1500  07AF  0876               	movf	??_lcd_init,w
  1501  07B0  00F3               	movwf	lcd_put_byte@b
  1502  07B1  3000               	movlw	0
  1503  07B2  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1504  07B7                     l1230:	
  1505                           ;lcd.c: 272:  while(lcd_busy());
  1506                           
  1507  07B7  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1508  07BC  3A00               	xorlw	0
  1509  07BD  1D03               	skipz
  1510  07BE  2FC0               	goto	u621
  1511  07BF  2FC1               	goto	u620
  1512  07C0                     u621:
  1513  07C0  2FB7               	goto	l1230
  1514  07C1                     u620:
  1515  07C1                     l1232:
  1516                           
  1517                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1518  07C1  300C               	movlw	12
  1519  07C2  00F6               	movwf	??_lcd_init
  1520  07C3  0876               	movf	??_lcd_init,w
  1521  07C4  00F3               	movwf	lcd_put_byte@b
  1522  07C5  3000               	movlw	0
  1523  07C6  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1524  07CB                     l1234:	
  1525                           ;lcd.c: 275:  while(lcd_busy());
  1526                           
  1527  07CB  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1528  07D0  3A00               	xorlw	0
  1529  07D1  1D03               	skipz
  1530  07D2  2FD4               	goto	u631
  1531  07D3  2FD5               	goto	u630
  1532  07D4                     u631:
  1533  07D4  2FCB               	goto	l1234
  1534  07D5                     u630:
  1535  07D5                     l1236:
  1536                           
  1537                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1538  07D5  01F3               	clrf	lcd_put_byte@b
  1539  07D6  0AF3               	incf	lcd_put_byte@b,f
  1540  07D7  3000               	movlw	0
  1541  07D8  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1542  07DD                     l1238:	
  1543                           ;lcd.c: 278:  while(lcd_busy());
  1544                           
  1545  07DD  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1546  07E2  3A00               	xorlw	0
  1547  07E3  1D03               	skipz
  1548  07E4  2FE6               	goto	u641
  1549  07E5  2FE7               	goto	u640
  1550  07E6                     u641:
  1551  07E6  2FDD               	goto	l1238
  1552  07E7                     u640:
  1553  07E7                     l1240:
  1554                           
  1555                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1556  07E7  3006               	movlw	6
  1557  07E8  00F6               	movwf	??_lcd_init
  1558  07E9  0876               	movf	??_lcd_init,w
  1559  07EA  00F3               	movwf	lcd_put_byte@b
  1560  07EB  3000               	movlw	0
  1561  07EC  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1562  07F1                     l1242:	
  1563                           ;lcd.c: 281:  while(lcd_busy());
  1564                           
  1565  07F1  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1566  07F6  3A00               	xorlw	0
  1567  07F7  1D03               	skipz
  1568  07F8  2FFA               	goto	u651
  1569  07F9  2FFB               	goto	u650
  1570  07FA                     u651:
  1571  07FA  2FF1               	goto	l1242
  1572  07FB                     u650:
  1573  07FB                     l157:
  1574  07FB  0008               	return
  1575  07FC                     __end_of_lcd_init:
  1576                           
  1577                           	psect	text6
  1578  05D7                     __ptext6:	
  1579 ;; *************** function _addCharSpecial *****************
  1580 ;; Defined at:
  1581 ;;		line 29 in file "newmain.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  character       1    wreg     PTR unsigned char 
  1584 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  character       1    9[COMMON] PTR unsigned char 
  1587 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  1588 ;;  i               2    7[COMMON] unsigned int 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1598 ;;      Params:         0       0       0       0       0
  1599 ;;      Locals:         3       0       0       0       0
  1600 ;;      Temps:          1       0       0       0       0
  1601 ;;      Totals:         4       0       0       0       0
  1602 ;;Total ram usage:        4 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 2
  1605 ;; This function calls:
  1606 ;;		_lcd_busy
  1607 ;;		_lcd_put_byte
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function _addCharSpecial
  1615  05D7                     _addCharSpecial:
  1616                           
  1617                           ;incstack = 0
  1618                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1619                           ;addCharSpecial@character stored from wreg
  1620  05D7  00F9               	movwf	addCharSpecial@character
  1621  05D8                     l1168:
  1622                           
  1623                           ;newmain.c: 30:     unsigned int i = 0;
  1624  05D8  01F7               	clrf	addCharSpecial@i
  1625  05D9  01F8               	clrf	addCharSpecial@i+1
  1626  05DA                     l1170:
  1627                           
  1628                           ;newmain.c: 31:     lcd_put_byte(0, 0x40);
  1629  05DA  3040               	movlw	64
  1630  05DB  00F6               	movwf	??_addCharSpecial
  1631  05DC  0876               	movf	??_addCharSpecial,w
  1632  05DD  00F3               	movwf	lcd_put_byte@b
  1633  05DE  3000               	movlw	0
  1634  05DF  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1635  05E4                     l1172:	
  1636                           ;newmain.c: 32:     while(lcd_busy());
  1637                           
  1638  05E4  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1639  05E9  3A00               	xorlw	0
  1640  05EA  1D03               	skipz
  1641  05EB  2DED               	goto	u561
  1642  05EC  2DEE               	goto	u560
  1643  05ED                     u561:
  1644  05ED  2DE4               	goto	l1172
  1645  05EE                     u560:
  1646  05EE  2E10               	goto	l1180
  1647  05EF                     l1174:
  1648                           
  1649                           ;newmain.c: 34:         lcd_put_byte(1, character[i]);
  1650  05EF  0877               	movf	addCharSpecial@i,w
  1651  05F0  0779               	addwf	addCharSpecial@character,w
  1652  05F1  0084               	movwf	4
  1653  05F2  120A  118A  2003  120A  118A  	fcall	stringdir
  1654  05F7  00F6               	movwf	??_addCharSpecial
  1655  05F8  0876               	movf	??_addCharSpecial,w
  1656  05F9  00F3               	movwf	lcd_put_byte@b
  1657  05FA  3001               	movlw	1
  1658  05FB  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1659  0600                     l1176:	
  1660                           ;newmain.c: 35:         while(lcd_busy());
  1661                           
  1662  0600  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1663  0605  3A00               	xorlw	0
  1664  0606  1D03               	skipz
  1665  0607  2E09               	goto	u571
  1666  0608  2E0A               	goto	u570
  1667  0609                     u571:
  1668  0609  2E00               	goto	l1176
  1669  060A                     u570:
  1670  060A                     l1178:
  1671                           
  1672                           ;newmain.c: 36:         i++;
  1673  060A  3001               	movlw	1
  1674  060B  07F7               	addwf	addCharSpecial@i,f
  1675  060C  1803               	skipnc
  1676  060D  0AF8               	incf	addCharSpecial@i+1,f
  1677  060E  3000               	movlw	0
  1678  060F  07F8               	addwf	addCharSpecial@i+1,f
  1679  0610                     l1180:
  1680                           
  1681                           ;newmain.c: 33:     while(character[i] != 0x99) {
  1682  0610  0877               	movf	addCharSpecial@i,w
  1683  0611  0779               	addwf	addCharSpecial@character,w
  1684  0612  0084               	movwf	4
  1685  0613  120A  118A  2003  120A  118A  	fcall	stringdir
  1686  0618  3A99               	xorlw	153
  1687  0619  1D03               	skipz
  1688  061A  2E1C               	goto	u581
  1689  061B  2E1D               	goto	u580
  1690  061C                     u581:
  1691  061C  2DEF               	goto	l1174
  1692  061D                     u580:
  1693  061D                     l24:
  1694  061D  0008               	return
  1695  061E                     __end_of_addCharSpecial:
  1696                           
  1697                           	psect	text7
  1698  055A                     __ptext7:	
  1699 ;; *************** function _lcd_put_byte *****************
  1700 ;; Defined at:
  1701 ;;		line 134 in file "lcd.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  rs              1    wreg     unsigned char 
  1704 ;;  b               1    3[COMMON] unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  rs              1    5[COMMON] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         1       0       0       0       0
  1717 ;;      Locals:         1       0       0       0       0
  1718 ;;      Temps:          1       0       0       0       0
  1719 ;;      Totals:         3       0       0       0       0
  1720 ;;Total ram usage:        3 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 1
  1723 ;; This function calls:
  1724 ;;		_lcd_put_nibble
  1725 ;; This function is called by:
  1726 ;;		_addCharSpecial
  1727 ;;		_lcd_gotoxy
  1728 ;;		_lcd_putc
  1729 ;;		_lcd_init
  1730 ;;		_lcd_ShiftLeft
  1731 ;;		_lcd_ShiftRight
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _lcd_put_byte
  1737  055A                     _lcd_put_byte:
  1738                           
  1739                           ;incstack = 0
  1740                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1741                           ;lcd_put_byte@rs stored from wreg
  1742  055A  00F5               	movwf	lcd_put_byte@rs
  1743  055B                     l1084:
  1744                           
  1745                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1746  055B  1683               	bsf	3,5	;RP0=1, select bank1
  1747  055C  1303               	bcf	3,6	;RP1=0, select bank1
  1748  055D  1208               	bcf	8,4	;volatile
  1749                           
  1750                           ;lcd.c: 140:  TRISD5 = 0;
  1751  055E  1288               	bcf	8,5	;volatile
  1752                           
  1753                           ;lcd.c: 141:  TRISD6 = 0;
  1754  055F  1308               	bcf	8,6	;volatile
  1755                           
  1756                           ;lcd.c: 142:  TRISD7 = 0;
  1757  0560  1388               	bcf	8,7	;volatile
  1758  0561                     l1086:
  1759                           
  1760                           ;lcd.c: 144:  if(rs)
  1761  0561  0875               	movf	lcd_put_byte@rs,w
  1762  0562  1903               	btfsc	3,2
  1763  0563  2D65               	goto	u481
  1764  0564  2D66               	goto	u480
  1765  0565                     u481:
  1766  0565  2D6A               	goto	l105
  1767  0566                     u480:
  1768  0566                     l1088:
  1769                           
  1770                           ;lcd.c: 145:   RD1 = 1;
  1771  0566  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0567  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0568  1488               	bsf	8,1	;volatile
  1774  0569  2D6D               	goto	l1090
  1775  056A                     l105:	
  1776                           ;lcd.c: 146:  else
  1777                           
  1778                           
  1779                           ;lcd.c: 147:   RD1 = 0;
  1780  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1781  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1782  056C  1088               	bcf	8,1	;volatile
  1783  056D                     l1090:
  1784                           
  1785                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1786  056D  3006               	movlw	6
  1787  056E  00F4               	movwf	??_lcd_put_byte
  1788  056F                     u777:
  1789  056F  0BF4               	decfsz	??_lcd_put_byte,f
  1790  0570  2D6F               	goto	u777
  1791  0571  0000               	nop
  1792  0572                     l1092:
  1793                           
  1794                           ;lcd.c: 150:  RD2 = 0;
  1795  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0574  1108               	bcf	8,2	;volatile
  1798                           
  1799                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1800  0575  3006               	movlw	6
  1801  0576  00F4               	movwf	??_lcd_put_byte
  1802  0577                     u787:
  1803  0577  0BF4               	decfsz	??_lcd_put_byte,f
  1804  0578  2D77               	goto	u787
  1805  0579  0000               	nop
  1806  057A                     l1094:
  1807                           
  1808                           ;lcd.c: 153:  RD3 = 0;
  1809  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1810  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1811  057C  1188               	bcf	8,3	;volatile
  1812  057D                     l1096:
  1813                           
  1814                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1815  057D  0873               	movf	lcd_put_byte@b,w
  1816  057E  00F4               	movwf	??_lcd_put_byte
  1817  057F  3004               	movlw	4
  1818  0580                     u495:
  1819  0580  1003               	clrc
  1820  0581  0CF4               	rrf	??_lcd_put_byte,f
  1821  0582  3EFF               	addlw	-1
  1822  0583  1D03               	skipz
  1823  0584  2D80               	goto	u495
  1824  0585  0874               	movf	??_lcd_put_byte,w
  1825  0586  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1826  058B                     l1098:
  1827                           
  1828                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1829  058B  0873               	movf	lcd_put_byte@b,w
  1830  058C  390F               	andlw	15
  1831  058D  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1832  0592                     l107:
  1833  0592  0008               	return
  1834  0593                     __end_of_lcd_put_byte:
  1835                           
  1836                           	psect	text8
  1837  0593                     __ptext8:	
  1838 ;; *************** function _lcd_put_nibble *****************
  1839 ;; Defined at:
  1840 ;;		line 103 in file "lcd.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  b               1    wreg     unsigned char 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  b               1    1[COMMON] unsigned char 
  1845 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       0       0       0       0
  1856 ;;      Locals:         2       0       0       0       0
  1857 ;;      Temps:          1       0       0       0       0
  1858 ;;      Totals:         3       0       0       0       0
  1859 ;;Total ram usage:        3 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_lcd_put_byte
  1865 ;;		_lcd_init
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _lcd_put_nibble
  1871  0593                     _lcd_put_nibble:
  1872                           
  1873                           ;incstack = 0
  1874                           ; Regs used in _lcd_put_nibble: [wreg]
  1875                           ;lcd_put_nibble@b stored from wreg
  1876  0593  00F1               	movwf	lcd_put_nibble@b
  1877  0594                     l1068:
  1878                           
  1879                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1880  0594  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0595  1303               	bcf	3,6	;RP1=0, select bank1
  1882  0596  1208               	bcf	8,4	;volatile
  1883                           
  1884                           ;lcd.c: 110:  TRISD5 = 0;
  1885  0597  1288               	bcf	8,5	;volatile
  1886                           
  1887                           ;lcd.c: 111:  TRISD6 = 0;
  1888  0598  1308               	bcf	8,6	;volatile
  1889                           
  1890                           ;lcd.c: 112:  TRISD7 = 0;
  1891  0599  1388               	bcf	8,7	;volatile
  1892  059A                     l1070:
  1893                           
  1894                           ;lcd.c: 114:  temp.Val = b;
  1895  059A  0871               	movf	lcd_put_nibble@b,w
  1896  059B  00F0               	movwf	??_lcd_put_nibble
  1897  059C  0870               	movf	??_lcd_put_nibble,w
  1898  059D  00F2               	movwf	lcd_put_nibble@temp
  1899  059E                     l1072:
  1900                           
  1901                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1902  059E  1872               	btfsc	lcd_put_nibble@temp,0
  1903  059F  2DA1               	goto	u401
  1904  05A0  2DA5               	goto	u400
  1905  05A1                     u401:
  1906  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1907  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1908  05A3  1608               	bsf	8,4	;volatile
  1909  05A4  2DA8               	goto	u414
  1910  05A5                     u400:
  1911  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1912  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1913  05A7  1208               	bcf	8,4	;volatile
  1914  05A8                     u414:
  1915  05A8                     l1074:
  1916                           
  1917                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1918  05A8  18F2               	btfsc	lcd_put_nibble@temp,1
  1919  05A9  2DAB               	goto	u421
  1920  05AA  2DAF               	goto	u420
  1921  05AB                     u421:
  1922  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1923  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1924  05AD  1688               	bsf	8,5	;volatile
  1925  05AE  2DB2               	goto	u434
  1926  05AF                     u420:
  1927  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1928  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1929  05B1  1288               	bcf	8,5	;volatile
  1930  05B2                     u434:
  1931  05B2                     l1076:
  1932                           
  1933                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1934  05B2  1972               	btfsc	lcd_put_nibble@temp,2
  1935  05B3  2DB5               	goto	u441
  1936  05B4  2DB9               	goto	u440
  1937  05B5                     u441:
  1938  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1939  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1940  05B7  1708               	bsf	8,6	;volatile
  1941  05B8  2DBC               	goto	u454
  1942  05B9                     u440:
  1943  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1944  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1945  05BB  1308               	bcf	8,6	;volatile
  1946  05BC                     u454:
  1947  05BC                     l1078:
  1948                           
  1949                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1950  05BC  19F2               	btfsc	lcd_put_nibble@temp,3
  1951  05BD  2DBF               	goto	u461
  1952  05BE  2DC3               	goto	u460
  1953  05BF                     u461:
  1954  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1955  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1956  05C1  1788               	bsf	8,7	;volatile
  1957  05C2  2DC6               	goto	u474
  1958  05C3                     u460:
  1959  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1960  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1961  05C5  1388               	bcf	8,7	;volatile
  1962  05C6                     u474:
  1963                           
  1964                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1965  05C6  3006               	movlw	6
  1966  05C7  00F0               	movwf	??_lcd_put_nibble
  1967  05C8                     u797:
  1968  05C8  0BF0               	decfsz	??_lcd_put_nibble,f
  1969  05C9  2DC8               	goto	u797
  1970  05CA  0000               	nop
  1971  05CB                     l1080:
  1972                           
  1973                           ;lcd.c: 122:  RD3 = 1;
  1974  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1975  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1976  05CD  1588               	bsf	8,3	;volatile
  1977                           
  1978                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1979  05CE  3006               	movlw	6
  1980  05CF  00F0               	movwf	??_lcd_put_nibble
  1981  05D0                     u807:
  1982  05D0  0BF0               	decfsz	??_lcd_put_nibble,f
  1983  05D1  2DD0               	goto	u807
  1984  05D2  0000               	nop
  1985  05D3                     l1082:
  1986                           
  1987                           ;lcd.c: 124:  RD3 = 0;
  1988  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1989  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1990  05D5  1188               	bcf	8,3	;volatile
  1991  05D6                     l102:
  1992  05D6  0008               	return
  1993  05D7                     __end_of_lcd_put_nibble:
  1994                           
  1995                           	psect	text9
  1996  052A                     __ptext9:	
  1997 ;; *************** function _lcd_busy *****************
  1998 ;; Defined at:
  1999 ;;		line 18 in file "lcd.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  busy            1    1[COMMON] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      unsigned char 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       0       0       0
  2014 ;;      Locals:         1       0       0       0       0
  2015 ;;      Temps:          1       0       0       0       0
  2016 ;;      Totals:         2       0       0       0       0
  2017 ;;Total ram usage:        2 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_addCharSpecial
  2023 ;;		_lcd_gotoxy
  2024 ;;		_lcd_putc
  2025 ;;		_lcd_init
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _lcd_busy
  2031  052A                     _lcd_busy:
  2032  052A                     l1100:	
  2033                           ;incstack = 0
  2034                           ; Regs used in _lcd_busy: [wreg+status,2]
  2035                           
  2036                           
  2037                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2038  052A  1683               	bsf	3,5	;RP0=1, select bank1
  2039  052B  1303               	bcf	3,6	;RP1=0, select bank1
  2040  052C  1608               	bsf	8,4	;volatile
  2041                           
  2042                           ;lcd.c: 25:  TRISD5 = 1;
  2043  052D  1688               	bsf	8,5	;volatile
  2044                           
  2045                           ;lcd.c: 26:  TRISD6 = 1;
  2046  052E  1708               	bsf	8,6	;volatile
  2047                           
  2048                           ;lcd.c: 27:  TRISD7 = 1;
  2049  052F  1788               	bsf	8,7	;volatile
  2050                           
  2051                           ;lcd.c: 29:  RD2 = 1;
  2052  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0532  1508               	bsf	8,2	;volatile
  2055                           
  2056                           ;lcd.c: 30:  RD1 = 0;
  2057  0533  1088               	bcf	8,1	;volatile
  2058  0534                     l1102:
  2059                           
  2060                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2061  0534  3006               	movlw	6
  2062  0535  00F0               	movwf	??_lcd_busy
  2063  0536                     u817:
  2064  0536  0BF0               	decfsz	??_lcd_busy,f
  2065  0537  2D36               	goto	u817
  2066  0538  0000               	nop
  2067  0539                     l1104:
  2068                           
  2069                           ;lcd.c: 32:  RD3 = 1;
  2070  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2071  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2072  053B  1588               	bsf	8,3	;volatile
  2073                           
  2074                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2075  053C  3006               	movlw	6
  2076  053D  00F0               	movwf	??_lcd_busy
  2077  053E                     u827:
  2078  053E  0BF0               	decfsz	??_lcd_busy,f
  2079  053F  2D3E               	goto	u827
  2080  0540  0000               	nop
  2081  0541                     l1106:
  2082                           
  2083                           ;lcd.c: 35:  busy = RD7;
  2084  0541  3000               	movlw	0
  2085  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0544  1B88               	btfsc	8,7	;volatile
  2088  0545  3001               	movlw	1
  2089  0546  00F1               	movwf	lcd_busy@busy
  2090  0547                     l1108:
  2091                           
  2092                           ;lcd.c: 37:  RD3 = 0;
  2093  0547  1188               	bcf	8,3	;volatile
  2094  0548                     l1110:
  2095                           
  2096                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2097  0548  3006               	movlw	6
  2098  0549  00F0               	movwf	??_lcd_busy
  2099  054A                     u837:
  2100  054A  0BF0               	decfsz	??_lcd_busy,f
  2101  054B  2D4A               	goto	u837
  2102  054C  0000               	nop
  2103  054D                     l1112:
  2104                           
  2105                           ;lcd.c: 39:  RD3 = 1;
  2106  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2107  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2108  054F  1588               	bsf	8,3	;volatile
  2109  0550                     l1114:
  2110                           
  2111                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2112  0550  3006               	movlw	6
  2113  0551  00F0               	movwf	??_lcd_busy
  2114  0552                     u847:
  2115  0552  0BF0               	decfsz	??_lcd_busy,f
  2116  0553  2D52               	goto	u847
  2117  0554  0000               	nop
  2118  0555                     l1116:
  2119                           
  2120                           ;lcd.c: 41:  RD3 = 0;
  2121  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0557  1188               	bcf	8,3	;volatile
  2124  0558                     l1118:
  2125                           
  2126                           ;lcd.c: 43:  return busy;
  2127  0558  0871               	movf	lcd_busy@busy,w
  2128  0559                     l94:
  2129  0559  0008               	return
  2130  055A                     __end_of_lcd_busy:
  2131  007E                     btemp	set	126	;btemp
  2132  007E                     wtemp0	set	126
  2133                           
  2134                           	psect	config
  2135                           
  2136                           ;Config register CONFIG1 @ 0x2007
  2137                           ;	Oscillator Selection bits
  2138                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2139                           ;	Watchdog Timer Enable bit
  2140                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2141                           ;	Power-up Timer Enable bit
  2142                           ;	PWRTE = OFF, PWRT disabled
  2143                           ;	RE3/MCLR pin function select bit
  2144                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2145                           ;	Code Protection bit
  2146                           ;	CP = OFF, Program memory code protection is disabled
  2147                           ;	Data Code Protection bit
  2148                           ;	CPD = OFF, Data memory code protection is disabled
  2149                           ;	Brown Out Reset Selection bits
  2150                           ;	BOREN = OFF, BOR disabled
  2151                           ;	Internal External Switchover bit
  2152                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2153                           ;	Fail-Safe Clock Monitor Enabled bit
  2154                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2155                           ;	Low Voltage Programming Enable bit
  2156                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2157                           ;	In-Circuit Debugger Mode bit
  2158                           ;	DEBUG = 0x1, unprogrammed default
  2159  2007                     	org	8199
  2160  2007  20F2               	dw	8434
  2161                           
  2162                           ;Config register CONFIG2 @ 0x2008
  2163                           ;	Brown-out Reset Selection bit
  2164                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2165                           ;	Flash Program Memory Self Write Enable bits
  2166                           ;	WRT = OFF, Write protection off
  2167  2008                     	org	8200
  2168  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    169
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    showContent@character_second	PTR unsigned char  size(1) Largest target is 15
		 -> main@class(CODE[12]), main@your_live(CODE[15]), main@MSSV(CODE[15]), 

    showContent@character_firt	PTR unsigned char  size(1) Largest target is 17
		 -> main@HKTT(CODE[12]), main@your_born(CODE[17]), main@your_name(CODE[16]), 

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[12]), main@HKTT(CODE[12]), main@your_live(CODE[15]), main@your_born(CODE[17]), 
		 -> main@MSSV(CODE[15]), main@your_name(CODE[16]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 49
		 -> main@special_HKTT_class(CODE[33]), main@special_name_born_live(CODE[49]), 


Critical Paths under _main in COMMON

    _main->_showContent
    _showContent->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_showContent

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    7154
                                              7 BANK0      5     5      0
                     _addCharSpecial
                           _lcd_init
                        _showContent
 ---------------------------------------------------------------------------------
 (1) _showContent                                          8     7      1    4661
                                             13 COMMON     1     0      1
                                              0 BANK0      7     7      0
                       _getLengthArr
                         _lcd_gotoxy
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1409
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _getLengthArr                                         5     3      2     134
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1268
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _showContent
     _getLengthArr
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
       _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 04 21:39:00 2021

                                 pc 0002                                  l31 0503  
                                l24 061D                                  l40 0758  
                                l61 06DD                                  l94 0559  
            __end_of_lcd_put_nibble 05D7                                  fsr 0004  
                   ?_addCharSpecial 0070                       ?_lcd_put_byte 0073  
                               l102 05D6                                 l105 056A  
                               l107 0592                                 l115 0529  
                               l133 0679                                 l157 07FB  
                               _RD1 0041                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u400 05A5  
                               u401 05A1                                 u420 05AF  
                               u500 050A                                 u421 05AB  
                               u501 0509                                 u414 05A8  
                               u510 0529                                 u511 0528  
                               u440 05B9                                 u520 04F7  
                               u600 0758                                 u441 05B5  
                               u521 04F6                                 u601 0757  
                               u434 05B2                                 u610 07AD  
                               u530 0632                                 u611 07AC  
                               u531 0631                                 u460 05C3  
                               u620 07C1                                 u540 0650  
                               u461 05BF                                 u621 07C0  
                               u541 064F                                 u605 0754  
                               u454 05BC                                 u630 07D5  
                               u550 0665                                 u631 07D4  
                               u551 0664                                 u480 0566  
                               u560 05EE                                 u640 07E7  
                               u481 0565                                 u561 05ED  
                               u641 07E6                                 u474 05C6  
                               u570 060A                                 u650 07FB  
                               u571 0609                                 u651 07FA  
                               u707 069D                                 u580 061D  
                               u581 061C                                 u717 06B7  
                               u590 0720                                 u807 05D0  
                               u495 0580                                 u591 071F  
                               u727 06D7                                 u817 0536  
                               u737 0766                                 u827 053E  
                               u747 077A                                 u595 071C  
                               u837 054A                                 u757 0789  
                               u847 0552                                 u767 0798  
                               u777 056F                                 u787 0577  
                               u797 05C8                                 fsr0 0004  
                              l1100 052A                                l1110 0548  
                              l1102 0534                                l1112 054D  
                              l1104 0539                                l1200 0739  
                              l1114 0550                                l1106 0541  
                              l1210 076B                                l1130 0514  
                              l1122 0505                                l1202 0746  
                              l1116 0555                                l1108 0547  
                              l1220 0785                                l1212 076E  
                              l1140 04F8                                l1132 051F  
                              l1124 050A                                l1204 074E  
                              l1118 0558                                l1070 059A  
                              l1230 07B7                                l1222 078E  
                              l1214 076F                                l1206 0759  
                              l1142 04FF                                l1134 04E8  
                              l1126 050F                                l1150 0628  
                              l1080 05CB                                l1072 059E  
                              l1240 07E7                                l1232 07C1  
                              l1224 079D                                l1216 0770  
                              l1208 0762                                l1136 04EA  
                              l1128 0510                                l1160 065B  
                              l1152 0633                                l1082 05D3  
                              l1074 05A8                                l1090 056D  
                              l1170 05DA                                l1242 07F1  
                              l1234 07CB                                l1226 07A3  
                              l1218 0776                                l1154 063C  
                              l1162 0666                                l1146 061F  
                              l1250 067E                                l1076 05B2  
                              l1068 0594                                l1092 0572  
                              l1084 055B                                l1180 0610  
                              l1172 05E4                                l1236 07D5  
                              l1228 07AD                                l1156 0646  
                              l1148 0620                                l1260 06AF  
                              l1252 0683                                l1078 05BC  
                              l1094 057A                                l1086 0561  
                              l1174 05EF                                l1238 07DD  
                              l1326 066E                                l1158 0651  
                              l1190 070E                                l1182 06E3  
                              l1262 06BD                                l1254 0689  
                              l1096 057D                                l1088 0566  
                              l1176 0600                                l1168 05D8  
                              l1192 0716                                l1184 06F5  
                              l1264 06C3                                l1256 0695  
                              l1248 067A                                l1098 058B  
                              l1178 060A                                l1194 0720  
                              l1186 06FC                                l1266 06CF  
                              l1258 06A3                                l1196 072C  
                              l1188 0701                                l1198 0734  
                              _main 067A                        lcd_busy@busy 0071  
                              btemp 007E                                start 0000  
                   ?_lcd_put_nibble 0070                      ??_lcd_put_byte 0074  
                             ?_main 0070               getLengthArr@character 0072  
                             pclath 000A                               status 0003  
                             wtemp0 007E                     __initialization 07FC  
              __end_of_getLengthArr 0504                        __end_of_main 06E0  
                     lcd_gotoxy@col 0078                       lcd_gotoxy@row 0076  
                lcd_put_nibble@temp 0072                              ??_main 0027  
                            _TRISD1 0441                              _TRISD2 0442  
                            _TRISD3 0443                              _TRISD4 0444  
                            _TRISD5 0445                              _TRISD6 0446  
                            _TRISD7 0447                    __end_of_lcd_busy 055A  
                  __end_of_lcd_init 07FC                    __end_of_lcd_putc 067A  
                      ?_showContent 007D                       lcd_put_byte@b 0073  
                  __end_ofmain@HKTT 00B2                    __end_ofmain@MSSV 008B  
           __end_of__initialization 07FC                __end_of_lcd_put_byte 0593  
                  ??_addCharSpecial 0076                      __pcstackCOMMON 0070  
                     main@your_born 005B                       main@your_name 006C  
                     main@your_live 008B                   lcd_gotoxy@address 0079  
             __size_of_getLengthArr 001D                    ??_lcd_put_nibble 0070  
                        __pmaintext 067A                          _lcd_gotoxy 0504  
         showContent@character_firt 0024                        _getLengthArr 04E7  
                         ?_lcd_busy 0070                           ?_lcd_init 0070  
                         ?_lcd_putc 0070                          __stringtab 0003  
           addCharSpecial@character 0079                             __ptext1 06E0  
                           __ptext2 061E                             __ptext3 0504  
                           __ptext4 04E7                             __ptext5 0759  
                           __ptext6 05D7                             __ptext7 055A  
                           __ptext8 0593                             __ptext9 052A  
              __size_of_showContent 0079               __size_of_lcd_put_byte 0039  
                        ??_lcd_busy 0070                          ??_lcd_init 0076  
                        ??_lcd_putc 007A                end_of_initialization 07FC  
                    lcd_put_byte@rs 0075              main@special_HKTT_class 003A  
                 __end_ofmain@class 00A6                        _lcd_put_byte 055A  
                       ?_lcd_gotoxy 0076                          main@length 002A  
               start_initialization 07FC                 __size_of_lcd_gotoxy 0026  
                         ___latbits 0002                       __pcstackBANK0 0020  
                   addCharSpecial@i 0077                   __size_of_lcd_busy 0030  
                 __size_of_lcd_init 00A3                   __size_of_lcd_putc 005C  
       showContent@character_second 007D                           __pstrings 0003  
           __size_of_addCharSpecial 0047                       ??_showContent 007E  
                       __stringbase 0008             __size_of_lcd_put_nibble 0044  
                         main@class 009A                       getLengthArr@i 0073  
                         lcd_putc@c 007C                        ??_lcd_gotoxy 0077  
    __end_ofmain@special_HKTT_class 005B               __end_ofmain@your_born 006C  
             __end_ofmain@your_name 007C               __end_ofmain@your_live 009A  
                __end_of_lcd_gotoxy 052A                  __end_of__stringtab 0009  
               __end_of_showContent 0759                            _lcd_busy 052A  
                          _lcd_init 0759                            _lcd_putc 061E  
                     __size_of_main 0066                            main@HKTT 00A6  
                          main@MSSV 007C                      _addCharSpecial 05D7  
               showContent@length_1 0020                 showContent@length_2 0022  
                   lcd_put_nibble@b 0071  __end_ofmain@special_name_born_live 003A  
        main@special_name_born_live 0009                       ?_getLengthArr 0070  
                         stringcode 0003                        showContent@i 0025  
            __end_of_addCharSpecial 061E                         _showContent 06E0  
                    _lcd_put_nibble 0593                            stringdir 0003  
                          stringtab 0003                      ??_getLengthArr 0072  
