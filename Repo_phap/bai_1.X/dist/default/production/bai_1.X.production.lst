

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 04 21:25:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	strings
   290  0003                     __pstrings:
   291  0003                     stringtab:
   292  0003                     __stringtab:
   293  0003                     stringcode:	
   294                           ;	String table - string pointers are 1 byte each
   295                           
   296  0003                     stringdir:
   297  0003  3000               	movlw	high stringdir
   298  0004  008A               	movwf	10
   299  0005  0804               	movf	4,w
   300  0006  0A84               	incf	4,f
   301  0007  0782               	addwf	2,f
   302  0008                     __stringbase:
   303  0008  3400               	retlw	0
   304  0009                     __end_of__stringtab:
   305  0009                     main@your_born:
   306  0009  344E               	retlw	78
   307  000A  3467               	retlw	103
   308  000B  3461               	retlw	97
   309  000C  3479               	retlw	121
   310  000D  3453               	retlw	83
   311  000E  3469               	retlw	105
   312  000F  346E               	retlw	110
   313  0010  3468               	retlw	104
   314  0011  343A               	retlw	58
   315  0012  3431               	retlw	49
   316  0013  3432               	retlw	50
   317  0014  342F               	retlw	47
   318  0015  3432               	retlw	50
   319  0016  3430               	retlw	48
   320  0017  3430               	retlw	48
   321  0018  3431               	retlw	49
   322  0019  3400               	retlw	0
   323  001A                     __end_ofmain@your_born:
   324  001A                     main@your_live:
   325  001A  344E               	retlw	78
   326  001B  346F               	retlw	111
   327  001C  3469               	retlw	105
   328  001D  3453               	retlw	83
   329  001E  343A               	retlw	58
   330  001F  3420               	retlw	32
   331  0020  344E               	retlw	78
   332  0021  3469               	retlw	105
   333  0022  346E               	retlw	110
   334  0023  3468               	retlw	104
   335  0024  3454               	retlw	84
   336  0025  3468               	retlw	104
   337  0026  3475               	retlw	117
   338  0027  3461               	retlw	97
   339  0028  346E               	retlw	110
   340  0029  3400               	retlw	0
   341  002A                     __end_ofmain@your_live:
   342  002A                     main@your_name:
   343  002A  344E               	retlw	78
   344  002B  3467               	retlw	103
   345  002C  3475               	retlw	117
   346  002D  3479               	retlw	121
   347  002E  3465               	retlw	101
   348  002F  346E               	retlw	110
   349  0030  3420               	retlw	32
   350  0031  3454               	retlw	84
   351  0032  3461               	retlw	97
   352  0033  346E               	retlw	110
   353  0034  3420               	retlw	32
   354  0035  3450               	retlw	80
   355  0036  3468               	retlw	104
   356  0037  3461               	retlw	97
   357  0038  3470               	retlw	112
   358  0039  3400               	retlw	0
   359  003A                     __end_ofmain@your_name:
   360  003A                     main@MSSV:
   361  003A  344D               	retlw	77
   362  003B  3453               	retlw	83
   363  003C  3453               	retlw	83
   364  003D  3456               	retlw	86
   365  003E  343A               	retlw	58
   366  003F  3431               	retlw	49
   367  0040  3439               	retlw	57
   368  0041  3434               	retlw	52
   369  0042  3433               	retlw	51
   370  0043  3436               	retlw	54
   371  0044  3434               	retlw	52
   372  0045  3438               	retlw	56
   373  0046  3431               	retlw	49
   374  0047  3400               	retlw	0
   375  0048                     __end_ofmain@MSSV:
   376  0048                     main@class:
   377  0048  344C               	retlw	76
   378  0049  346F               	retlw	111
   379  004A  3470               	retlw	112
   380  004B  343A               	retlw	58
   381  004C  3420               	retlw	32
   382  004D  3444               	retlw	68
   383  004E  3454               	retlw	84
   384  004F  3456               	retlw	86
   385  0050  3454               	retlw	84
   386  0051  3431               	retlw	49
   387  0052  3435               	retlw	53
   388  0053  3441               	retlw	65
   389  0054  3400               	retlw	0
   390  0055                     __end_ofmain@class:
   391  0055                     main@HKTT:
   392  0055  3448               	retlw	72
   393  0056  344B               	retlw	75
   394  0057  3454               	retlw	84
   395  0058  3454               	retlw	84
   396  0059  343A               	retlw	58
   397  005A  3420               	retlw	32
   398  005B  3447               	retlw	71
   399  005C  346F               	retlw	111
   400  005D  3420               	retlw	32
   401  005E  3456               	retlw	86
   402  005F  3461               	retlw	97
   403  0060  3470               	retlw	112
   404  0061  3400               	retlw	0
   405  0062                     __end_ofmain@HKTT:
   406  0044                     _RD4	set	68
   407  0045                     _RD5	set	69
   408  0046                     _RD6	set	70
   409  0047                     _RD7	set	71
   410  0043                     _RD3	set	67
   411  0041                     _RD1	set	65
   412  0042                     _RD2	set	66
   413  0442                     _TRISD2	set	1090
   414  0441                     _TRISD1	set	1089
   415  0443                     _TRISD3	set	1091
   416  0447                     _TRISD7	set	1095
   417  0446                     _TRISD6	set	1094
   418  0445                     _TRISD5	set	1093
   419  0444                     _TRISD4	set	1092
   420                           
   421                           	psect	cinit
   422  07FC                     start_initialization:	
   423                           ; #config settings
   424                           
   425  07FC                     __initialization:
   426  07FC                     end_of_initialization:	
   427                           ;End of C runtime variable initialization code
   428                           
   429  07FC                     __end_of__initialization:
   430  07FC  0183               	clrf	3
   431  07FD  120A  118A  2DED   	ljmp	_main	;jump to C main() function
   432                           
   433                           	psect	cstackCOMMON
   434  0070                     __pcstackCOMMON:
   435  0070                     ?_lcd_putc:
   436  0070                     ?_lcd_puts:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_lcd_init:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_main:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_lcd_busy:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ??_lcd_busy:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_lcd_put_nibble:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ??_lcd_put_nibble:	
   455                           ; 1 bytes @ 0x0
   456                           
   457                           
   458                           ; 1 bytes @ 0x0
   459  0070                     	ds	1
   460  0071                     lcd_busy@busy:
   461  0071                     lcd_put_nibble@b:	
   462                           ; 1 bytes @ 0x1
   463                           
   464                           
   465                           ; 1 bytes @ 0x1
   466  0071                     	ds	1
   467  0072                     lcd_put_nibble@temp:
   468                           
   469                           ; 1 bytes @ 0x2
   470  0072                     	ds	1
   471  0073                     ?_lcd_put_byte:
   472  0073                     lcd_put_byte@b:	
   473                           ; 1 bytes @ 0x3
   474                           
   475                           
   476                           ; 1 bytes @ 0x3
   477  0073                     	ds	1
   478  0074                     ??_lcd_put_byte:
   479                           
   480                           ; 1 bytes @ 0x4
   481  0074                     	ds	1
   482  0075                     lcd_put_byte@rs:
   483                           
   484                           ; 1 bytes @ 0x5
   485  0075                     	ds	1
   486  0076                     ?_lcd_gotoxy:
   487  0076                     ??_lcd_init:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     lcd_gotoxy@row:	
   491                           ; 1 bytes @ 0x6
   492                           
   493                           
   494                           ; 1 bytes @ 0x6
   495  0076                     	ds	1
   496  0077                     ??_lcd_gotoxy:
   497                           
   498                           ; 1 bytes @ 0x7
   499  0077                     	ds	1
   500  0078                     lcd_gotoxy@col:
   501                           
   502                           ; 1 bytes @ 0x8
   503  0078                     	ds	1
   504  0079                     lcd_gotoxy@address:
   505                           
   506                           ; 1 bytes @ 0x9
   507  0079                     	ds	1
   508  007A                     ??_lcd_putc:
   509                           
   510                           ; 1 bytes @ 0xA
   511  007A                     	ds	2
   512  007C                     lcd_putc@c:
   513                           
   514                           ; 1 bytes @ 0xC
   515  007C                     	ds	1
   516  007D                     ??_lcd_puts:
   517                           
   518                           ; 1 bytes @ 0xD
   519  007D                     	ds	1
   520                           
   521                           	psect	cstackBANK0
   522  0020                     __pcstackBANK0:
   523  0020                     lcd_puts@s:
   524                           
   525                           ; 1 bytes @ 0x0
   526  0020                     	ds	1
   527  0021                     ?_showContent:
   528  0021                     showContent@arr_2:	
   529                           ; 1 bytes @ 0x1
   530                           
   531                           
   532                           ; 1 bytes @ 0x1
   533  0021                     	ds	1
   534  0022                     ??_showContent:
   535                           
   536                           ; 1 bytes @ 0x2
   537  0022                     	ds	3
   538  0025                     showContent@arr_1:
   539                           
   540                           ; 1 bytes @ 0x5
   541  0025                     	ds	1
   542  0026                     ??_main:
   543                           
   544                           ; 1 bytes @ 0x6
   545  0026                     	ds	1
   546                           
   547                           	psect	maintext
   548  05ED                     __pmaintext:	
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 34 in file "newmain.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : B00/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       1       0       0       0
   571 ;;      Totals:         0       1       0       0       0
   572 ;;Total ram usage:        1 bytes
   573 ;; Hardware stack levels required when called: 6
   574 ;; This function calls:
   575 ;;		_lcd_init
   576 ;;		_showContent
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  05ED                     _main:
   585  05ED                     l1133:	
   586                           ;incstack = 0
   587                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   588                           
   589                           
   590                           ;newmain.c: 35:     const char your_name[] = "Nguyen Tan Phap";;newmain.c: 36:     const
      +                           char your_born[] = "NgaySinh:12/2001";;newmain.c: 37:     const char your_live[] = "Noi
      +                          S: NinhThuan";;newmain.c: 38:     const char HKTT[] = "HKTT: Go Vap";;newmain.c: 39:    
      +                           const char class[] = "Lop: DTVT15A";;newmain.c: 40:     const char MSSV[] = "MSSV:19436
      +                          481";;newmain.c: 41:     lcd_init();
   591  05ED  120A  118A  2759  120A  118A  	fcall	_lcd_init
   592  05F2                     l1135:
   593                           
   594                           ;newmain.c: 42:     showContent(your_name, MSSV);
   595  05F2  3032               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   596  05F3  1283               	bcf	3,5	;RP0=0, select bank0
   597  05F4  1303               	bcf	3,6	;RP1=0, select bank0
   598  05F5  00A6               	movwf	??_main
   599  05F6  0826               	movf	??_main,w
   600  05F7  00A1               	movwf	showContent@arr_2
   601  05F8  3022               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   602  05F9  120A  118A  2649  120A  118A  	fcall	_showContent
   603  05FE                     l1137:
   604                           
   605                           ;newmain.c: 43:     showContent(your_born, your_live);
   606  05FE  3012               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   607  05FF  1283               	bcf	3,5	;RP0=0, select bank0
   608  0600  1303               	bcf	3,6	;RP1=0, select bank0
   609  0601  00A6               	movwf	??_main
   610  0602  0826               	movf	??_main,w
   611  0603  00A1               	movwf	showContent@arr_2
   612  0604  3001               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   613  0605  120A  118A  2649  120A  118A  	fcall	_showContent
   614  060A                     l1139:
   615                           
   616                           ;newmain.c: 44:     showContent(HKTT, class);
   617  060A  3040               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
   618  060B  1283               	bcf	3,5	;RP0=0, select bank0
   619  060C  1303               	bcf	3,6	;RP1=0, select bank0
   620  060D  00A6               	movwf	??_main
   621  060E  0826               	movf	??_main,w
   622  060F  00A1               	movwf	showContent@arr_2
   623  0610  304D               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
   624  0611  120A  118A  2649  120A  118A  	fcall	_showContent
   625  0616                     l30:
   626  0616  120A  118A  2800   	ljmp	start
   627  0619                     __end_of_main:
   628                           
   629                           	psect	text1
   630  0649                     __ptext1:	
   631 ;; *************** function _showContent *****************
   632 ;; Defined at:
   633 ;;		line 25 in file "newmain.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;  arr_1           1    wreg     PTR unsigned char 
   636 ;;		 -> main@HKTT(13), main@your_born(17), main@your_name(16), 
   637 ;;  arr_2           1    1[BANK0 ] PTR unsigned char 
   638 ;;		 -> main@class(13), main@your_live(16), main@MSSV(14), 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  arr_1           1    5[BANK0 ] PTR unsigned char 
   641 ;;		 -> main@HKTT(13), main@your_born(17), main@your_name(16), 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       1       0       0       0
   652 ;;      Locals:         0       1       0       0       0
   653 ;;      Temps:          0       3       0       0       0
   654 ;;      Totals:         0       5       0       0       0
   655 ;;Total ram usage:        5 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 5
   658 ;; This function calls:
   659 ;;		_lcd_gotoxy
   660 ;;		_lcd_putc
   661 ;;		_lcd_puts
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _showContent
   669  0649                     _showContent:
   670                           
   671                           ;incstack = 0
   672                           ; Regs used in _showContent: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   673                           ;showContent@arr_1 stored from wreg
   674  0649  1283               	bcf	3,5	;RP0=0, select bank0
   675  064A  1303               	bcf	3,6	;RP1=0, select bank0
   676  064B  00A5               	movwf	showContent@arr_1
   677  064C                     l1081:
   678                           
   679                           ;newmain.c: 26:     lcd_putc('\f');
   680  064C  300C               	movlw	12
   681  064D  120A  118A  26FD  120A  118A  	fcall	_lcd_putc
   682  0652                     l1083:
   683                           
   684                           ;newmain.c: 27:     lcd_gotoxy(0, 0);
   685  0652  01F6               	clrf	lcd_gotoxy@row
   686  0653  3000               	movlw	0
   687  0654  120A  118A  25C7  120A  118A  	fcall	_lcd_gotoxy
   688  0659                     l1085:
   689                           
   690                           ;newmain.c: 28:     lcd_puts(arr_1);
   691  0659  1283               	bcf	3,5	;RP0=0, select bank0
   692  065A  1303               	bcf	3,6	;RP1=0, select bank0
   693  065B  0825               	movf	showContent@arr_1,w
   694  065C  120A  118A  25A4  120A  118A  	fcall	_lcd_puts
   695                           
   696                           ;newmain.c: 29:     lcd_gotoxy(0, 1);
   697  0661  01F6               	clrf	lcd_gotoxy@row
   698  0662  0AF6               	incf	lcd_gotoxy@row,f
   699  0663  3000               	movlw	0
   700  0664  120A  118A  25C7  120A  118A  	fcall	_lcd_gotoxy
   701  0669                     l1087:
   702                           
   703                           ;newmain.c: 30:     lcd_puts(arr_2);
   704  0669  1283               	bcf	3,5	;RP0=0, select bank0
   705  066A  1303               	bcf	3,6	;RP1=0, select bank0
   706  066B  0821               	movf	showContent@arr_2,w
   707  066C  120A  118A  25A4  120A  118A  	fcall	_lcd_puts
   708  0671                     l1089:
   709                           
   710                           ;newmain.c: 31:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   711  0671  300B               	movlw	11
   712  0672  1283               	bcf	3,5	;RP0=0, select bank0
   713  0673  1303               	bcf	3,6	;RP1=0, select bank0
   714  0674  00A4               	movwf	??_showContent+2
   715  0675  3026               	movlw	38
   716  0676  00A3               	movwf	??_showContent+1
   717  0677  305D               	movlw	93
   718  0678  00A2               	movwf	??_showContent
   719  0679                     u587:
   720  0679  0BA2               	decfsz	??_showContent,f
   721  067A  2E79               	goto	u587
   722  067B  0BA3               	decfsz	??_showContent+1,f
   723  067C  2E79               	goto	u587
   724  067D  0BA4               	decfsz	??_showContent+2,f
   725  067E  2E79               	goto	u587
   726  067F                     l13:
   727  067F  0008               	return
   728  0680                     __end_of_showContent:
   729                           
   730                           	psect	text2
   731  05A4                     __ptext2:	
   732 ;; *************** function _lcd_puts *****************
   733 ;; Defined at:
   734 ;;		line 224 in file "lcd.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  s               1    wreg     PTR const unsigned char 
   737 ;;		 -> main@class(13), main@HKTT(13), main@your_live(16), main@your_born(17), 
   738 ;;		 -> main@MSSV(14), main@your_name(16), 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  s               1    0[BANK0 ] PTR const unsigned char 
   741 ;;		 -> main@class(13), main@HKTT(13), main@your_live(16), main@your_born(17), 
   742 ;;		 -> main@MSSV(14), main@your_name(16), 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         0       1       0       0       0
   754 ;;      Temps:          1       0       0       0       0
   755 ;;      Totals:         1       1       0       0       0
   756 ;;Total ram usage:        2 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 4
   759 ;; This function calls:
   760 ;;		_lcd_putc
   761 ;; This function is called by:
   762 ;;		_showContent
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _lcd_puts
   768  05A4                     _lcd_puts:
   769                           
   770                           ;incstack = 0
   771                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   772                           ;lcd_puts@s stored from wreg
   773  05A4  1283               	bcf	3,5	;RP0=0, select bank0
   774  05A5  1303               	bcf	3,6	;RP1=0, select bank0
   775  05A6  00A0               	movwf	lcd_puts@s
   776  05A7                     l1073:
   777                           
   778                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   779  05A7  2DBA               	goto	l1079
   780  05A8                     l1075:
   781                           
   782                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   783  05A8  0820               	movf	lcd_puts@s,w
   784  05A9  0084               	movwf	4
   785  05AA  120A  118A  2003  120A  118A  	fcall	stringdir
   786  05AF  120A  118A  26FD  120A  118A  	fcall	_lcd_putc
   787  05B4                     l1077:
   788  05B4  3001               	movlw	1
   789  05B5  00FD               	movwf	??_lcd_puts
   790  05B6  087D               	movf	??_lcd_puts,w
   791  05B7  1283               	bcf	3,5	;RP0=0, select bank0
   792  05B8  1303               	bcf	3,6	;RP1=0, select bank0
   793  05B9  07A0               	addwf	lcd_puts@s,f
   794  05BA                     l1079:
   795                           
   796                           ;lcd.c: 229:  while(*s)
   797  05BA  0820               	movf	lcd_puts@s,w
   798  05BB  0084               	movwf	4
   799  05BC  120A  118A  2003  120A  118A  	fcall	stringdir
   800  05C1  3A00               	xorlw	0
   801  05C2  1D03               	skipz
   802  05C3  2DC5               	goto	u491
   803  05C4  2DC6               	goto	u490
   804  05C5                     u491:
   805  05C5  2DA8               	goto	l1075
   806  05C6                     u490:
   807  05C6                     l108:
   808  05C6  0008               	return
   809  05C7                     __end_of_lcd_puts:
   810                           
   811                           	psect	text3
   812  06FD                     __ptext3:	
   813 ;; *************** function _lcd_putc *****************
   814 ;; Defined at:
   815 ;;		line 190 in file "lcd.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  c               1    wreg     unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  c               1   12[COMMON] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0
   831 ;;      Temps:          2       0       0       0       0
   832 ;;      Totals:         3       0       0       0       0
   833 ;;Total ram usage:        3 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 3
   836 ;; This function calls:
   837 ;;		_lcd_busy
   838 ;;		_lcd_gotoxy
   839 ;;		_lcd_put_byte
   840 ;; This function is called by:
   841 ;;		_showContent
   842 ;;		_lcd_puts
   843 ;;		_lcd_String_Delay
   844 ;;		_putch
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _lcd_putc
   850  06FD                     _lcd_putc:
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   854                           ;lcd_putc@c stored from wreg
   855  06FD  00FC               	movwf	lcd_putc@c
   856  06FE                     l1051:
   857                           
   858                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   859  06FE  2F45               	goto	l1067
   860  06FF                     l1053:
   861                           
   862                           ;lcd.c: 198:    lcd_put_byte(0,1);
   863  06FF  01F3               	clrf	lcd_put_byte@b
   864  0700  0AF3               	incf	lcd_put_byte@b,f
   865  0701  3000               	movlw	0
   866  0702  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
   867  0707                     l1055:	
   868                           ;lcd.c: 199:    while(lcd_busy());
   869                           
   870  0707  120A  118A  2619  120A  118A  	fcall	_lcd_busy
   871  070C  3A00               	xorlw	0
   872  070D  1D03               	skipz
   873  070E  2F10               	goto	u461
   874  070F  2F11               	goto	u460
   875  0710                     u461:
   876  0710  2F07               	goto	l1055
   877  0711                     u460:
   878  0711  2F58               	goto	l102
   879  0712                     l1057:
   880                           
   881                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   882  0712  01F6               	clrf	lcd_gotoxy@row
   883  0713  0AF6               	incf	lcd_gotoxy@row,f
   884  0714  3000               	movlw	0
   885  0715  120A  118A  25C7  120A  118A  	fcall	_lcd_gotoxy
   886                           
   887                           ;lcd.c: 203:    break;
   888  071A  2F58               	goto	l102
   889  071B                     l1059:
   890                           
   891                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   892  071B  3010               	movlw	16
   893  071C  00FA               	movwf	??_lcd_putc
   894  071D  087A               	movf	??_lcd_putc,w
   895  071E  00F3               	movwf	lcd_put_byte@b
   896  071F  3000               	movlw	0
   897  0720  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
   898  0725                     l1061:	
   899                           ;lcd.c: 206:    while(lcd_busy());
   900                           
   901  0725  120A  118A  2619  120A  118A  	fcall	_lcd_busy
   902  072A  3A00               	xorlw	0
   903  072B  1D03               	skipz
   904  072C  2F2E               	goto	u471
   905  072D  2F2F               	goto	u470
   906  072E                     u471:
   907  072E  2F25               	goto	l1061
   908  072F                     u470:
   909  072F  2F58               	goto	l102
   910  0730                     l1063:
   911                           
   912                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   913  0730  087C               	movf	lcd_putc@c,w
   914  0731  00FA               	movwf	??_lcd_putc
   915  0732  087A               	movf	??_lcd_putc,w
   916  0733  00F3               	movwf	lcd_put_byte@b
   917  0734  3001               	movlw	1
   918  0735  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
   919  073A                     l1065:	
   920                           ;lcd.c: 212:     while(lcd_busy());
   921                           
   922  073A  120A  118A  2619  120A  118A  	fcall	_lcd_busy
   923  073F  3A00               	xorlw	0
   924  0740  1D03               	skipz
   925  0741  2F43               	goto	u481
   926  0742  2F44               	goto	u480
   927  0743                     u481:
   928  0743  2F3A               	goto	l1065
   929  0744                     u480:
   930  0744  2F58               	goto	l102
   931  0745                     l1067:
   932  0745  087C               	movf	lcd_putc@c,w
   933  0746  00FA               	movwf	??_lcd_putc
   934  0747  01FB               	clrf	??_lcd_putc+1
   935                           
   936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   937                           ; Switch size 1, requested type "simple"
   938                           ; Number of cases is 1, Range of values is 0 to 0
   939                           ; switch strategies available:
   940                           ; Name         Instructions Cycles
   941                           ; simple_byte            4     3 (average)
   942                           ; direct_byte           11     8 (fixed)
   943                           ; jumptable            260     6 (fixed)
   944                           ;	Chosen strategy is simple_byte
   945  0748  087B               	movf	??_lcd_putc+1,w
   946  0749  3A00               	xorlw	0	; case 0
   947  074A  1903               	skipnz
   948  074B  2F4D               	goto	l1191
   949  074C  2F30               	goto	l1063
   950  074D                     l1191:
   951                           
   952                           ; Switch size 1, requested type "simple"
   953                           ; Number of cases is 3, Range of values is 8 to 12
   954                           ; switch strategies available:
   955                           ; Name         Instructions Cycles
   956                           ; simple_byte           10     6 (average)
   957                           ; direct_byte           26    11 (fixed)
   958                           ; jumptable            263     9 (fixed)
   959                           ;	Chosen strategy is simple_byte
   960  074D  087A               	movf	??_lcd_putc,w
   961  074E  3A08               	xorlw	8	; case 8
   962  074F  1903               	skipnz
   963  0750  2F1B               	goto	l1059
   964  0751  3A02               	xorlw	2	; case 10
   965  0752  1903               	skipnz
   966  0753  2F12               	goto	l1057
   967  0754  3A06               	xorlw	6	; case 12
   968  0755  1903               	skipnz
   969  0756  2EFF               	goto	l1053
   970  0757  2F30               	goto	l1063
   971  0758                     l102:
   972  0758  0008               	return
   973  0759                     __end_of_lcd_putc:
   974                           
   975                           	psect	text4
   976  05C7                     __ptext4:	
   977 ;; *************** function _lcd_gotoxy *****************
   978 ;; Defined at:
   979 ;;		line 167 in file "lcd.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  col             1    wreg     unsigned char 
   982 ;;  row             1    6[COMMON] unsigned char 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  col             1    8[COMMON] unsigned char 
   985 ;;  address         1    9[COMMON] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         1       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0
   997 ;;      Temps:          1       0       0       0       0
   998 ;;      Totals:         4       0       0       0       0
   999 ;;Total ram usage:        4 bytes
  1000 ;; Hardware stack levels used: 1
  1001 ;; Hardware stack levels required when called: 2
  1002 ;; This function calls:
  1003 ;;		_lcd_busy
  1004 ;;		_lcd_put_byte
  1005 ;; This function is called by:
  1006 ;;		_showContent
  1007 ;;		_lcd_putc
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _lcd_gotoxy
  1013  05C7                     _lcd_gotoxy:
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1017                           ;lcd_gotoxy@col stored from wreg
  1018  05C7  00F8               	movwf	lcd_gotoxy@col
  1019  05C8                     l1039:
  1020                           
  1021                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1022  05C8  0876               	movf	lcd_gotoxy@row,w
  1023  05C9  1903               	btfsc	3,2
  1024  05CA  2DCC               	goto	u441
  1025  05CB  2DCD               	goto	u440
  1026  05CC                     u441:
  1027  05CC  2DD2               	goto	l1043
  1028  05CD                     u440:
  1029  05CD                     l1041:
  1030                           
  1031                           ;lcd.c: 174:   address=0x40;
  1032  05CD  3040               	movlw	64
  1033  05CE  00F7               	movwf	??_lcd_gotoxy
  1034  05CF  0877               	movf	??_lcd_gotoxy,w
  1035  05D0  00F9               	movwf	lcd_gotoxy@address
  1036  05D1  2DD3               	goto	l1045
  1037  05D2                     l1043:
  1038                           
  1039                           ;lcd.c: 176:   address=0;
  1040  05D2  01F9               	clrf	lcd_gotoxy@address
  1041  05D3                     l1045:
  1042                           
  1043                           ;lcd.c: 178:  address += col;
  1044  05D3  0878               	movf	lcd_gotoxy@col,w
  1045  05D4  00F7               	movwf	??_lcd_gotoxy
  1046  05D5  0877               	movf	??_lcd_gotoxy,w
  1047  05D6  07F9               	addwf	lcd_gotoxy@address,f
  1048  05D7                     l1047:
  1049                           
  1050                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1051  05D7  0879               	movf	lcd_gotoxy@address,w
  1052  05D8  3880               	iorlw	128
  1053  05D9  00F7               	movwf	??_lcd_gotoxy
  1054  05DA  0877               	movf	??_lcd_gotoxy,w
  1055  05DB  00F3               	movwf	lcd_put_byte@b
  1056  05DC  3000               	movlw	0
  1057  05DD  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1058  05E2                     l1049:	
  1059                           ;lcd.c: 181:  while(lcd_busy());
  1060                           
  1061  05E2  120A  118A  2619  120A  118A  	fcall	_lcd_busy
  1062  05E7  3A00               	xorlw	0
  1063  05E8  1D03               	skipz
  1064  05E9  2DEB               	goto	u451
  1065  05EA  2DEC               	goto	u450
  1066  05EB                     u451:
  1067  05EB  2DE2               	goto	l1049
  1068  05EC                     u450:
  1069  05EC                     l84:
  1070  05EC  0008               	return
  1071  05ED                     __end_of_lcd_gotoxy:
  1072                           
  1073                           	psect	text5
  1074  0759                     __ptext5:	
  1075 ;; *************** function _lcd_init *****************
  1076 ;; Defined at:
  1077 ;;		line 241 in file "lcd.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  i               1    0        unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0
  1093 ;;      Temps:          2       0       0       0       0
  1094 ;;      Totals:         2       0       0       0       0
  1095 ;;Total ram usage:        2 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 2
  1098 ;; This function calls:
  1099 ;;		_lcd_busy
  1100 ;;		_lcd_put_byte
  1101 ;;		_lcd_put_nibble
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _lcd_init
  1109  0759                     _lcd_init:
  1110  0759                     l1091:	
  1111                           ;incstack = 0
  1112                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1113                           
  1114                           
  1115                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1116  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1117  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1118  075B  1188               	bcf	8,3	;volatile
  1119                           
  1120                           ;lcd.c: 248:  TRISD1 = 0;
  1121  075C  1088               	bcf	8,1	;volatile
  1122                           
  1123                           ;lcd.c: 249:  TRISD2 = 0;
  1124  075D  1108               	bcf	8,2	;volatile
  1125                           
  1126                           ;lcd.c: 250:  TRISD4 = 0;
  1127  075E  1208               	bcf	8,4	;volatile
  1128                           
  1129                           ;lcd.c: 251:  TRISD5 = 0;
  1130  075F  1288               	bcf	8,5	;volatile
  1131                           
  1132                           ;lcd.c: 252:  TRISD6 = 0;
  1133  0760  1308               	bcf	8,6	;volatile
  1134                           
  1135                           ;lcd.c: 253:  TRISD7 = 0;
  1136  0761  1388               	bcf	8,7	;volatile
  1137  0762                     l1093:
  1138                           
  1139                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1140  0762  3014               	movlw	20
  1141  0763  00F7               	movwf	??_lcd_init+1
  1142  0764  3079               	movlw	121
  1143  0765  00F6               	movwf	??_lcd_init
  1144  0766                     u597:
  1145  0766  0BF6               	decfsz	??_lcd_init,f
  1146  0767  2F66               	goto	u597
  1147  0768  0BF7               	decfsz	??_lcd_init+1,f
  1148  0769  2F66               	goto	u597
  1149  076A  2F6B               	nop2
  1150  076B                     l1095:
  1151                           
  1152                           ;lcd.c: 257:  RD1 = 0;
  1153  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1154  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1155  076D  1088               	bcf	8,1	;volatile
  1156  076E                     l1097:
  1157                           
  1158                           ;lcd.c: 258:  RD2 = 0;
  1159  076E  1108               	bcf	8,2	;volatile
  1160  076F                     l1099:
  1161                           
  1162                           ;lcd.c: 259:  RD3 = 0;
  1163  076F  1188               	bcf	8,3	;volatile
  1164  0770                     l1101:
  1165                           
  1166                           ;lcd.c: 261:  lcd_put_nibble(3);
  1167  0770  3003               	movlw	3
  1168  0771  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1169  0776                     l1103:
  1170                           
  1171                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1172  0776  300D               	movlw	13
  1173  0777  00F7               	movwf	??_lcd_init+1
  1174  0778  30FB               	movlw	251
  1175  0779  00F6               	movwf	??_lcd_init
  1176  077A                     u607:
  1177  077A  0BF6               	decfsz	??_lcd_init,f
  1178  077B  2F7A               	goto	u607
  1179  077C  0BF7               	decfsz	??_lcd_init+1,f
  1180  077D  2F7A               	goto	u607
  1181  077E  2F7F               	nop2
  1182                           
  1183                           ;lcd.c: 263:  lcd_put_nibble(3);
  1184  077F  3003               	movlw	3
  1185  0780  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1186  0785                     l1105:
  1187                           
  1188                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1189  0785  300D               	movlw	13
  1190  0786  00F7               	movwf	??_lcd_init+1
  1191  0787  30FB               	movlw	251
  1192  0788  00F6               	movwf	??_lcd_init
  1193  0789                     u617:
  1194  0789  0BF6               	decfsz	??_lcd_init,f
  1195  078A  2F89               	goto	u617
  1196  078B  0BF7               	decfsz	??_lcd_init+1,f
  1197  078C  2F89               	goto	u617
  1198  078D  2F8E               	nop2
  1199  078E                     l1107:
  1200                           
  1201                           ;lcd.c: 265:  lcd_put_nibble(3);
  1202  078E  3003               	movlw	3
  1203  078F  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1204                           
  1205                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1206  0794  300D               	movlw	13
  1207  0795  00F7               	movwf	??_lcd_init+1
  1208  0796  30FB               	movlw	251
  1209  0797  00F6               	movwf	??_lcd_init
  1210  0798                     u627:
  1211  0798  0BF6               	decfsz	??_lcd_init,f
  1212  0799  2F98               	goto	u627
  1213  079A  0BF7               	decfsz	??_lcd_init+1,f
  1214  079B  2F98               	goto	u627
  1215  079C  2F9D               	nop2
  1216  079D                     l1109:
  1217                           
  1218                           ;lcd.c: 268:  lcd_put_nibble(2);
  1219  079D  3002               	movlw	2
  1220  079E  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1221  07A3                     l1111:	
  1222                           ;lcd.c: 269:  while(lcd_busy());
  1223                           
  1224  07A3  120A  118A  2619  120A  118A  	fcall	_lcd_busy
  1225  07A8  3A00               	xorlw	0
  1226  07A9  1D03               	skipz
  1227  07AA  2FAC               	goto	u501
  1228  07AB  2FAD               	goto	u500
  1229  07AC                     u501:
  1230  07AC  2FA3               	goto	l1111
  1231  07AD                     u500:
  1232  07AD                     l1113:
  1233                           
  1234                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1235  07AD  3028               	movlw	40
  1236  07AE  00F6               	movwf	??_lcd_init
  1237  07AF  0876               	movf	??_lcd_init,w
  1238  07B0  00F3               	movwf	lcd_put_byte@b
  1239  07B1  3000               	movlw	0
  1240  07B2  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1241  07B7                     l1115:	
  1242                           ;lcd.c: 272:  while(lcd_busy());
  1243                           
  1244  07B7  120A  118A  2619  120A  118A  	fcall	_lcd_busy
  1245  07BC  3A00               	xorlw	0
  1246  07BD  1D03               	skipz
  1247  07BE  2FC0               	goto	u511
  1248  07BF  2FC1               	goto	u510
  1249  07C0                     u511:
  1250  07C0  2FB7               	goto	l1115
  1251  07C1                     u510:
  1252  07C1                     l1117:
  1253                           
  1254                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1255  07C1  300C               	movlw	12
  1256  07C2  00F6               	movwf	??_lcd_init
  1257  07C3  0876               	movf	??_lcd_init,w
  1258  07C4  00F3               	movwf	lcd_put_byte@b
  1259  07C5  3000               	movlw	0
  1260  07C6  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1261  07CB                     l1119:	
  1262                           ;lcd.c: 275:  while(lcd_busy());
  1263                           
  1264  07CB  120A  118A  2619  120A  118A  	fcall	_lcd_busy
  1265  07D0  3A00               	xorlw	0
  1266  07D1  1D03               	skipz
  1267  07D2  2FD4               	goto	u521
  1268  07D3  2FD5               	goto	u520
  1269  07D4                     u521:
  1270  07D4  2FCB               	goto	l1119
  1271  07D5                     u520:
  1272  07D5                     l1121:
  1273                           
  1274                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1275  07D5  01F3               	clrf	lcd_put_byte@b
  1276  07D6  0AF3               	incf	lcd_put_byte@b,f
  1277  07D7  3000               	movlw	0
  1278  07D8  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1279  07DD                     l1123:	
  1280                           ;lcd.c: 278:  while(lcd_busy());
  1281                           
  1282  07DD  120A  118A  2619  120A  118A  	fcall	_lcd_busy
  1283  07E2  3A00               	xorlw	0
  1284  07E3  1D03               	skipz
  1285  07E4  2FE6               	goto	u531
  1286  07E5  2FE7               	goto	u530
  1287  07E6                     u531:
  1288  07E6  2FDD               	goto	l1123
  1289  07E7                     u530:
  1290  07E7                     l1125:
  1291                           
  1292                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1293  07E7  3006               	movlw	6
  1294  07E8  00F6               	movwf	??_lcd_init
  1295  07E9  0876               	movf	??_lcd_init,w
  1296  07EA  00F3               	movwf	lcd_put_byte@b
  1297  07EB  3000               	movlw	0
  1298  07EC  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1299  07F1                     l1127:	
  1300                           ;lcd.c: 281:  while(lcd_busy());
  1301                           
  1302  07F1  120A  118A  2619  120A  118A  	fcall	_lcd_busy
  1303  07F6  3A00               	xorlw	0
  1304  07F7  1D03               	skipz
  1305  07F8  2FFA               	goto	u541
  1306  07F9  2FFB               	goto	u540
  1307  07FA                     u541:
  1308  07FA  2FF1               	goto	l1127
  1309  07FB                     u540:
  1310  07FB                     l126:
  1311  07FB  0008               	return
  1312  07FC                     __end_of_lcd_init:
  1313                           
  1314                           	psect	text6
  1315  0680                     __ptext6:	
  1316 ;; *************** function _lcd_put_byte *****************
  1317 ;; Defined at:
  1318 ;;		line 134 in file "lcd.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  rs              1    wreg     unsigned char 
  1321 ;;  b               1    3[COMMON] unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  rs              1    5[COMMON] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0, pclath, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         1       0       0       0       0
  1334 ;;      Locals:         1       0       0       0       0
  1335 ;;      Temps:          1       0       0       0       0
  1336 ;;      Totals:         3       0       0       0       0
  1337 ;;Total ram usage:        3 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 1
  1340 ;; This function calls:
  1341 ;;		_lcd_put_nibble
  1342 ;; This function is called by:
  1343 ;;		_lcd_gotoxy
  1344 ;;		_lcd_putc
  1345 ;;		_lcd_init
  1346 ;;		_lcd_ShiftLeft
  1347 ;;		_lcd_ShiftRight
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _lcd_put_byte
  1353  0680                     _lcd_put_byte:
  1354                           
  1355                           ;incstack = 0
  1356                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1357                           ;lcd_put_byte@rs stored from wreg
  1358  0680  00F5               	movwf	lcd_put_byte@rs
  1359  0681                     l1023:
  1360                           
  1361                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1362  0681  1683               	bsf	3,5	;RP0=1, select bank1
  1363  0682  1303               	bcf	3,6	;RP1=0, select bank1
  1364  0683  1208               	bcf	8,4	;volatile
  1365                           
  1366                           ;lcd.c: 140:  TRISD5 = 0;
  1367  0684  1288               	bcf	8,5	;volatile
  1368                           
  1369                           ;lcd.c: 141:  TRISD6 = 0;
  1370  0685  1308               	bcf	8,6	;volatile
  1371                           
  1372                           ;lcd.c: 142:  TRISD7 = 0;
  1373  0686  1388               	bcf	8,7	;volatile
  1374  0687                     l1025:
  1375                           
  1376                           ;lcd.c: 144:  if(rs)
  1377  0687  0875               	movf	lcd_put_byte@rs,w
  1378  0688  1903               	btfsc	3,2
  1379  0689  2E8B               	goto	u421
  1380  068A  2E8C               	goto	u420
  1381  068B                     u421:
  1382  068B  2E90               	goto	l74
  1383  068C                     u420:
  1384  068C                     l1027:
  1385                           
  1386                           ;lcd.c: 145:   RD1 = 1;
  1387  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1388  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1389  068E  1488               	bsf	8,1	;volatile
  1390  068F  2E93               	goto	l1029
  1391  0690                     l74:	
  1392                           ;lcd.c: 146:  else
  1393                           
  1394                           
  1395                           ;lcd.c: 147:   RD1 = 0;
  1396  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0692  1088               	bcf	8,1	;volatile
  1399  0693                     l1029:
  1400                           
  1401                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1402  0693  3006               	movlw	6
  1403  0694  00F4               	movwf	??_lcd_put_byte
  1404  0695                     u637:
  1405  0695  0BF4               	decfsz	??_lcd_put_byte,f
  1406  0696  2E95               	goto	u637
  1407  0697  0000               	nop
  1408  0698                     l1031:
  1409                           
  1410                           ;lcd.c: 150:  RD2 = 0;
  1411  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1413  069A  1108               	bcf	8,2	;volatile
  1414                           
  1415                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1416  069B  3006               	movlw	6
  1417  069C  00F4               	movwf	??_lcd_put_byte
  1418  069D                     u647:
  1419  069D  0BF4               	decfsz	??_lcd_put_byte,f
  1420  069E  2E9D               	goto	u647
  1421  069F  0000               	nop
  1422  06A0                     l1033:
  1423                           
  1424                           ;lcd.c: 153:  RD3 = 0;
  1425  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1426  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1427  06A2  1188               	bcf	8,3	;volatile
  1428  06A3                     l1035:
  1429                           
  1430                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1431  06A3  0873               	movf	lcd_put_byte@b,w
  1432  06A4  00F4               	movwf	??_lcd_put_byte
  1433  06A5  3004               	movlw	4
  1434  06A6                     u435:
  1435  06A6  1003               	clrc
  1436  06A7  0CF4               	rrf	??_lcd_put_byte,f
  1437  06A8  3EFF               	addlw	-1
  1438  06A9  1D03               	skipz
  1439  06AA  2EA6               	goto	u435
  1440  06AB  0874               	movf	??_lcd_put_byte,w
  1441  06AC  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1442  06B1                     l1037:
  1443                           
  1444                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1445  06B1  0873               	movf	lcd_put_byte@b,w
  1446  06B2  390F               	andlw	15
  1447  06B3  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1448  06B8                     l76:
  1449  06B8  0008               	return
  1450  06B9                     __end_of_lcd_put_byte:
  1451                           
  1452                           	psect	text7
  1453  06B9                     __ptext7:	
  1454 ;; *************** function _lcd_put_nibble *****************
  1455 ;; Defined at:
  1456 ;;		line 103 in file "lcd.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  b               1    wreg     unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  b               1    1[COMMON] unsigned char 
  1461 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       0       0       0
  1472 ;;      Locals:         2       0       0       0       0
  1473 ;;      Temps:          1       0       0       0       0
  1474 ;;      Totals:         3       0       0       0       0
  1475 ;;Total ram usage:        3 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_lcd_put_byte
  1481 ;;		_lcd_init
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function _lcd_put_nibble
  1487  06B9                     _lcd_put_nibble:
  1488                           
  1489                           ;incstack = 0
  1490                           ; Regs used in _lcd_put_nibble: [wreg]
  1491                           ;lcd_put_nibble@b stored from wreg
  1492  06B9  00F1               	movwf	lcd_put_nibble@b
  1493  06BA                     l985:
  1494                           
  1495                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1496  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  1497  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  1498  06BC  1208               	bcf	8,4	;volatile
  1499                           
  1500                           ;lcd.c: 110:  TRISD5 = 0;
  1501  06BD  1288               	bcf	8,5	;volatile
  1502                           
  1503                           ;lcd.c: 111:  TRISD6 = 0;
  1504  06BE  1308               	bcf	8,6	;volatile
  1505                           
  1506                           ;lcd.c: 112:  TRISD7 = 0;
  1507  06BF  1388               	bcf	8,7	;volatile
  1508  06C0                     l987:
  1509                           
  1510                           ;lcd.c: 114:  temp.Val = b;
  1511  06C0  0871               	movf	lcd_put_nibble@b,w
  1512  06C1  00F0               	movwf	??_lcd_put_nibble
  1513  06C2  0870               	movf	??_lcd_put_nibble,w
  1514  06C3  00F2               	movwf	lcd_put_nibble@temp
  1515  06C4                     l989:
  1516                           
  1517                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1518  06C4  1872               	btfsc	lcd_put_nibble@temp,0
  1519  06C5  2EC7               	goto	u341
  1520  06C6  2ECB               	goto	u340
  1521  06C7                     u341:
  1522  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1523  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1524  06C9  1608               	bsf	8,4	;volatile
  1525  06CA  2ECE               	goto	u354
  1526  06CB                     u340:
  1527  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1528  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1529  06CD  1208               	bcf	8,4	;volatile
  1530  06CE                     u354:
  1531  06CE                     l991:
  1532                           
  1533                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1534  06CE  18F2               	btfsc	lcd_put_nibble@temp,1
  1535  06CF  2ED1               	goto	u361
  1536  06D0  2ED5               	goto	u360
  1537  06D1                     u361:
  1538  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1539  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1540  06D3  1688               	bsf	8,5	;volatile
  1541  06D4  2ED8               	goto	u374
  1542  06D5                     u360:
  1543  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1544  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1545  06D7  1288               	bcf	8,5	;volatile
  1546  06D8                     u374:
  1547  06D8                     l993:
  1548                           
  1549                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1550  06D8  1972               	btfsc	lcd_put_nibble@temp,2
  1551  06D9  2EDB               	goto	u381
  1552  06DA  2EDF               	goto	u380
  1553  06DB                     u381:
  1554  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1555  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1556  06DD  1708               	bsf	8,6	;volatile
  1557  06DE  2EE2               	goto	u394
  1558  06DF                     u380:
  1559  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1560  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1561  06E1  1308               	bcf	8,6	;volatile
  1562  06E2                     u394:
  1563  06E2                     l995:
  1564                           
  1565                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1566  06E2  19F2               	btfsc	lcd_put_nibble@temp,3
  1567  06E3  2EE5               	goto	u401
  1568  06E4  2EE9               	goto	u400
  1569  06E5                     u401:
  1570  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1571  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1572  06E7  1788               	bsf	8,7	;volatile
  1573  06E8  2EEC               	goto	u414
  1574  06E9                     u400:
  1575  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1576  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1577  06EB  1388               	bcf	8,7	;volatile
  1578  06EC                     u414:
  1579                           
  1580                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1581  06EC  3006               	movlw	6
  1582  06ED  00F0               	movwf	??_lcd_put_nibble
  1583  06EE                     u657:
  1584  06EE  0BF0               	decfsz	??_lcd_put_nibble,f
  1585  06EF  2EEE               	goto	u657
  1586  06F0  0000               	nop
  1587  06F1                     l997:
  1588                           
  1589                           ;lcd.c: 122:  RD3 = 1;
  1590  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1591  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1592  06F3  1588               	bsf	8,3	;volatile
  1593                           
  1594                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1595  06F4  3006               	movlw	6
  1596  06F5  00F0               	movwf	??_lcd_put_nibble
  1597  06F6                     u667:
  1598  06F6  0BF0               	decfsz	??_lcd_put_nibble,f
  1599  06F7  2EF6               	goto	u667
  1600  06F8  0000               	nop
  1601  06F9                     l999:
  1602                           
  1603                           ;lcd.c: 124:  RD3 = 0;
  1604  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1605  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1606  06FB  1188               	bcf	8,3	;volatile
  1607  06FC                     l71:
  1608  06FC  0008               	return
  1609  06FD                     __end_of_lcd_put_nibble:
  1610                           
  1611                           	psect	text8
  1612  0619                     __ptext8:	
  1613 ;; *************** function _lcd_busy *****************
  1614 ;; Defined at:
  1615 ;;		line 18 in file "lcd.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  busy            1    1[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      unsigned char 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         1       0       0       0       0
  1631 ;;      Temps:          1       0       0       0       0
  1632 ;;      Totals:         2       0       0       0       0
  1633 ;;Total ram usage:        2 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_lcd_gotoxy
  1639 ;;		_lcd_putc
  1640 ;;		_lcd_init
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _lcd_busy
  1646  0619                     _lcd_busy:
  1647  0619                     l1001:	
  1648                           ;incstack = 0
  1649                           ; Regs used in _lcd_busy: [wreg+status,2]
  1650                           
  1651                           
  1652                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1653  0619  1683               	bsf	3,5	;RP0=1, select bank1
  1654  061A  1303               	bcf	3,6	;RP1=0, select bank1
  1655  061B  1608               	bsf	8,4	;volatile
  1656                           
  1657                           ;lcd.c: 25:  TRISD5 = 1;
  1658  061C  1688               	bsf	8,5	;volatile
  1659                           
  1660                           ;lcd.c: 26:  TRISD6 = 1;
  1661  061D  1708               	bsf	8,6	;volatile
  1662                           
  1663                           ;lcd.c: 27:  TRISD7 = 1;
  1664  061E  1788               	bsf	8,7	;volatile
  1665                           
  1666                           ;lcd.c: 29:  RD2 = 1;
  1667  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0621  1508               	bsf	8,2	;volatile
  1670                           
  1671                           ;lcd.c: 30:  RD1 = 0;
  1672  0622  1088               	bcf	8,1	;volatile
  1673  0623                     l1003:
  1674                           
  1675                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1676  0623  3006               	movlw	6
  1677  0624  00F0               	movwf	??_lcd_busy
  1678  0625                     u677:
  1679  0625  0BF0               	decfsz	??_lcd_busy,f
  1680  0626  2E25               	goto	u677
  1681  0627  0000               	nop
  1682  0628                     l1005:
  1683                           
  1684                           ;lcd.c: 32:  RD3 = 1;
  1685  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1687  062A  1588               	bsf	8,3	;volatile
  1688                           
  1689                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1690  062B  3006               	movlw	6
  1691  062C  00F0               	movwf	??_lcd_busy
  1692  062D                     u687:
  1693  062D  0BF0               	decfsz	??_lcd_busy,f
  1694  062E  2E2D               	goto	u687
  1695  062F  0000               	nop
  1696  0630                     l1007:
  1697                           
  1698                           ;lcd.c: 35:  busy = RD7;
  1699  0630  3000               	movlw	0
  1700  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0633  1B88               	btfsc	8,7	;volatile
  1703  0634  3001               	movlw	1
  1704  0635  00F1               	movwf	lcd_busy@busy
  1705  0636                     l1009:
  1706                           
  1707                           ;lcd.c: 37:  RD3 = 0;
  1708  0636  1188               	bcf	8,3	;volatile
  1709  0637                     l1011:
  1710                           
  1711                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1712  0637  3006               	movlw	6
  1713  0638  00F0               	movwf	??_lcd_busy
  1714  0639                     u697:
  1715  0639  0BF0               	decfsz	??_lcd_busy,f
  1716  063A  2E39               	goto	u697
  1717  063B  0000               	nop
  1718  063C                     l1013:
  1719                           
  1720                           ;lcd.c: 39:  RD3 = 1;
  1721  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1722  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1723  063E  1588               	bsf	8,3	;volatile
  1724  063F                     l1015:
  1725                           
  1726                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1727  063F  3006               	movlw	6
  1728  0640  00F0               	movwf	??_lcd_busy
  1729  0641                     u707:
  1730  0641  0BF0               	decfsz	??_lcd_busy,f
  1731  0642  2E41               	goto	u707
  1732  0643  0000               	nop
  1733  0644                     l1017:
  1734                           
  1735                           ;lcd.c: 41:  RD3 = 0;
  1736  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0646  1188               	bcf	8,3	;volatile
  1739  0647                     l1019:
  1740                           
  1741                           ;lcd.c: 43:  return busy;
  1742  0647  0871               	movf	lcd_busy@busy,w
  1743  0648                     l63:
  1744  0648  0008               	return
  1745  0649                     __end_of_lcd_busy:
  1746  007E                     btemp	set	126	;btemp
  1747  007E                     wtemp0	set	126
  1748                           
  1749                           	psect	config
  1750                           
  1751                           ;Config register CONFIG1 @ 0x2007
  1752                           ;	Oscillator Selection bits
  1753                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1754                           ;	Watchdog Timer Enable bit
  1755                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1756                           ;	Power-up Timer Enable bit
  1757                           ;	PWRTE = OFF, PWRT disabled
  1758                           ;	RE3/MCLR pin function select bit
  1759                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1760                           ;	Code Protection bit
  1761                           ;	CP = OFF, Program memory code protection is disabled
  1762                           ;	Data Code Protection bit
  1763                           ;	CPD = OFF, Data memory code protection is disabled
  1764                           ;	Brown Out Reset Selection bits
  1765                           ;	BOREN = OFF, BOR disabled
  1766                           ;	Internal External Switchover bit
  1767                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1768                           ;	Fail-Safe Clock Monitor Enabled bit
  1769                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1770                           ;	Low Voltage Programming Enable bit
  1771                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1772                           ;	In-Circuit Debugger Mode bit
  1773                           ;	DEBUG = 0x1, unprogrammed default
  1774  2007                     	org	8199
  1775  2007  20F2               	dw	8434
  1776                           
  1777                           ;Config register CONFIG2 @ 0x2008
  1778                           ;	Brown-out Reset Selection bit
  1779                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1780                           ;	Flash Program Memory Self Write Enable bits
  1781                           ;	WRT = OFF, Write protection off
  1782  2008                     	org	8200
  1783  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    89
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[13]), main@HKTT(CODE[13]), main@your_live(CODE[16]), main@your_born(CODE[17]), 
		 -> main@MSSV(CODE[14]), main@your_name(CODE[16]), 

    showContent@arr_2	PTR unsigned char  size(1) Largest target is 16
		 -> main@class(CODE[13]), main@your_live(CODE[16]), main@MSSV(CODE[14]), 

    showContent@arr_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@HKTT(CODE[13]), main@your_born(CODE[17]), main@your_name(CODE[16]), 


Critical Paths under _main in COMMON

    _showContent->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_showContent
    _showContent->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7332
                                              6 BANK0      1     1      0
                           _lcd_init
                        _showContent
 ---------------------------------------------------------------------------------
 (1) _showContent                                          5     4      1    6261
                                              1 BANK0      5     4      1
                         _lcd_gotoxy
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     2      0    2372
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             3     3      0    2261
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           4     3      1    1257
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1071
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_byte                                         3     2      1     937
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
     _lcd_put_nibble
   _showContent
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
       _lcd_put_byte
     _lcd_puts
       _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 04 21:25:00 2021

                      pc 0002                       l13 067F                       l30 0616  
                     l63 0648                       l71 06FC                       l74 0690  
                     l76 06B8                       l84 05EC   __end_of_lcd_put_nibble 06FD  
                     fsr 0004            ?_lcd_put_byte 0073                      l102 0758  
                    l108 05C6                      l126 07FB                      l991 06CE  
                    l993 06D8                      l985 06BA                      l995 06E2  
                    l987 06C0                      l997 06F1                      l989 06C4  
                    l999 06F9                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u400 06E9  
                    u401 06E5                      u340 06CB                      u420 068C  
                    u500 07AD                      u341 06C7                      u421 068B  
                    u501 07AC                      u414 06EC                      u510 07C1  
                    u511 07C0                      u360 06D5                      u520 07D5  
                    u440 05CD                      u361 06D1                      u521 07D4  
                    u441 05CC                      u354 06CE                      u530 07E7  
                    u450 05EC                      u435 06A6                      u531 07E6  
                    u451 05EB                      u380 06DF                      u540 07FB  
                    u460 0711                      u381 06DB                      u541 07FA  
                    u461 0710                      u374 06D8                      u470 072F  
                    u607 077A                      u471 072E                      u480 0744  
                    u617 0789                      u481 0743                      u394 06E2  
                    u490 05C6                      u707 0641                      u627 0798  
                    u491 05C5                      u637 0695                      u647 069D  
                    u657 06EE                      u667 06F6                      u587 0679  
                    u677 0625                      u597 0766                      u687 062D  
                    u697 0639                      fsr0 0004                     l1001 0619  
                   l1011 0637                     l1003 0623                     l1013 063C  
                   l1005 0628                     l1101 0770                     l1015 063F  
                   l1007 0630                     l1031 0698                     l1023 0681  
                   l1111 07A3                     l1103 0776                     l1017 0644  
                   l1009 0636                     l1033 06A0                     l1025 0687  
                   l1121 07D5                     l1113 07AD                     l1105 0785  
                   l1041 05CD                     l1019 0647                     l1035 06A3  
                   l1027 068C                     l1123 07DD                     l1115 07B7  
                   l1107 078E                     l1043 05D2                     l1051 06FE  
                   l1037 06B1                     l1029 0693                     l1125 07E7  
                   l1117 07C1                     l1109 079D                     l1045 05D3  
                   l1061 0725                     l1053 06FF                     l1133 05ED  
                   l1127 07F1                     l1119 07CB                     l1047 05D7  
                   l1039 05C8                     l1063 0730                     l1055 0707  
                   l1135 05F2                     l1049 05E2                     l1065 073A  
                   l1057 0712                     l1073 05A7                     l1081 064C  
                   l1137 05FE                     l1091 0759                     l1059 071B  
                   l1067 0745                     l1075 05A8                     l1083 0652  
                   l1139 060A                     l1093 0762                     l1077 05B4  
                   l1085 0659                     l1095 076B                     l1191 074D  
                   l1079 05BA                     l1087 0669                     l1097 076E  
                   l1089 0671                     l1099 076F                     _main 05ED  
           lcd_busy@busy 0071                     btemp 007E                     start 0000  
        ?_lcd_put_nibble 0070           ??_lcd_put_byte 0074                    ?_main 0070  
       showContent@arr_1 0025         showContent@arr_2 0021                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0619            lcd_gotoxy@col 0078            lcd_gotoxy@row 0076  
     lcd_put_nibble@temp 0072                   ??_main 0026                   _TRISD1 0441  
                 _TRISD2 0442                   _TRISD3 0443                   _TRISD4 0444  
                 _TRISD5 0445                   _TRISD6 0446                   _TRISD7 0447  
       __end_of_lcd_busy 0649         __end_of_lcd_init 07FC         __end_of_lcd_putc 0759  
       __end_of_lcd_puts 05C7             ?_showContent 0021            lcd_put_byte@b 0073  
       __end_ofmain@HKTT 0062         __end_ofmain@MSSV 0048  __end_of__initialization 07FC  
   __end_of_lcd_put_byte 06B9           __pcstackCOMMON 0070            main@your_born 0009  
          main@your_name 002A            main@your_live 001A        lcd_gotoxy@address 0079  
       ??_lcd_put_nibble 0070               __pmaintext 05ED               _lcd_gotoxy 05C7  
              ?_lcd_busy 0070                ?_lcd_init 0070                ?_lcd_putc 0070  
              ?_lcd_puts 0070               __stringtab 0003                  __ptext1 0649  
                __ptext2 05A4                  __ptext3 06FD                  __ptext4 05C7  
                __ptext5 0759                  __ptext6 0680                  __ptext7 06B9  
                __ptext8 0619     __size_of_showContent 0037    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
      __end_ofmain@class 0055             _lcd_put_byte 0680              ?_lcd_gotoxy 0076  
    start_initialization 07FC      __size_of_lcd_gotoxy 0026                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_busy 0030        __size_of_lcd_init 00A3  
      __size_of_lcd_putc 005C        __size_of_lcd_puts 0023                __pstrings 0003  
          ??_showContent 0022              __stringbase 0008  __size_of_lcd_put_nibble 0044  
              main@class 0048                lcd_putc@c 007C                lcd_puts@s 0020  
           ??_lcd_gotoxy 0077    __end_ofmain@your_born 001A    __end_ofmain@your_name 003A  
  __end_ofmain@your_live 002A       __end_of_lcd_gotoxy 05ED       __end_of__stringtab 0009  
    __end_of_showContent 0680                 _lcd_busy 0619                 _lcd_init 0759  
               _lcd_putc 06FD                 _lcd_puts 05A4            __size_of_main 002C  
               main@HKTT 0055                 main@MSSV 003A          lcd_put_nibble@b 0071  
              stringcode 0003              _showContent 0649           _lcd_put_nibble 06B9  
               stringdir 0003                 stringtab 0003  
