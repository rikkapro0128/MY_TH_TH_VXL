

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 10 17:21:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	strings
   294  0003                     __pstrings:
   295  0003                     stringtab:
   296  0003                     __stringtab:
   297  0003                     stringcode:	
   298                           ;	String table - string pointers are 1 byte each
   299                           
   300  0003                     stringdir:
   301  0003  3000               	movlw	high stringdir
   302  0004  008A               	movwf	10
   303  0005  0804               	movf	4,w
   304  0006  0A84               	incf	4,f
   305  0007  0782               	addwf	2,f
   306  0008                     __stringbase:
   307  0008  3400               	retlw	0
   308  0009                     __end_of__stringtab:
   309  0009                     _dpowers:
   310  0009  3401               	retlw	1
   311  000A  3400               	retlw	0
   312  000B  340A               	retlw	10
   313  000C  3400               	retlw	0
   314  000D  3464               	retlw	100
   315  000E  3400               	retlw	0
   316  000F  34E8               	retlw	232
   317  0010  3403               	retlw	3
   318  0011  3410               	retlw	16
   319  0012  3427               	retlw	39
   320  0013                     __end_of_dpowers:
   321  0013                     main@your_name:
   322  0013  3454               	retlw	84
   323  0014  342E               	retlw	46
   324  0015  3450               	retlw	80
   325  0016  3468               	retlw	104
   326  0017  3461               	retlw	97
   327  0018  3470               	retlw	112
   328  0019  3420               	retlw	32
   329  001A  3443               	retlw	67
   330  001B  346F               	retlw	111
   331  001C  3475               	retlw	117
   332  001D  346E               	retlw	110
   333  001E  3474               	retlw	116
   334  001F  3465               	retlw	101
   335  0020  3472               	retlw	114
   336  0021  3420               	retlw	32
   337  0022  3430               	retlw	48
   338  0023  3400               	retlw	0
   339  0024                     __end_ofmain@your_name:
   340  0001                     _TMR0	set	1
   341  0044                     _RD4	set	68
   342  0045                     _RD5	set	69
   343  0046                     _RD6	set	70
   344  0047                     _RD7	set	71
   345  0043                     _RD3	set	67
   346  0041                     _RD1	set	65
   347  0042                     _RD2	set	66
   348  005D                     _TMR0IE	set	93
   349  005E                     _PEIE	set	94
   350  005F                     _GIE	set	95
   351  005A                     _TMR0IF	set	90
   352  0442                     _TRISD2	set	1090
   353  0441                     _TRISD1	set	1089
   354  0443                     _TRISD3	set	1091
   355  0447                     _TRISD7	set	1095
   356  0446                     _TRISD6	set	1094
   357  0445                     _TRISD5	set	1093
   358  0444                     _TRISD4	set	1092
   359  042C                     _TRISA4	set	1068
   360  040B                     _PSA	set	1035
   361  040C                     _T0SE	set	1036
   362  040D                     _T0CS	set	1037
   363  0189                     _ANSELH	set	393
   364  0188                     _ANSEL	set	392
   365  0024                     STR_2:
   366  0024  3425               	retlw	37	;'%'
   367  0025  3464               	retlw	100	;'d'
   368  0026  3400               	retlw	0
   369  0027                     STR_1:
   370  0027  340C               	retlw	12
   371  0028  3400               	retlw	0
   372                           
   373                           	psect	cinit
   374  07FC                     start_initialization:	
   375                           ; #config settings
   376                           
   377  07FC                     __initialization:
   378  07FC                     end_of_initialization:	
   379                           ;End of C runtime variable initialization code
   380                           
   381  07FC                     __end_of__initialization:
   382  07FC  0183               	clrf	3
   383  07FD  120A  118A  2DDC   	ljmp	_main	;jump to C main() function
   384                           
   385                           	psect	cstackCOMMON
   386  0070                     __pcstackCOMMON:
   387  0070                     ?_lcd_busy:
   388  0070                     ??_lcd_busy:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_lcd_init:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_lcd_putc:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_lcd_puts:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_declarePort:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ??_declarePort:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_main:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_lcd_put_nibble:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ??_lcd_put_nibble:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_putch:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?___lwdiv:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ___lwdiv@divisor:	
   422                           ; 2 bytes @ 0x0
   423                           
   424                           
   425                           ; 2 bytes @ 0x0
   426  0070                     	ds	1
   427  0071                     lcd_busy@busy:
   428  0071                     lcd_put_nibble@b:	
   429                           ; 1 bytes @ 0x1
   430                           
   431                           
   432                           ; 1 bytes @ 0x1
   433  0071                     	ds	1
   434  0072                     lcd_put_nibble@temp:
   435  0072                     ___lwdiv@dividend:	
   436                           ; 1 bytes @ 0x2
   437                           
   438                           
   439                           ; 2 bytes @ 0x2
   440  0072                     	ds	1
   441  0073                     ?_lcd_put_byte:
   442  0073                     lcd_put_byte@b:	
   443                           ; 1 bytes @ 0x3
   444                           
   445                           
   446                           ; 1 bytes @ 0x3
   447  0073                     	ds	1
   448  0074                     ??_lcd_put_byte:
   449  0074                     ??___lwdiv:	
   450                           ; 1 bytes @ 0x4
   451                           
   452                           
   453                           ; 1 bytes @ 0x4
   454  0074                     	ds	1
   455  0075                     lcd_put_byte@rs:
   456  0075                     ___lwdiv@quotient:	
   457                           ; 1 bytes @ 0x5
   458                           
   459                           
   460                           ; 2 bytes @ 0x5
   461  0075                     	ds	1
   462  0076                     ??_lcd_init:
   463  0076                     ?_lcd_gotoxy:	
   464                           ; 1 bytes @ 0x6
   465                           
   466  0076                     lcd_gotoxy@row:	
   467                           ; 1 bytes @ 0x6
   468                           
   469                           
   470                           ; 1 bytes @ 0x6
   471  0076                     	ds	1
   472  0077                     ??_lcd_gotoxy:
   473  0077                     ___lwdiv@counter:	
   474                           ; 1 bytes @ 0x7
   475                           
   476                           
   477                           ; 1 bytes @ 0x7
   478  0077                     	ds	1
   479  0078                     ?___lwmod:
   480  0078                     lcd_gotoxy@col:	
   481                           ; 2 bytes @ 0x8
   482                           
   483  0078                     ___lwmod@divisor:	
   484                           ; 1 bytes @ 0x8
   485                           
   486                           
   487                           ; 2 bytes @ 0x8
   488  0078                     	ds	1
   489  0079                     lcd_gotoxy@address:
   490                           
   491                           ; 1 bytes @ 0x9
   492  0079                     	ds	1
   493  007A                     ??_lcd_putc:
   494  007A                     ___lwmod@dividend:	
   495                           ; 1 bytes @ 0xA
   496                           
   497                           
   498                           ; 2 bytes @ 0xA
   499  007A                     	ds	2
   500  007C                     ??___lwmod:
   501  007C                     lcd_putc@c:	
   502                           ; 1 bytes @ 0xC
   503                           
   504                           
   505                           ; 1 bytes @ 0xC
   506  007C                     	ds	1
   507  007D                     ??_lcd_puts:
   508  007D                     ??_putch:	
   509                           ; 1 bytes @ 0xD
   510                           
   511  007D                     putch@c:	
   512                           ; 1 bytes @ 0xD
   513                           
   514  007D                     ___lwmod@counter:	
   515                           ; 1 bytes @ 0xD
   516                           
   517                           
   518                           ; 1 bytes @ 0xD
   519  007D                     	ds	1
   520                           
   521                           	psect	cstackBANK0
   522  0020                     __pcstackBANK0:
   523  0020                     ?_printf:
   524  0020                     lcd_puts@s:	
   525                           ; 2 bytes @ 0x0
   526                           
   527                           
   528                           ; 1 bytes @ 0x0
   529  0020                     	ds	2
   530  0022                     ??_printf:
   531                           
   532                           ; 1 bytes @ 0x2
   533  0022                     	ds	3
   534  0025                     printf@ap:
   535                           
   536                           ; 1 bytes @ 0x5
   537  0025                     	ds	1
   538  0026                     printf@flag:
   539                           
   540                           ; 1 bytes @ 0x6
   541  0026                     	ds	1
   542  0027                     printf@prec:
   543                           
   544                           ; 1 bytes @ 0x7
   545  0027                     	ds	1
   546  0028                     printf@f:
   547                           
   548                           ; 1 bytes @ 0x8
   549  0028                     	ds	1
   550  0029                     printf@val:
   551                           
   552                           ; 2 bytes @ 0x9
   553  0029                     	ds	2
   554  002B                     printf@c:
   555                           
   556                           ; 1 bytes @ 0xB
   557  002B                     	ds	1
   558  002C                     ??_main:
   559                           
   560                           ; 1 bytes @ 0xC
   561  002C                     	ds	2
   562                           
   563                           	psect	maintext
   564  05DC                     __pmaintext:	
   565 ;;
   566 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   567 ;;
   568 ;; *************** function _main *****************
   569 ;; Defined at:
   570 ;;		line 61 in file "counter0.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  length          2    0        unsigned int 
   575 ;;  i               2    0        unsigned int 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : B00/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0
   587 ;;      Temps:          0       2       0       0       0
   588 ;;      Totals:         0       2       0       0       0
   589 ;;Total ram usage:        2 bytes
   590 ;; Hardware stack levels required when called: 6
   591 ;; This function calls:
   592 ;;		_declarePort
   593 ;;		_lcd_gotoxy
   594 ;;		_lcd_init
   595 ;;		_lcd_putc
   596 ;;		_lcd_puts
   597 ;;		_printf
   598 ;; This function is called by:
   599 ;;		Startup code after reset
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           
   604                           ;psect for function _main
   605  05DC                     _main:
   606  05DC                     l1464:	
   607                           ;incstack = 0
   608                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   609                           
   610                           
   611                           ;counter0.c: 62:     declarePort();
   612  05DC  120A  118A  2456  120A  118A  	fcall	_declarePort
   613  05E1                     l1466:
   614  05E1                     l1468:
   615  05E1                     l1470:
   616                           
   617                           ;counter0.c: 65:     lcd_init();
   618  05E1  120A  118A  267E  120A  118A  	fcall	_lcd_init
   619  05E6                     l65:	
   620                           ;counter0.c: 66:     while(1) {
   621                           
   622                           
   623                           ;counter0.c: 67:         if(TMR0 > 25) {
   624  05E6  301A               	movlw	26
   625  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   626  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   627  05E9  0201               	subwf	1,w	;volatile
   628  05EA  1C03               	skipc
   629  05EB  2DED               	goto	u1031
   630  05EC  2DEE               	goto	u1030
   631  05ED                     u1031:
   632  05ED  2DF4               	goto	l1476
   633  05EE                     u1030:
   634  05EE                     l1472:
   635                           
   636                           ;counter0.c: 68:             TMR0 = 0;
   637  05EE  0181               	clrf	1	;volatile
   638  05EF                     l1474:
   639                           
   640                           ;counter0.c: 69:             lcd_init();
   641  05EF  120A  118A  267E  120A  118A  	fcall	_lcd_init
   642  05F4                     l1476:
   643                           
   644                           ;counter0.c: 71:         lcd_putc("\f");
   645  05F4  301F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   646  05F5  120A  118A  2622  120A  118A  	fcall	_lcd_putc
   647  05FA                     l1478:
   648                           
   649                           ;counter0.c: 72:         lcd_gotoxy(0, 0);
   650  05FA  01F6               	clrf	lcd_gotoxy@row
   651  05FB  3000               	movlw	0
   652  05FC  120A  118A  248B  120A  118A  	fcall	_lcd_gotoxy
   653  0601                     l1480:
   654                           
   655                           ;counter0.c: 73:         lcd_puts(your_name);
   656  0601  300B               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   657  0602  120A  118A  2468  120A  118A  	fcall	_lcd_puts
   658  0607                     l1482:
   659                           
   660                           ;counter0.c: 74:         lcd_gotoxy(7, 1);
   661  0607  01F6               	clrf	lcd_gotoxy@row
   662  0608  0AF6               	incf	lcd_gotoxy@row,f
   663  0609  3007               	movlw	7
   664  060A  120A  118A  248B  120A  118A  	fcall	_lcd_gotoxy
   665  060F                     l1484:
   666                           
   667                           ;counter0.c: 75:         printf("%d", TMR0);
   668  060F  1283               	bcf	3,5	;RP0=0, select bank0
   669  0610  1303               	bcf	3,6	;RP1=0, select bank0
   670  0611  0801               	movf	1,w	;volatile
   671  0612  00AC               	movwf	??_main
   672  0613  01AD               	clrf	??_main+1
   673  0614  082C               	movf	??_main,w
   674  0615  00A0               	movwf	?_printf
   675  0616  082D               	movf	??_main+1,w
   676  0617  00A1               	movwf	?_printf+1
   677  0618  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   678  0619  120A  118A  2721  120A  118A  	fcall	_printf
   679  061E  2DE6               	goto	l65
   680  061F  120A  118A  2800   	ljmp	start
   681  0622                     __end_of_main:
   682                           
   683                           	psect	text1
   684  0721                     __ptext1:	
   685 ;; *************** function _printf *****************
   686 ;; Defined at:
   687 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  f               1    wreg     PTR const unsigned char 
   690 ;;		 -> STR_2(3), 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  f               1    8[BANK0 ] PTR const unsigned char 
   693 ;;		 -> STR_2(3), 
   694 ;;  tmpval          4    0        struct .
   695 ;;  val             2    9[BANK0 ] unsigned int 
   696 ;;  cp              2    0        PTR const unsigned char 
   697 ;;  len             2    0        unsigned int 
   698 ;;  c               1   11[BANK0 ] unsigned char 
   699 ;;  prec            1    7[BANK0 ] char 
   700 ;;  flag            1    6[BANK0 ] unsigned char 
   701 ;;  ap              1    5[BANK0 ] PTR void [1]
   702 ;;		 -> ?_printf(2), 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  2    0[BANK0 ] int 
   705 ;; Registers used:
   706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       2       0       0       0
   713 ;;      Locals:         0       7       0       0       0
   714 ;;      Temps:          0       3       0       0       0
   715 ;;      Totals:         0      12       0       0       0
   716 ;;Total ram usage:       12 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; Hardware stack levels required when called: 5
   719 ;; This function calls:
   720 ;;		___lwdiv
   721 ;;		___lwmod
   722 ;;		_putch
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _printf
   730  0721                     _printf:
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   734                           ;printf@f stored from wreg
   735  0721  1283               	bcf	3,5	;RP0=0, select bank0
   736  0722  1303               	bcf	3,6	;RP1=0, select bank0
   737  0723  00A8               	movwf	printf@f
   738  0724                     l1396:
   739                           
   740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   741  0724  3020               	movlw	(low (?_printf| 0))& (0+255)
   742  0725  00A2               	movwf	??_printf
   743  0726  0822               	movf	??_printf,w
   744  0727  00A5               	movwf	printf@ap
   745                           
   746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   747  0728  2FE7               	goto	l1440
   748  0729                     l1398:
   749                           
   750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   751  0729  3025               	movlw	37
   752  072A  062B               	xorwf	printf@c,w
   753  072B  1903               	btfsc	3,2
   754  072C  2F2E               	goto	u931
   755  072D  2F2F               	goto	u930
   756  072E                     u931:
   757  072E  2F36               	goto	l1402
   758  072F                     u930:
   759  072F                     l1400:
   760                           
   761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   762  072F  082B               	movf	printf@c,w
   763  0730  120A  118A  244E  120A  118A  	fcall	_putch
   764                           
   765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
   766  0735  2FE7               	goto	l1440
   767  0736                     l1402:
   768                           
   769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   770  0736  01A6               	clrf	printf@flag
   771  0737                     l1406:	
   772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   773                           
   774  0737  3001               	movlw	1
   775  0738  07A8               	addwf	printf@f,f
   776  0739  30FF               	movlw	-1
   777  073A  0728               	addwf	printf@f,w
   778  073B  0084               	movwf	4
   779  073C  120A  118A  2003  120A  118A  	fcall	stringdir
   780  0741  00AB               	movwf	printf@c
   781  0742  00A2               	movwf	??_printf
   782  0743  01A3               	clrf	??_printf+1
   783                           
   784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   785                           ; Switch size 1, requested type "simple"
   786                           ; Number of cases is 1, Range of values is 0 to 0
   787                           ; switch strategies available:
   788                           ; Name         Instructions Cycles
   789                           ; simple_byte            4     3 (average)
   790                           ; direct_byte           11     8 (fixed)
   791                           ; jumptable            260     6 (fixed)
   792                           ;	Chosen strategy is simple_byte
   793  0744  0823               	movf	??_printf+1,w
   794  0745  3A00               	xorlw	0	; case 0
   795  0746  1903               	skipnz
   796  0747  2F49               	goto	l1554
   797  0748  2FE7               	goto	l1440
   798  0749                     l1554:
   799                           
   800                           ; Switch size 1, requested type "simple"
   801                           ; Number of cases is 3, Range of values is 0 to 105
   802                           ; switch strategies available:
   803                           ; Name         Instructions Cycles
   804                           ; simple_byte           10     6 (average)
   805                           ; jumptable            260     6 (fixed)
   806                           ;	Chosen strategy is simple_byte
   807  0749  0822               	movf	??_printf,w
   808  074A  3A00               	xorlw	0	; case 0
   809  074B  1903               	skipnz
   810  074C  2FFB               	goto	l304
   811  074D  3A64               	xorlw	100	; case 100
   812  074E  1903               	skipnz
   813  074F  2F54               	goto	l1408
   814  0750  3A0D               	xorlw	13	; case 105
   815  0751  1903               	skipnz
   816  0752  2F54               	goto	l1408
   817  0753  2FE7               	goto	l1440
   818  0754                     l1408:
   819                           
   820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   821  0754  0825               	movf	printf@ap,w
   822  0755  0084               	movwf	4
   823  0756  1383               	bcf	3,7	;select IRP bank0
   824  0757  0800               	movf	0,w
   825  0758  00A9               	movwf	printf@val
   826  0759  0A84               	incf	4,f
   827  075A  0800               	movf	0,w
   828  075B  00AA               	movwf	printf@val+1
   829  075C                     l1410:
   830  075C  3002               	movlw	2
   831  075D  00A2               	movwf	??_printf
   832  075E  0822               	movf	??_printf,w
   833  075F  07A5               	addwf	printf@ap,f
   834  0760                     l1412:
   835                           
   836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   837  0760  1FAA               	btfss	printf@val+1,7
   838  0761  2F63               	goto	u941
   839  0762  2F64               	goto	u940
   840  0763                     u941:
   841  0763  2F6D               	goto	l1418
   842  0764                     u940:
   843  0764                     l1414:
   844                           
   845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   846  0764  3003               	movlw	3
   847  0765  00A2               	movwf	??_printf
   848  0766  0822               	movf	??_printf,w
   849  0767  04A6               	iorwf	printf@flag,f
   850  0768                     l1416:
   851                           
   852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   853  0768  09A9               	comf	printf@val,f
   854  0769  09AA               	comf	printf@val+1,f
   855  076A  0AA9               	incf	printf@val,f
   856  076B  1903               	skipnz
   857  076C  0AAA               	incf	printf@val+1,f
   858  076D                     l1418:
   859                           
   860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   861  076D  01AB               	clrf	printf@c
   862  076E  0AAB               	incf	printf@c,f
   863  076F                     l1424:
   864                           
   865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   866  076F  082B               	movf	printf@c,w
   867  0770  00A2               	movwf	??_printf
   868  0771  0722               	addwf	??_printf,w
   869  0772  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   870  0773  0084               	movwf	4
   871  0774  120A  118A  2003  120A  118A  	fcall	stringdir
   872  0779  00A3               	movwf	??_printf+1
   873  077A  120A  118A  2003  120A  118A  	fcall	stringdir
   874  077F  00A4               	movwf	??_printf+2
   875  0780  0824               	movf	??_printf+2,w
   876  0781  022A               	subwf	printf@val+1,w
   877  0782  1D03               	skipz
   878  0783  2F86               	goto	u955
   879  0784  0823               	movf	??_printf+1,w
   880  0785  0229               	subwf	printf@val,w
   881  0786                     u955:
   882  0786  1803               	skipnc
   883  0787  2F89               	goto	u951
   884  0788  2F8A               	goto	u950
   885  0789                     u951:
   886  0789  2F8B               	goto	l1428
   887  078A                     u950:
   888  078A  2F95               	goto	l1430
   889  078B                     l1428:
   890  078B  3001               	movlw	1
   891  078C  00A2               	movwf	??_printf
   892  078D  0822               	movf	??_printf,w
   893  078E  07AB               	addwf	printf@c,f
   894  078F  3005               	movlw	5
   895  0790  062B               	xorwf	printf@c,w
   896  0791  1D03               	btfss	3,2
   897  0792  2F94               	goto	u961
   898  0793  2F95               	goto	u960
   899  0794                     u961:
   900  0794  2F6F               	goto	l1424
   901  0795                     u960:
   902  0795                     l1430:
   903                           
   904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
   905  0795  0826               	movf	printf@flag,w
   906  0796  3903               	andlw	3
   907  0797  1903               	btfsc	3,2
   908  0798  2F9A               	goto	u971
   909  0799  2F9B               	goto	u970
   910  079A                     u971:
   911  079A  2FA1               	goto	l1434
   912  079B                     u970:
   913  079B                     l1432:
   914                           
   915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
   916  079B  302D               	movlw	45
   917  079C  120A  118A  244E  120A  118A  	fcall	_putch
   918  07A1                     l1434:
   919                           
   920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
   921  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   922  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   923  07A3  082B               	movf	printf@c,w
   924  07A4  00A2               	movwf	??_printf
   925  07A5  0822               	movf	??_printf,w
   926  07A6  00A7               	movwf	printf@prec
   927                           
   928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
   929  07A7  2FDC               	goto	l1438
   930  07A8                     l1436:
   931                           
   932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
   933  07A8  300A               	movlw	10
   934  07A9  00F8               	movwf	___lwmod@divisor
   935  07AA  3000               	movlw	0
   936  07AB  00F9               	movwf	___lwmod@divisor+1
   937  07AC  0827               	movf	printf@prec,w
   938  07AD  00A2               	movwf	??_printf
   939  07AE  0722               	addwf	??_printf,w
   940  07AF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   941  07B0  0084               	movwf	4
   942  07B1  120A  118A  2003  120A  118A  	fcall	stringdir
   943  07B6  00F0               	movwf	___lwdiv@divisor
   944  07B7  120A  118A  2003  120A  118A  	fcall	stringdir
   945  07BC  00F1               	movwf	___lwdiv@divisor+1
   946  07BD  082A               	movf	printf@val+1,w
   947  07BE  00F3               	movwf	___lwdiv@dividend+1
   948  07BF  0829               	movf	printf@val,w
   949  07C0  00F2               	movwf	___lwdiv@dividend
   950  07C1  120A  118A  2598  120A  118A  	fcall	___lwdiv
   951  07C6  0871               	movf	?___lwdiv+1,w
   952  07C7  00FB               	movwf	___lwmod@dividend+1
   953  07C8  0870               	movf	?___lwdiv,w
   954  07C9  00FA               	movwf	___lwmod@dividend
   955  07CA  120A  118A  251A  120A  118A  	fcall	___lwmod
   956  07CF  0878               	movf	?___lwmod,w
   957  07D0  3E30               	addlw	48
   958  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   959  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   960  07D3  00A3               	movwf	??_printf+1
   961  07D4  0823               	movf	??_printf+1,w
   962  07D5  00AB               	movwf	printf@c
   963                           
   964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
   965  07D6  082B               	movf	printf@c,w
   966  07D7  120A  118A  244E  120A  118A  	fcall	_putch
   967  07DC                     l1438:
   968                           
   969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
   970  07DC  30FF               	movlw	255
   971  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   972  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   973  07DF  00A2               	movwf	??_printf
   974  07E0  0822               	movf	??_printf,w
   975  07E1  07A7               	addwf	printf@prec,f
   976  07E2  0A27               	incf	printf@prec,w
   977  07E3  1D03               	btfss	3,2
   978  07E4  2FE6               	goto	u981
   979  07E5  2FE7               	goto	u980
   980  07E6                     u981:
   981  07E6  2FA8               	goto	l1436
   982  07E7                     u980:
   983  07E7                     l1440:
   984                           
   985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   986  07E7  3001               	movlw	1
   987  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   988  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   989  07EA  07A8               	addwf	printf@f,f
   990  07EB  30FF               	movlw	-1
   991  07EC  0728               	addwf	printf@f,w
   992  07ED  0084               	movwf	4
   993  07EE  120A  118A  2003  120A  118A  	fcall	stringdir
   994  07F3  00A2               	movwf	??_printf
   995  07F4  0822               	movf	??_printf,w
   996  07F5  00AB               	movwf	printf@c
   997  07F6  082B               	movf	printf@c,w
   998  07F7  1D03               	btfss	3,2
   999  07F8  2FFA               	goto	u991
  1000  07F9  2FFB               	goto	u990
  1001  07FA                     u991:
  1002  07FA  2F29               	goto	l1398
  1003  07FB                     u990:
  1004  07FB                     l304:
  1005  07FB  0008               	return
  1006  07FC                     __end_of_printf:
  1007                           
  1008                           	psect	text2
  1009  044E                     __ptext2:	
  1010 ;; *************** function _putch *****************
  1011 ;; Defined at:
  1012 ;;		line 368 in file "lcd.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  c               1    wreg     unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  c               1   13[COMMON] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         1       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0
  1029 ;;      Totals:         1       0       0       0       0
  1030 ;;Total ram usage:        1 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 4
  1033 ;; This function calls:
  1034 ;;		_lcd_putc
  1035 ;; This function is called by:
  1036 ;;		_printf
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _putch
  1042  044E                     _putch:
  1043                           
  1044                           ;incstack = 0
  1045                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1046                           ;putch@c stored from wreg
  1047  044E  00FD               	movwf	putch@c
  1048  044F                     l1300:
  1049                           
  1050                           ;lcd.c: 368: void putch(char c);lcd.c: 369: {;lcd.c: 370:     lcd_putc(c);
  1051  044F  087D               	movf	putch@c,w
  1052  0450  120A  118A  2622  120A  118A  	fcall	_lcd_putc
  1053  0455                     l192:
  1054  0455  0008               	return
  1055  0456                     __end_of_putch:
  1056                           
  1057                           	psect	text3
  1058  051A                     __ptext3:	
  1059 ;; *************** function ___lwmod *****************
  1060 ;; Defined at:
  1061 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  divisor         2    8[COMMON] unsigned int 
  1064 ;;  dividend        2   10[COMMON] unsigned int 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  counter         1   13[COMMON] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  2    8[COMMON] unsigned int 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         4       0       0       0       0
  1077 ;;      Locals:         1       0       0       0       0
  1078 ;;      Temps:          1       0       0       0       0
  1079 ;;      Totals:         6       0       0       0       0
  1080 ;;Total ram usage:        6 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_printf
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function ___lwmod
  1091  051A                     ___lwmod:
  1092  051A                     l1328:	
  1093                           ;incstack = 0
  1094                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1095                           
  1096  051A  0878               	movf	___lwmod@divisor,w
  1097  051B  0479               	iorwf	___lwmod@divisor+1,w
  1098  051C  1903               	btfsc	3,2
  1099  051D  2D1F               	goto	u811
  1100  051E  2D20               	goto	u810
  1101  051F                     u811:
  1102  051F  2D4F               	goto	l1346
  1103  0520                     u810:
  1104  0520                     l1330:
  1105  0520  01FD               	clrf	___lwmod@counter
  1106  0521  0AFD               	incf	___lwmod@counter,f
  1107  0522  2D2E               	goto	l1336
  1108  0523                     l1332:
  1109  0523  3001               	movlw	1
  1110  0524                     u825:
  1111  0524  1003               	clrc
  1112  0525  0DF8               	rlf	___lwmod@divisor,f
  1113  0526  0DF9               	rlf	___lwmod@divisor+1,f
  1114  0527  3EFF               	addlw	-1
  1115  0528  1D03               	skipz
  1116  0529  2D24               	goto	u825
  1117  052A                     l1334:
  1118  052A  3001               	movlw	1
  1119  052B  00FC               	movwf	??___lwmod
  1120  052C  087C               	movf	??___lwmod,w
  1121  052D  07FD               	addwf	___lwmod@counter,f
  1122  052E                     l1336:
  1123  052E  1FF9               	btfss	___lwmod@divisor+1,7
  1124  052F  2D31               	goto	u831
  1125  0530  2D32               	goto	u830
  1126  0531                     u831:
  1127  0531  2D23               	goto	l1332
  1128  0532                     u830:
  1129  0532                     l1338:
  1130  0532  0879               	movf	___lwmod@divisor+1,w
  1131  0533  027B               	subwf	___lwmod@dividend+1,w
  1132  0534  1D03               	skipz
  1133  0535  2D38               	goto	u845
  1134  0536  0878               	movf	___lwmod@divisor,w
  1135  0537  027A               	subwf	___lwmod@dividend,w
  1136  0538                     u845:
  1137  0538  1C03               	skipc
  1138  0539  2D3B               	goto	u841
  1139  053A  2D3C               	goto	u840
  1140  053B                     u841:
  1141  053B  2D42               	goto	l1342
  1142  053C                     u840:
  1143  053C                     l1340:
  1144  053C  0878               	movf	___lwmod@divisor,w
  1145  053D  02FA               	subwf	___lwmod@dividend,f
  1146  053E  0879               	movf	___lwmod@divisor+1,w
  1147  053F  1C03               	skipc
  1148  0540  03FB               	decf	___lwmod@dividend+1,f
  1149  0541  02FB               	subwf	___lwmod@dividend+1,f
  1150  0542                     l1342:
  1151  0542  3001               	movlw	1
  1152  0543                     u855:
  1153  0543  1003               	clrc
  1154  0544  0CF9               	rrf	___lwmod@divisor+1,f
  1155  0545  0CF8               	rrf	___lwmod@divisor,f
  1156  0546  3EFF               	addlw	-1
  1157  0547  1D03               	skipz
  1158  0548  2D43               	goto	u855
  1159  0549                     l1344:
  1160  0549  3001               	movlw	1
  1161  054A  02FD               	subwf	___lwmod@counter,f
  1162  054B  1D03               	btfss	3,2
  1163  054C  2D4E               	goto	u861
  1164  054D  2D4F               	goto	u860
  1165  054E                     u861:
  1166  054E  2D32               	goto	l1338
  1167  054F                     u860:
  1168  054F                     l1346:
  1169  054F  087B               	movf	___lwmod@dividend+1,w
  1170  0550  00F9               	movwf	?___lwmod+1
  1171  0551  087A               	movf	___lwmod@dividend,w
  1172  0552  00F8               	movwf	?___lwmod
  1173  0553                     l590:
  1174  0553  0008               	return
  1175  0554                     __end_of___lwmod:
  1176                           
  1177                           	psect	text4
  1178  0598                     __ptext4:	
  1179 ;; *************** function ___lwdiv *****************
  1180 ;; Defined at:
  1181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  divisor         2    0[COMMON] unsigned int 
  1184 ;;  dividend        2    2[COMMON] unsigned int 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  quotient        2    5[COMMON] unsigned int 
  1187 ;;  counter         1    7[COMMON] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  2    0[COMMON] unsigned int 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         4       0       0       0       0
  1198 ;;      Locals:         3       0       0       0       0
  1199 ;;      Temps:          1       0       0       0       0
  1200 ;;      Totals:         8       0       0       0       0
  1201 ;;Total ram usage:        8 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_printf
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           
  1211                           ;psect for function ___lwdiv
  1212  0598                     ___lwdiv:
  1213  0598                     l1302:	
  1214                           ;incstack = 0
  1215                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1216                           
  1217  0598  01F5               	clrf	___lwdiv@quotient
  1218  0599  01F6               	clrf	___lwdiv@quotient+1
  1219  059A                     l1304:
  1220  059A  0870               	movf	___lwdiv@divisor,w
  1221  059B  0471               	iorwf	___lwdiv@divisor+1,w
  1222  059C  1903               	btfsc	3,2
  1223  059D  2D9F               	goto	u741
  1224  059E  2DA0               	goto	u740
  1225  059F                     u741:
  1226  059F  2DD7               	goto	l1324
  1227  05A0                     u740:
  1228  05A0                     l1306:
  1229  05A0  01F7               	clrf	___lwdiv@counter
  1230  05A1  0AF7               	incf	___lwdiv@counter,f
  1231  05A2  2DAE               	goto	l1312
  1232  05A3                     l1308:
  1233  05A3  3001               	movlw	1
  1234  05A4                     u755:
  1235  05A4  1003               	clrc
  1236  05A5  0DF0               	rlf	___lwdiv@divisor,f
  1237  05A6  0DF1               	rlf	___lwdiv@divisor+1,f
  1238  05A7  3EFF               	addlw	-1
  1239  05A8  1D03               	skipz
  1240  05A9  2DA4               	goto	u755
  1241  05AA                     l1310:
  1242  05AA  3001               	movlw	1
  1243  05AB  00F4               	movwf	??___lwdiv
  1244  05AC  0874               	movf	??___lwdiv,w
  1245  05AD  07F7               	addwf	___lwdiv@counter,f
  1246  05AE                     l1312:
  1247  05AE  1FF1               	btfss	___lwdiv@divisor+1,7
  1248  05AF  2DB1               	goto	u761
  1249  05B0  2DB2               	goto	u760
  1250  05B1                     u761:
  1251  05B1  2DA3               	goto	l1308
  1252  05B2                     u760:
  1253  05B2                     l1314:
  1254  05B2  3001               	movlw	1
  1255  05B3                     u775:
  1256  05B3  1003               	clrc
  1257  05B4  0DF5               	rlf	___lwdiv@quotient,f
  1258  05B5  0DF6               	rlf	___lwdiv@quotient+1,f
  1259  05B6  3EFF               	addlw	-1
  1260  05B7  1D03               	skipz
  1261  05B8  2DB3               	goto	u775
  1262  05B9  0871               	movf	___lwdiv@divisor+1,w
  1263  05BA  0273               	subwf	___lwdiv@dividend+1,w
  1264  05BB  1D03               	skipz
  1265  05BC  2DBF               	goto	u785
  1266  05BD  0870               	movf	___lwdiv@divisor,w
  1267  05BE  0272               	subwf	___lwdiv@dividend,w
  1268  05BF                     u785:
  1269  05BF  1C03               	skipc
  1270  05C0  2DC2               	goto	u781
  1271  05C1  2DC3               	goto	u780
  1272  05C2                     u781:
  1273  05C2  2DCA               	goto	l1320
  1274  05C3                     u780:
  1275  05C3                     l1316:
  1276  05C3  0870               	movf	___lwdiv@divisor,w
  1277  05C4  02F2               	subwf	___lwdiv@dividend,f
  1278  05C5  0871               	movf	___lwdiv@divisor+1,w
  1279  05C6  1C03               	skipc
  1280  05C7  03F3               	decf	___lwdiv@dividend+1,f
  1281  05C8  02F3               	subwf	___lwdiv@dividend+1,f
  1282  05C9                     l1318:
  1283  05C9  1475               	bsf	___lwdiv@quotient,0
  1284  05CA                     l1320:
  1285  05CA  3001               	movlw	1
  1286  05CB                     u795:
  1287  05CB  1003               	clrc
  1288  05CC  0CF1               	rrf	___lwdiv@divisor+1,f
  1289  05CD  0CF0               	rrf	___lwdiv@divisor,f
  1290  05CE  3EFF               	addlw	-1
  1291  05CF  1D03               	skipz
  1292  05D0  2DCB               	goto	u795
  1293  05D1                     l1322:
  1294  05D1  3001               	movlw	1
  1295  05D2  02F7               	subwf	___lwdiv@counter,f
  1296  05D3  1D03               	btfss	3,2
  1297  05D4  2DD6               	goto	u801
  1298  05D5  2DD7               	goto	u800
  1299  05D6                     u801:
  1300  05D6  2DB2               	goto	l1314
  1301  05D7                     u800:
  1302  05D7                     l1324:
  1303  05D7  0876               	movf	___lwdiv@quotient+1,w
  1304  05D8  00F1               	movwf	?___lwdiv+1
  1305  05D9  0875               	movf	___lwdiv@quotient,w
  1306  05DA  00F0               	movwf	?___lwdiv
  1307  05DB                     l580:
  1308  05DB  0008               	return
  1309  05DC                     __end_of___lwdiv:
  1310                           
  1311                           	psect	text5
  1312  0468                     __ptext5:	
  1313 ;; *************** function _lcd_puts *****************
  1314 ;; Defined at:
  1315 ;;		line 224 in file "lcd.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  s               1    wreg     PTR const unsigned char 
  1318 ;;		 -> main@your_name(17), 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1321 ;;		 -> main@your_name(17), 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       0       0       0       0
  1332 ;;      Locals:         0       1       0       0       0
  1333 ;;      Temps:          1       0       0       0       0
  1334 ;;      Totals:         1       1       0       0       0
  1335 ;;Total ram usage:        2 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 4
  1338 ;; This function calls:
  1339 ;;		_lcd_putc
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _lcd_puts
  1347  0468                     _lcd_puts:
  1348                           
  1349                           ;incstack = 0
  1350                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1351                           ;lcd_puts@s stored from wreg
  1352  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1354  046A  00A0               	movwf	lcd_puts@s
  1355  046B                     l1388:
  1356                           
  1357                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1358  046B  2C7E               	goto	l1394
  1359  046C                     l1390:
  1360                           
  1361                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1362  046C  0820               	movf	lcd_puts@s,w
  1363  046D  0084               	movwf	4
  1364  046E  120A  118A  2003  120A  118A  	fcall	stringdir
  1365  0473  120A  118A  2622  120A  118A  	fcall	_lcd_putc
  1366  0478                     l1392:
  1367  0478  3001               	movlw	1
  1368  0479  00FD               	movwf	??_lcd_puts
  1369  047A  087D               	movf	??_lcd_puts,w
  1370  047B  1283               	bcf	3,5	;RP0=0, select bank0
  1371  047C  1303               	bcf	3,6	;RP1=0, select bank0
  1372  047D  07A0               	addwf	lcd_puts@s,f
  1373  047E                     l1394:
  1374                           
  1375                           ;lcd.c: 229:  while(*s)
  1376  047E  0820               	movf	lcd_puts@s,w
  1377  047F  0084               	movwf	4
  1378  0480  120A  118A  2003  120A  118A  	fcall	stringdir
  1379  0485  3A00               	xorlw	0
  1380  0486  1D03               	skipz
  1381  0487  2C89               	goto	u921
  1382  0488  2C8A               	goto	u920
  1383  0489                     u921:
  1384  0489  2C6C               	goto	l1390
  1385  048A                     u920:
  1386  048A                     l147:
  1387  048A  0008               	return
  1388  048B                     __end_of_lcd_puts:
  1389                           
  1390                           	psect	text6
  1391  0622                     __ptext6:	
  1392 ;; *************** function _lcd_putc *****************
  1393 ;; Defined at:
  1394 ;;		line 190 in file "lcd.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  c               1    wreg     unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  c               1   12[COMMON] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         1       0       0       0       0
  1410 ;;      Temps:          2       0       0       0       0
  1411 ;;      Totals:         3       0       0       0       0
  1412 ;;Total ram usage:        3 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 3
  1415 ;; This function calls:
  1416 ;;		_lcd_busy
  1417 ;;		_lcd_gotoxy
  1418 ;;		_lcd_put_byte
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;;		_lcd_puts
  1422 ;;		_putch
  1423 ;;		_lcd_String_Delay
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _lcd_putc
  1429  0622                     _lcd_putc:
  1430                           
  1431                           ;incstack = 0
  1432                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1433                           ;lcd_putc@c stored from wreg
  1434  0622  00FC               	movwf	lcd_putc@c
  1435  0623                     l1278:
  1436                           
  1437                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1438  0623  2E6A               	goto	l1294
  1439  0624                     l1280:
  1440                           
  1441                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1442  0624  01F3               	clrf	lcd_put_byte@b
  1443  0625  0AF3               	incf	lcd_put_byte@b,f
  1444  0626  3000               	movlw	0
  1445  0627  120A  118A  24E1  120A  118A  	fcall	_lcd_put_byte
  1446  062C                     l1282:	
  1447                           ;lcd.c: 199:    while(lcd_busy());
  1448                           
  1449  062C  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1450  0631  3A00               	xorlw	0
  1451  0632  1D03               	skipz
  1452  0633  2E35               	goto	u711
  1453  0634  2E36               	goto	u710
  1454  0635                     u711:
  1455  0635  2E2C               	goto	l1282
  1456  0636                     u710:
  1457  0636  2E7D               	goto	l141
  1458  0637                     l1284:
  1459                           
  1460                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1461  0637  01F6               	clrf	lcd_gotoxy@row
  1462  0638  0AF6               	incf	lcd_gotoxy@row,f
  1463  0639  3000               	movlw	0
  1464  063A  120A  118A  248B  120A  118A  	fcall	_lcd_gotoxy
  1465                           
  1466                           ;lcd.c: 203:    break;
  1467  063F  2E7D               	goto	l141
  1468  0640                     l1286:
  1469                           
  1470                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1471  0640  3010               	movlw	16
  1472  0641  00FA               	movwf	??_lcd_putc
  1473  0642  087A               	movf	??_lcd_putc,w
  1474  0643  00F3               	movwf	lcd_put_byte@b
  1475  0644  3000               	movlw	0
  1476  0645  120A  118A  24E1  120A  118A  	fcall	_lcd_put_byte
  1477  064A                     l1288:	
  1478                           ;lcd.c: 206:    while(lcd_busy());
  1479                           
  1480  064A  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1481  064F  3A00               	xorlw	0
  1482  0650  1D03               	skipz
  1483  0651  2E53               	goto	u721
  1484  0652  2E54               	goto	u720
  1485  0653                     u721:
  1486  0653  2E4A               	goto	l1288
  1487  0654                     u720:
  1488  0654  2E7D               	goto	l141
  1489  0655                     l1290:
  1490                           
  1491                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1492  0655  087C               	movf	lcd_putc@c,w
  1493  0656  00FA               	movwf	??_lcd_putc
  1494  0657  087A               	movf	??_lcd_putc,w
  1495  0658  00F3               	movwf	lcd_put_byte@b
  1496  0659  3001               	movlw	1
  1497  065A  120A  118A  24E1  120A  118A  	fcall	_lcd_put_byte
  1498  065F                     l1292:	
  1499                           ;lcd.c: 212:     while(lcd_busy());
  1500                           
  1501  065F  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1502  0664  3A00               	xorlw	0
  1503  0665  1D03               	skipz
  1504  0666  2E68               	goto	u731
  1505  0667  2E69               	goto	u730
  1506  0668                     u731:
  1507  0668  2E5F               	goto	l1292
  1508  0669                     u730:
  1509  0669  2E7D               	goto	l141
  1510  066A                     l1294:
  1511  066A  087C               	movf	lcd_putc@c,w
  1512  066B  00FA               	movwf	??_lcd_putc
  1513  066C  01FB               	clrf	??_lcd_putc+1
  1514                           
  1515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1516                           ; Switch size 1, requested type "simple"
  1517                           ; Number of cases is 1, Range of values is 0 to 0
  1518                           ; switch strategies available:
  1519                           ; Name         Instructions Cycles
  1520                           ; simple_byte            4     3 (average)
  1521                           ; direct_byte           11     8 (fixed)
  1522                           ; jumptable            260     6 (fixed)
  1523                           ;	Chosen strategy is simple_byte
  1524  066D  087B               	movf	??_lcd_putc+1,w
  1525  066E  3A00               	xorlw	0	; case 0
  1526  066F  1903               	skipnz
  1527  0670  2E72               	goto	l1556
  1528  0671  2E55               	goto	l1290
  1529  0672                     l1556:
  1530                           
  1531                           ; Switch size 1, requested type "simple"
  1532                           ; Number of cases is 3, Range of values is 8 to 12
  1533                           ; switch strategies available:
  1534                           ; Name         Instructions Cycles
  1535                           ; simple_byte           10     6 (average)
  1536                           ; direct_byte           26    11 (fixed)
  1537                           ; jumptable            263     9 (fixed)
  1538                           ;	Chosen strategy is simple_byte
  1539  0672  087A               	movf	??_lcd_putc,w
  1540  0673  3A08               	xorlw	8	; case 8
  1541  0674  1903               	skipnz
  1542  0675  2E40               	goto	l1286
  1543  0676  3A02               	xorlw	2	; case 10
  1544  0677  1903               	skipnz
  1545  0678  2E37               	goto	l1284
  1546  0679  3A06               	xorlw	6	; case 12
  1547  067A  1903               	skipnz
  1548  067B  2E24               	goto	l1280
  1549  067C  2E55               	goto	l1290
  1550  067D                     l141:
  1551  067D  0008               	return
  1552  067E                     __end_of_lcd_putc:
  1553                           
  1554                           	psect	text7
  1555  048B                     __ptext7:	
  1556 ;; *************** function _lcd_gotoxy *****************
  1557 ;; Defined at:
  1558 ;;		line 167 in file "lcd.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  col             1    wreg     unsigned char 
  1561 ;;  row             1    6[COMMON] unsigned char 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  col             1    8[COMMON] unsigned char 
  1564 ;;  address         1    9[COMMON] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0, pclath, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         1       0       0       0       0
  1575 ;;      Locals:         2       0       0       0       0
  1576 ;;      Temps:          1       0       0       0       0
  1577 ;;      Totals:         4       0       0       0       0
  1578 ;;Total ram usage:        4 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 2
  1581 ;; This function calls:
  1582 ;;		_lcd_busy
  1583 ;;		_lcd_put_byte
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;;		_lcd_putc
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function _lcd_gotoxy
  1592  048B                     _lcd_gotoxy:
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1596                           ;lcd_gotoxy@col stored from wreg
  1597  048B  00F8               	movwf	lcd_gotoxy@col
  1598  048C                     l1266:
  1599                           
  1600                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1601  048C  0876               	movf	lcd_gotoxy@row,w
  1602  048D  1903               	btfsc	3,2
  1603  048E  2C90               	goto	u691
  1604  048F  2C91               	goto	u690
  1605  0490                     u691:
  1606  0490  2C96               	goto	l1270
  1607  0491                     u690:
  1608  0491                     l1268:
  1609                           
  1610                           ;lcd.c: 174:   address=0x40;
  1611  0491  3040               	movlw	64
  1612  0492  00F7               	movwf	??_lcd_gotoxy
  1613  0493  0877               	movf	??_lcd_gotoxy,w
  1614  0494  00F9               	movwf	lcd_gotoxy@address
  1615  0495  2C97               	goto	l1272
  1616  0496                     l1270:
  1617                           
  1618                           ;lcd.c: 176:   address=0;
  1619  0496  01F9               	clrf	lcd_gotoxy@address
  1620  0497                     l1272:
  1621                           
  1622                           ;lcd.c: 178:  address += col;
  1623  0497  0878               	movf	lcd_gotoxy@col,w
  1624  0498  00F7               	movwf	??_lcd_gotoxy
  1625  0499  0877               	movf	??_lcd_gotoxy,w
  1626  049A  07F9               	addwf	lcd_gotoxy@address,f
  1627  049B                     l1274:
  1628                           
  1629                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1630  049B  0879               	movf	lcd_gotoxy@address,w
  1631  049C  3880               	iorlw	128
  1632  049D  00F7               	movwf	??_lcd_gotoxy
  1633  049E  0877               	movf	??_lcd_gotoxy,w
  1634  049F  00F3               	movwf	lcd_put_byte@b
  1635  04A0  3000               	movlw	0
  1636  04A1  120A  118A  24E1  120A  118A  	fcall	_lcd_put_byte
  1637  04A6                     l1276:	
  1638                           ;lcd.c: 181:  while(lcd_busy());
  1639                           
  1640  04A6  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1641  04AB  3A00               	xorlw	0
  1642  04AC  1D03               	skipz
  1643  04AD  2CAF               	goto	u701
  1644  04AE  2CB0               	goto	u700
  1645  04AF                     u701:
  1646  04AF  2CA6               	goto	l1276
  1647  04B0                     u700:
  1648  04B0                     l123:
  1649  04B0  0008               	return
  1650  04B1                     __end_of_lcd_gotoxy:
  1651                           
  1652                           	psect	text8
  1653  067E                     __ptext8:	
  1654 ;; *************** function _lcd_init *****************
  1655 ;; Defined at:
  1656 ;;		line 241 in file "lcd.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  i               1    0        unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0
  1673 ;;      Totals:         2       0       0       0       0
  1674 ;;Total ram usage:        2 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 2
  1677 ;; This function calls:
  1678 ;;		_lcd_busy
  1679 ;;		_lcd_put_byte
  1680 ;;		_lcd_put_nibble
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           
  1687                           ;psect for function _lcd_init
  1688  067E                     _lcd_init:
  1689  067E                     l1350:	
  1690                           ;incstack = 0
  1691                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1692                           
  1693                           
  1694                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1695  067E  1683               	bsf	3,5	;RP0=1, select bank1
  1696  067F  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0680  1188               	bcf	8,3	;volatile
  1698                           
  1699                           ;lcd.c: 248:  TRISD1 = 0;
  1700  0681  1088               	bcf	8,1	;volatile
  1701                           
  1702                           ;lcd.c: 249:  TRISD2 = 0;
  1703  0682  1108               	bcf	8,2	;volatile
  1704                           
  1705                           ;lcd.c: 250:  TRISD4 = 0;
  1706  0683  1208               	bcf	8,4	;volatile
  1707                           
  1708                           ;lcd.c: 251:  TRISD5 = 0;
  1709  0684  1288               	bcf	8,5	;volatile
  1710                           
  1711                           ;lcd.c: 252:  TRISD6 = 0;
  1712  0685  1308               	bcf	8,6	;volatile
  1713                           
  1714                           ;lcd.c: 253:  TRISD7 = 0;
  1715  0686  1388               	bcf	8,7	;volatile
  1716  0687                     l1352:
  1717                           
  1718                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1719  0687  3014               	movlw	20
  1720  0688  00F7               	movwf	??_lcd_init+1
  1721  0689  3079               	movlw	121
  1722  068A  00F6               	movwf	??_lcd_init
  1723  068B                     u1077:
  1724  068B  0BF6               	decfsz	??_lcd_init,f
  1725  068C  2E8B               	goto	u1077
  1726  068D  0BF7               	decfsz	??_lcd_init+1,f
  1727  068E  2E8B               	goto	u1077
  1728  068F  2E90               	nop2
  1729  0690                     l1354:
  1730                           
  1731                           ;lcd.c: 257:  RD1 = 0;
  1732  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0692  1088               	bcf	8,1	;volatile
  1735  0693                     l1356:
  1736                           
  1737                           ;lcd.c: 258:  RD2 = 0;
  1738  0693  1108               	bcf	8,2	;volatile
  1739  0694                     l1358:
  1740                           
  1741                           ;lcd.c: 259:  RD3 = 0;
  1742  0694  1188               	bcf	8,3	;volatile
  1743  0695                     l1360:
  1744                           
  1745                           ;lcd.c: 261:  lcd_put_nibble(3);
  1746  0695  3003               	movlw	3
  1747  0696  120A  118A  2554  120A  118A  	fcall	_lcd_put_nibble
  1748  069B                     l1362:
  1749                           
  1750                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1751  069B  300D               	movlw	13
  1752  069C  00F7               	movwf	??_lcd_init+1
  1753  069D  30FB               	movlw	251
  1754  069E  00F6               	movwf	??_lcd_init
  1755  069F                     u1087:
  1756  069F  0BF6               	decfsz	??_lcd_init,f
  1757  06A0  2E9F               	goto	u1087
  1758  06A1  0BF7               	decfsz	??_lcd_init+1,f
  1759  06A2  2E9F               	goto	u1087
  1760  06A3  2EA4               	nop2
  1761                           
  1762                           ;lcd.c: 263:  lcd_put_nibble(3);
  1763  06A4  3003               	movlw	3
  1764  06A5  120A  118A  2554  120A  118A  	fcall	_lcd_put_nibble
  1765  06AA                     l1364:
  1766                           
  1767                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1768  06AA  300D               	movlw	13
  1769  06AB  00F7               	movwf	??_lcd_init+1
  1770  06AC  30FB               	movlw	251
  1771  06AD  00F6               	movwf	??_lcd_init
  1772  06AE                     u1097:
  1773  06AE  0BF6               	decfsz	??_lcd_init,f
  1774  06AF  2EAE               	goto	u1097
  1775  06B0  0BF7               	decfsz	??_lcd_init+1,f
  1776  06B1  2EAE               	goto	u1097
  1777  06B2  2EB3               	nop2
  1778  06B3                     l1366:
  1779                           
  1780                           ;lcd.c: 265:  lcd_put_nibble(3);
  1781  06B3  3003               	movlw	3
  1782  06B4  120A  118A  2554  120A  118A  	fcall	_lcd_put_nibble
  1783                           
  1784                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1785  06B9  300D               	movlw	13
  1786  06BA  00F7               	movwf	??_lcd_init+1
  1787  06BB  30FB               	movlw	251
  1788  06BC  00F6               	movwf	??_lcd_init
  1789  06BD                     u1107:
  1790  06BD  0BF6               	decfsz	??_lcd_init,f
  1791  06BE  2EBD               	goto	u1107
  1792  06BF  0BF7               	decfsz	??_lcd_init+1,f
  1793  06C0  2EBD               	goto	u1107
  1794  06C1  2EC2               	nop2
  1795  06C2                     l1368:
  1796                           
  1797                           ;lcd.c: 268:  lcd_put_nibble(2);
  1798  06C2  3002               	movlw	2
  1799  06C3  120A  118A  2554  120A  118A  	fcall	_lcd_put_nibble
  1800  06C8                     l1370:	
  1801                           ;lcd.c: 269:  while(lcd_busy());
  1802                           
  1803  06C8  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1804  06CD  3A00               	xorlw	0
  1805  06CE  1D03               	skipz
  1806  06CF  2ED1               	goto	u871
  1807  06D0  2ED2               	goto	u870
  1808  06D1                     u871:
  1809  06D1  2EC8               	goto	l1370
  1810  06D2                     u870:
  1811  06D2                     l1372:
  1812                           
  1813                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1814  06D2  3028               	movlw	40
  1815  06D3  00F6               	movwf	??_lcd_init
  1816  06D4  0876               	movf	??_lcd_init,w
  1817  06D5  00F3               	movwf	lcd_put_byte@b
  1818  06D6  3000               	movlw	0
  1819  06D7  120A  118A  24E1  120A  118A  	fcall	_lcd_put_byte
  1820  06DC                     l1374:	
  1821                           ;lcd.c: 272:  while(lcd_busy());
  1822                           
  1823  06DC  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1824  06E1  3A00               	xorlw	0
  1825  06E2  1D03               	skipz
  1826  06E3  2EE5               	goto	u881
  1827  06E4  2EE6               	goto	u880
  1828  06E5                     u881:
  1829  06E5  2EDC               	goto	l1374
  1830  06E6                     u880:
  1831  06E6                     l1376:
  1832                           
  1833                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1834  06E6  300C               	movlw	12
  1835  06E7  00F6               	movwf	??_lcd_init
  1836  06E8  0876               	movf	??_lcd_init,w
  1837  06E9  00F3               	movwf	lcd_put_byte@b
  1838  06EA  3000               	movlw	0
  1839  06EB  120A  118A  24E1  120A  118A  	fcall	_lcd_put_byte
  1840  06F0                     l1378:	
  1841                           ;lcd.c: 275:  while(lcd_busy());
  1842                           
  1843  06F0  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1844  06F5  3A00               	xorlw	0
  1845  06F6  1D03               	skipz
  1846  06F7  2EF9               	goto	u891
  1847  06F8  2EFA               	goto	u890
  1848  06F9                     u891:
  1849  06F9  2EF0               	goto	l1378
  1850  06FA                     u890:
  1851  06FA                     l1380:
  1852                           
  1853                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1854  06FA  01F3               	clrf	lcd_put_byte@b
  1855  06FB  0AF3               	incf	lcd_put_byte@b,f
  1856  06FC  3000               	movlw	0
  1857  06FD  120A  118A  24E1  120A  118A  	fcall	_lcd_put_byte
  1858  0702                     l1382:	
  1859                           ;lcd.c: 278:  while(lcd_busy());
  1860                           
  1861  0702  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1862  0707  3A00               	xorlw	0
  1863  0708  1D03               	skipz
  1864  0709  2F0B               	goto	u901
  1865  070A  2F0C               	goto	u900
  1866  070B                     u901:
  1867  070B  2F02               	goto	l1382
  1868  070C                     u900:
  1869  070C                     l1384:
  1870                           
  1871                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1872  070C  3006               	movlw	6
  1873  070D  00F6               	movwf	??_lcd_init
  1874  070E  0876               	movf	??_lcd_init,w
  1875  070F  00F3               	movwf	lcd_put_byte@b
  1876  0710  3000               	movlw	0
  1877  0711  120A  118A  24E1  120A  118A  	fcall	_lcd_put_byte
  1878  0716                     l1386:	
  1879                           ;lcd.c: 281:  while(lcd_busy());
  1880                           
  1881  0716  120A  118A  24B1  120A  118A  	fcall	_lcd_busy
  1882  071B  3A00               	xorlw	0
  1883  071C  1D03               	skipz
  1884  071D  2F1F               	goto	u911
  1885  071E  2F20               	goto	u910
  1886  071F                     u911:
  1887  071F  2F16               	goto	l1386
  1888  0720                     u910:
  1889  0720                     l165:
  1890  0720  0008               	return
  1891  0721                     __end_of_lcd_init:
  1892                           
  1893                           	psect	text9
  1894  04E1                     __ptext9:	
  1895 ;; *************** function _lcd_put_byte *****************
  1896 ;; Defined at:
  1897 ;;		line 134 in file "lcd.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  rs              1    wreg     unsigned char 
  1900 ;;  b               1    3[COMMON] unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  rs              1    5[COMMON] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         1       0       0       0       0
  1913 ;;      Locals:         1       0       0       0       0
  1914 ;;      Temps:          1       0       0       0       0
  1915 ;;      Totals:         3       0       0       0       0
  1916 ;;Total ram usage:        3 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 1
  1919 ;; This function calls:
  1920 ;;		_lcd_put_nibble
  1921 ;; This function is called by:
  1922 ;;		_lcd_gotoxy
  1923 ;;		_lcd_putc
  1924 ;;		_lcd_init
  1925 ;;		_addCharSpecial
  1926 ;;		_lcd_ShiftLeft
  1927 ;;		_lcd_ShiftRight
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _lcd_put_byte
  1933  04E1                     _lcd_put_byte:
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1937                           ;lcd_put_byte@rs stored from wreg
  1938  04E1  00F5               	movwf	lcd_put_byte@rs
  1939  04E2                     l1228:
  1940                           
  1941                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1942  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  1943  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  1944  04E4  1208               	bcf	8,4	;volatile
  1945                           
  1946                           ;lcd.c: 140:  TRISD5 = 0;
  1947  04E5  1288               	bcf	8,5	;volatile
  1948                           
  1949                           ;lcd.c: 141:  TRISD6 = 0;
  1950  04E6  1308               	bcf	8,6	;volatile
  1951                           
  1952                           ;lcd.c: 142:  TRISD7 = 0;
  1953  04E7  1388               	bcf	8,7	;volatile
  1954  04E8                     l1230:
  1955                           
  1956                           ;lcd.c: 144:  if(rs)
  1957  04E8  0875               	movf	lcd_put_byte@rs,w
  1958  04E9  1903               	btfsc	3,2
  1959  04EA  2CEC               	goto	u671
  1960  04EB  2CED               	goto	u670
  1961  04EC                     u671:
  1962  04EC  2CF1               	goto	l113
  1963  04ED                     u670:
  1964  04ED                     l1232:
  1965                           
  1966                           ;lcd.c: 145:   RD1 = 1;
  1967  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1968  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1969  04EF  1488               	bsf	8,1	;volatile
  1970  04F0  2CF4               	goto	l1234
  1971  04F1                     l113:	
  1972                           ;lcd.c: 146:  else
  1973                           
  1974                           
  1975                           ;lcd.c: 147:   RD1 = 0;
  1976  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1977  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1978  04F3  1088               	bcf	8,1	;volatile
  1979  04F4                     l1234:
  1980                           
  1981                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1982  04F4  3006               	movlw	6
  1983  04F5  00F4               	movwf	??_lcd_put_byte
  1984  04F6                     u1117:
  1985  04F6  0BF4               	decfsz	??_lcd_put_byte,f
  1986  04F7  2CF6               	goto	u1117
  1987  04F8  0000               	nop
  1988  04F9                     l1236:
  1989                           
  1990                           ;lcd.c: 150:  RD2 = 0;
  1991  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1992  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1993  04FB  1108               	bcf	8,2	;volatile
  1994                           
  1995                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1996  04FC  3006               	movlw	6
  1997  04FD  00F4               	movwf	??_lcd_put_byte
  1998  04FE                     u1127:
  1999  04FE  0BF4               	decfsz	??_lcd_put_byte,f
  2000  04FF  2CFE               	goto	u1127
  2001  0500  0000               	nop
  2002  0501                     l1238:
  2003                           
  2004                           ;lcd.c: 153:  RD3 = 0;
  2005  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0502  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0503  1188               	bcf	8,3	;volatile
  2008  0504                     l1240:
  2009                           
  2010                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2011  0504  0873               	movf	lcd_put_byte@b,w
  2012  0505  00F4               	movwf	??_lcd_put_byte
  2013  0506  3004               	movlw	4
  2014  0507                     u685:
  2015  0507  1003               	clrc
  2016  0508  0CF4               	rrf	??_lcd_put_byte,f
  2017  0509  3EFF               	addlw	-1
  2018  050A  1D03               	skipz
  2019  050B  2D07               	goto	u685
  2020  050C  0874               	movf	??_lcd_put_byte,w
  2021  050D  120A  118A  2554  120A  118A  	fcall	_lcd_put_nibble
  2022  0512                     l1242:
  2023                           
  2024                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2025  0512  0873               	movf	lcd_put_byte@b,w
  2026  0513  390F               	andlw	15
  2027  0514  120A  118A  2554  120A  118A  	fcall	_lcd_put_nibble
  2028  0519                     l115:
  2029  0519  0008               	return
  2030  051A                     __end_of_lcd_put_byte:
  2031                           
  2032                           	psect	text10
  2033  0554                     __ptext10:	
  2034 ;; *************** function _lcd_put_nibble *****************
  2035 ;; Defined at:
  2036 ;;		line 103 in file "lcd.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  b               1    wreg     unsigned char 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  b               1    1[COMMON] unsigned char 
  2041 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         0       0       0       0       0
  2052 ;;      Locals:         2       0       0       0       0
  2053 ;;      Temps:          1       0       0       0       0
  2054 ;;      Totals:         3       0       0       0       0
  2055 ;;Total ram usage:        3 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_lcd_put_byte
  2061 ;;		_lcd_init
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _lcd_put_nibble
  2067  0554                     _lcd_put_nibble:
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _lcd_put_nibble: [wreg]
  2071                           ;lcd_put_nibble@b stored from wreg
  2072  0554  00F1               	movwf	lcd_put_nibble@b
  2073  0555                     l1212:
  2074                           
  2075                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2076  0555  1683               	bsf	3,5	;RP0=1, select bank1
  2077  0556  1303               	bcf	3,6	;RP1=0, select bank1
  2078  0557  1208               	bcf	8,4	;volatile
  2079                           
  2080                           ;lcd.c: 110:  TRISD5 = 0;
  2081  0558  1288               	bcf	8,5	;volatile
  2082                           
  2083                           ;lcd.c: 111:  TRISD6 = 0;
  2084  0559  1308               	bcf	8,6	;volatile
  2085                           
  2086                           ;lcd.c: 112:  TRISD7 = 0;
  2087  055A  1388               	bcf	8,7	;volatile
  2088  055B                     l1214:
  2089                           
  2090                           ;lcd.c: 114:  temp.Val = b;
  2091  055B  0871               	movf	lcd_put_nibble@b,w
  2092  055C  00F0               	movwf	??_lcd_put_nibble
  2093  055D  0870               	movf	??_lcd_put_nibble,w
  2094  055E  00F2               	movwf	lcd_put_nibble@temp
  2095  055F                     l1216:
  2096                           
  2097                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2098  055F  1872               	btfsc	lcd_put_nibble@temp,0
  2099  0560  2D62               	goto	u591
  2100  0561  2D66               	goto	u590
  2101  0562                     u591:
  2102  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0564  1608               	bsf	8,4	;volatile
  2105  0565  2D69               	goto	u604
  2106  0566                     u590:
  2107  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0568  1208               	bcf	8,4	;volatile
  2110  0569                     u604:
  2111  0569                     l1218:
  2112                           
  2113                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2114  0569  18F2               	btfsc	lcd_put_nibble@temp,1
  2115  056A  2D6C               	goto	u611
  2116  056B  2D70               	goto	u610
  2117  056C                     u611:
  2118  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2119  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2120  056E  1688               	bsf	8,5	;volatile
  2121  056F  2D73               	goto	u624
  2122  0570                     u610:
  2123  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0572  1288               	bcf	8,5	;volatile
  2126  0573                     u624:
  2127  0573                     l1220:
  2128                           
  2129                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2130  0573  1972               	btfsc	lcd_put_nibble@temp,2
  2131  0574  2D76               	goto	u631
  2132  0575  2D7A               	goto	u630
  2133  0576                     u631:
  2134  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0578  1708               	bsf	8,6	;volatile
  2137  0579  2D7D               	goto	u644
  2138  057A                     u630:
  2139  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2140  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2141  057C  1308               	bcf	8,6	;volatile
  2142  057D                     u644:
  2143  057D                     l1222:
  2144                           
  2145                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2146  057D  19F2               	btfsc	lcd_put_nibble@temp,3
  2147  057E  2D80               	goto	u651
  2148  057F  2D84               	goto	u650
  2149  0580                     u651:
  2150  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0582  1788               	bsf	8,7	;volatile
  2153  0583  2D87               	goto	u664
  2154  0584                     u650:
  2155  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0586  1388               	bcf	8,7	;volatile
  2158  0587                     u664:
  2159                           
  2160                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2161  0587  3006               	movlw	6
  2162  0588  00F0               	movwf	??_lcd_put_nibble
  2163  0589                     u1137:
  2164  0589  0BF0               	decfsz	??_lcd_put_nibble,f
  2165  058A  2D89               	goto	u1137
  2166  058B  0000               	nop
  2167  058C                     l1224:
  2168                           
  2169                           ;lcd.c: 122:  RD3 = 1;
  2170  058C  1283               	bcf	3,5	;RP0=0, select bank0
  2171  058D  1303               	bcf	3,6	;RP1=0, select bank0
  2172  058E  1588               	bsf	8,3	;volatile
  2173                           
  2174                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2175  058F  3006               	movlw	6
  2176  0590  00F0               	movwf	??_lcd_put_nibble
  2177  0591                     u1147:
  2178  0591  0BF0               	decfsz	??_lcd_put_nibble,f
  2179  0592  2D91               	goto	u1147
  2180  0593  0000               	nop
  2181  0594                     l1226:
  2182                           
  2183                           ;lcd.c: 124:  RD3 = 0;
  2184  0594  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0595  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0596  1188               	bcf	8,3	;volatile
  2187  0597                     l110:
  2188  0597  0008               	return
  2189  0598                     __end_of_lcd_put_nibble:
  2190                           
  2191                           	psect	text11
  2192  04B1                     __ptext11:	
  2193 ;; *************** function _lcd_busy *****************
  2194 ;; Defined at:
  2195 ;;		line 18 in file "lcd.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  busy            1    1[COMMON] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      unsigned char 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2209 ;;      Params:         0       0       0       0       0
  2210 ;;      Locals:         1       0       0       0       0
  2211 ;;      Temps:          1       0       0       0       0
  2212 ;;      Totals:         2       0       0       0       0
  2213 ;;Total ram usage:        2 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_lcd_gotoxy
  2219 ;;		_lcd_putc
  2220 ;;		_lcd_init
  2221 ;;		_addCharSpecial
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _lcd_busy
  2227  04B1                     _lcd_busy:
  2228  04B1                     l1244:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _lcd_busy: [wreg+status,2]
  2231                           
  2232                           
  2233                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2234  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2235  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2236  04B3  1608               	bsf	8,4	;volatile
  2237                           
  2238                           ;lcd.c: 25:  TRISD5 = 1;
  2239  04B4  1688               	bsf	8,5	;volatile
  2240                           
  2241                           ;lcd.c: 26:  TRISD6 = 1;
  2242  04B5  1708               	bsf	8,6	;volatile
  2243                           
  2244                           ;lcd.c: 27:  TRISD7 = 1;
  2245  04B6  1788               	bsf	8,7	;volatile
  2246                           
  2247                           ;lcd.c: 29:  RD2 = 1;
  2248  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2249  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2250  04B9  1508               	bsf	8,2	;volatile
  2251                           
  2252                           ;lcd.c: 30:  RD1 = 0;
  2253  04BA  1088               	bcf	8,1	;volatile
  2254  04BB                     l1246:
  2255                           
  2256                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2257  04BB  3006               	movlw	6
  2258  04BC  00F0               	movwf	??_lcd_busy
  2259  04BD                     u1157:
  2260  04BD  0BF0               	decfsz	??_lcd_busy,f
  2261  04BE  2CBD               	goto	u1157
  2262  04BF  0000               	nop
  2263  04C0                     l1248:
  2264                           
  2265                           ;lcd.c: 32:  RD3 = 1;
  2266  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2267  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2268  04C2  1588               	bsf	8,3	;volatile
  2269                           
  2270                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2271  04C3  3006               	movlw	6
  2272  04C4  00F0               	movwf	??_lcd_busy
  2273  04C5                     u1167:
  2274  04C5  0BF0               	decfsz	??_lcd_busy,f
  2275  04C6  2CC5               	goto	u1167
  2276  04C7  0000               	nop
  2277  04C8                     l1250:
  2278                           
  2279                           ;lcd.c: 35:  busy = RD7;
  2280  04C8  3000               	movlw	0
  2281  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2282  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2283  04CB  1B88               	btfsc	8,7	;volatile
  2284  04CC  3001               	movlw	1
  2285  04CD  00F1               	movwf	lcd_busy@busy
  2286  04CE                     l1252:
  2287                           
  2288                           ;lcd.c: 37:  RD3 = 0;
  2289  04CE  1188               	bcf	8,3	;volatile
  2290  04CF                     l1254:
  2291                           
  2292                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2293  04CF  3006               	movlw	6
  2294  04D0  00F0               	movwf	??_lcd_busy
  2295  04D1                     u1177:
  2296  04D1  0BF0               	decfsz	??_lcd_busy,f
  2297  04D2  2CD1               	goto	u1177
  2298  04D3  0000               	nop
  2299  04D4                     l1256:
  2300                           
  2301                           ;lcd.c: 39:  RD3 = 1;
  2302  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2303  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2304  04D6  1588               	bsf	8,3	;volatile
  2305  04D7                     l1258:
  2306                           
  2307                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2308  04D7  3006               	movlw	6
  2309  04D8  00F0               	movwf	??_lcd_busy
  2310  04D9                     u1187:
  2311  04D9  0BF0               	decfsz	??_lcd_busy,f
  2312  04DA  2CD9               	goto	u1187
  2313  04DB  0000               	nop
  2314  04DC                     l1260:
  2315                           
  2316                           ;lcd.c: 41:  RD3 = 0;
  2317  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2318  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2319  04DE  1188               	bcf	8,3	;volatile
  2320  04DF                     l1262:
  2321                           
  2322                           ;lcd.c: 43:  return busy;
  2323  04DF  0871               	movf	lcd_busy@busy,w
  2324  04E0                     l102:
  2325  04E0  0008               	return
  2326  04E1                     __end_of_lcd_busy:
  2327                           
  2328                           	psect	text12
  2329  0456                     __ptext12:	
  2330 ;; *************** function _declarePort *****************
  2331 ;; Defined at:
  2332 ;;		line 50 in file "counter0.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		status,2
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2346 ;;      Params:         0       0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0
  2349 ;;      Totals:         0       0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _declarePort
  2361  0456                     _declarePort:
  2362  0456                     l952:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _declarePort: [status,2]
  2365                           
  2366                           
  2367                           ;counter0.c: 51:     ANSEL = ANSELH = 0;
  2368  0456  1683               	bsf	3,5	;RP0=1, select bank3
  2369  0457  1703               	bsf	3,6	;RP1=1, select bank3
  2370  0458  0189               	clrf	9	;volatile
  2371  0459  0188               	clrf	8	;volatile
  2372                           
  2373                           ;counter0.c: 52:     TMR0 = 0;
  2374  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2375  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2376  045C  0181               	clrf	1	;volatile
  2377  045D                     l954:
  2378                           
  2379                           ;counter0.c: 53:     TMR0IF = 0;
  2380  045D  110B               	bcf	11,2	;volatile
  2381  045E                     l956:
  2382                           
  2383                           ;counter0.c: 54:     T0CS = 1;
  2384  045E  1683               	bsf	3,5	;RP0=1, select bank1
  2385  045F  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0460  1681               	bsf	1,5	;volatile
  2387  0461                     l958:
  2388                           
  2389                           ;counter0.c: 55:     T0SE = 0;
  2390  0461  1201               	bcf	1,4	;volatile
  2391  0462                     l960:
  2392                           
  2393                           ;counter0.c: 56:     GIE = PEIE = TMR0IE = 0;
  2394  0462  128B               	bcf	11,5	;volatile
  2395  0463  130B               	bcf	11,6	;volatile
  2396  0464  138B               	bcf	11,7	;volatile
  2397  0465                     l962:
  2398                           
  2399                           ;counter0.c: 57:     PSA = 1;
  2400  0465  1581               	bsf	1,3	;volatile
  2401  0466                     l964:
  2402                           
  2403                           ;counter0.c: 58:     TRISA4 = 1;
  2404  0466  1605               	bsf	5,4	;volatile
  2405  0467                     l58:
  2406  0467  0008               	return
  2407  0468                     __end_of_declarePort:
  2408  007E                     btemp	set	126	;btemp
  2409  007E                     wtemp0	set	126
  2410                           
  2411                           	psect	config
  2412                           
  2413                           ;Config register CONFIG1 @ 0x2007
  2414                           ;	Oscillator Selection bits
  2415                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2416                           ;	Watchdog Timer Enable bit
  2417                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2418                           ;	Power-up Timer Enable bit
  2419                           ;	PWRTE = OFF, PWRT disabled
  2420                           ;	RE3/MCLR pin function select bit
  2421                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2422                           ;	Code Protection bit
  2423                           ;	CP = OFF, Program memory code protection is disabled
  2424                           ;	Data Code Protection bit
  2425                           ;	CPD = OFF, Data memory code protection is disabled
  2426                           ;	Brown Out Reset Selection bits
  2427                           ;	BOREN = OFF, BOR disabled
  2428                           ;	Internal External Switchover bit
  2429                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2430                           ;	Fail-Safe Clock Monitor Enabled bit
  2431                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2432                           ;	Low Voltage Programming Enable bit
  2433                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2434                           ;	In-Circuit Debugger Mode bit
  2435                           ;	DEBUG = 0x1, unprogrammed default
  2436  2007                     	org	8199
  2437  2007  20F2               	dw	8434
  2438                           
  2439                           ;Config register CONFIG2 @ 0x2008
  2440                           ;	Brown-out Reset Selection bit
  2441                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2442                           ;	Flash Program Memory Self Write Enable bits
  2443                           ;	WRT = OFF, Write protection off
  2444  2008                     	org	8200
  2445  2008  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    27
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> main@your_name(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _printf->___lwmod
    _printf->_putch
    _putch->_lcd_putc
    ___lwmod->___lwdiv
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   11473
                                             12 BANK0      2     2      0
                        _declarePort
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    3631
                                              0 BANK0     12    10      2
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0    2587
                                             13 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2643
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           4     3      1    1409
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 10 17:21:45 2021

                      pc 0002                       l65 05E6                       l58 0467  
 __end_of_lcd_put_nibble 0598                       fsr 0004            ?_lcd_put_byte 0073  
                    l102 04E0                      l110 0597                      l113 04F1  
                    l115 0519                      l123 04B0                      l141 067D  
                    l304 07FB                      l147 048A                      l165 0720  
                    l192 0455                      l580 05DB                      l590 0553  
                    l960 0462                      l952 0456                      l962 0465  
                    l954 045D                      l964 0466                      l956 045E  
                    l958 0461                      _GIE 005F                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u610 0570                      u611 056C                      u604 0569  
                    u700 04B0                      u701 04AF                      u630 057A  
                    u710 0636                      u631 0576                      u711 0635  
                    u624 0573                      u720 0654                      u800 05D7  
                    u721 0653                      u801 05D6                      u650 0584  
                    u730 0669                      u810 0520                      u651 0580  
                    u731 0668                      u811 051F                      u644 057D  
                    u900 070C                      u740 05A0                      u901 070B  
                    u741 059F                      u590 0566                      u670 04ED  
                    u910 0720                      u830 0532                      u591 0562  
                    u671 04EC                      u911 071F                      u831 0531  
                    _PSA 040B                      u664 0587                      u920 048A  
                    u760 05B2                      u840 053C                      u921 0489  
                    u761 05B1                      u841 053B                      u825 0524  
                    u690 0491                      u930 072F                      u691 0490  
                    u755 05A4                      u931 072E                      u780 05C3  
                    u860 054F                      u940 0764                      u685 0507  
                    u781 05C2                      u861 054E                      u845 0538  
                    u941 0763                      u870 06D2                      u950 078A  
                    u871 06D1                      u775 05B3                      u855 0543  
                    u951 0789                      u880 06E6                      u960 0795  
                    u881 06E5                      u785 05BF                      u961 0794  
                    u890 06FA                      u970 079B                      u891 06F9  
                    u795 05CB                      u971 079A                      u955 0786  
                    u980 07E7                      u981 07E6                      u990 07FB  
                    u991 07FA                      fsr0 0004                      indf 0000  
                   l1220 0573                     l1212 0555                     l1300 044F  
                   l1222 057D                     l1214 055B                     l1230 04E8  
                   l1310 05AA                     l1302 0598                     l1224 058C  
                   l1216 055F                     l1240 0504                     l1232 04ED  
                   l1320 05CA                     l1312 05AE                     l1304 059A  
                   l1400 072F                     l1250 04C8                     l1226 0594  
                   l1218 0569                     l1242 0512                     l1234 04F4  
                   l1322 05D1                     l1314 05B2                     l1306 05A0  
                   l1330 0520                     l1410 075C                     l1402 0736  
                   l1260 04DC                     l1252 04CE                     l1244 04B1  
                   l1236 04F9                     l1228 04E2                     l1316 05C3  
                   l1308 05A3                     l1324 05D7                     l1340 053C  
                   l1332 0523                     l1412 0760                     l1262 04DF  
                   l1254 04CF                     l1246 04BB                     l1238 0501  
                   l1350 067E                     l1270 0496                     l1318 05C9  
                   l1342 0542                     l1334 052A                     l1430 0795  
                   l1414 0764                     l1406 0737                     l1256 04D4  
                   l1248 04C0                     l1360 0695                     l1352 0687  
                   l1272 0497                     l1280 0624                     l1344 0549  
                   l1336 052E                     l1328 051A                     l1432 079B  
                   l1424 076F                     l1416 0768                     l1408 0754  
                   l1440 07E7                     l1258 04D7                     l1370 06C8  
                   l1362 069B                     l1354 0690                     l1274 049B  
                   l1266 048C                     l1290 0655                     l1282 062C  
                   l1338 0532                     l1346 054F                     l1434 07A1  
                   l1418 076D                     l1380 06FA                     l1372 06D2  
                   l1364 06AA                     l1356 0693                     l1276 04A6  
                   l1268 0491                     l1292 065F                     l1284 0637  
                   l1436 07A8                     l1428 078B                     l1382 0702  
                   l1374 06DC                     l1366 06B3                     l1358 0694  
                   l1286 0640                     l1294 066A                     l1278 0623  
                   l1390 046C                     l1438 07DC                     l1470 05E1  
                   l1384 070C                     l1376 06E6                     l1368 06C2  
                   l1288 064A                     l1392 0478                     l1480 0601  
                   l1472 05EE                     l1464 05DC                     l1386 0716  
                   l1378 06F0                     l1394 047E                     l1554 0749  
                   l1482 0607                     l1474 05EF                     l1466 05E1  
                   l1556 0672                     l1388 046B                     l1396 0724  
                   l1484 060F                     l1476 05F4                     l1468 05E1  
                   l1398 0729                     l1478 05FA                     STR_1 0027  
                   STR_2 0024                     _T0CS 040D                     u1030 05EE  
                   u1031 05ED                     u1107 06BD                     u1117 04F6  
                   u1127 04FE                     u1137 0589                     u1147 0591  
                   _T0SE 040C                     u1157 04BD                     u1077 068B  
                   u1167 04C5                     u1087 069F                     u1177 04D1  
                   u1097 06AE                     u1187 04D9                     _PEIE 005E  
                   _TMR0 0001                     _main 05DC             lcd_busy@busy 0071  
                   btemp 007E                     start 0000          ?_lcd_put_nibble 0070  
         ??_lcd_put_byte 0074                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 05DC          __end_of___lwmod 0554     __size_of_declarePort 0012  
        __end_of_dpowers 0013                    _putch 044E                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0622            lcd_gotoxy@col 0078            lcd_gotoxy@row 0076  
     lcd_put_nibble@temp 0072                   ??_main 002C                   ?_putch 0070  
                 _ANSELH 0189                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TRISA4 042C                   _TRISD1 0441                   _TRISD2 0442  
                 _TRISD3 0443                   _TRISD4 0444                   _TRISD5 0445  
                 _TRISD6 0446                   _TRISD7 0447         __end_of_lcd_busy 04E1  
       __end_of_lcd_init 0721         __end_of_lcd_putc 067E         __end_of_lcd_puts 048B  
              ??___lwdiv 0074                ??___lwmod 007C                   _printf 0721  
          lcd_put_byte@b 0073                   putch@c 007D  __end_of__initialization 07FC  
   __end_of_lcd_put_byte 051A           __pcstackCOMMON 0070            main@your_name 0013  
          __end_of_putch 0456        lcd_gotoxy@address 0079                  ??_putch 007D  
       ??_lcd_put_nibble 0070               __pmaintext 05DC                  ?_printf 0020  
             _lcd_gotoxy 048B                ?_lcd_busy 0070                ?_lcd_init 0070  
              ?_lcd_putc 0070                ?_lcd_puts 0070               __stringtab 0003  
                ___lwdiv 0598                  ___lwmod 051A                  __ptext1 0721  
                __ptext2 044E                  __ptext3 051A                  __ptext4 0598  
                __ptext5 0468                  __ptext6 0622                  __ptext7 048B  
                __ptext8 067E                  __ptext9 04E1          __size_of_printf 00DB  
          ??_declarePort 0070                  _dpowers 0009    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
                printf@c 002B                  printf@f 0028             _lcd_put_byte 04E1  
            ?_lcd_gotoxy 0076      __end_of_declarePort 0468           __end_of_printf 07FC  
    start_initialization 07FC      __size_of_lcd_gotoxy 0026                 ??_printf 0022  
            _declarePort 0456                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_busy 0030        __size_of_lcd_init 00A3        __size_of_lcd_putc 005C  
      __size_of_lcd_puts 0023         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0078                __pstrings 0003         ___lwdiv@quotient 0075  
         __size_of_putch 0008              __stringbase 0008  __size_of_lcd_put_nibble 0044  
             printf@flag 0026               printf@prec 0027                lcd_putc@c 007C  
              lcd_puts@s 0020             ??_lcd_gotoxy 0077    __end_ofmain@your_name 0024  
     __end_of_lcd_gotoxy 04B1         __size_of___lwdiv 0044         __size_of___lwmod 003A  
     __end_of__stringtab 0009          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 0554                 __ptext11 04B1                 __ptext12 0456  
               _lcd_busy 04B1                 _lcd_init 067E                 _lcd_putc 0622  
               _lcd_puts 0468            __size_of_main 0046                printf@val 0029  
           ?_declarePort 0070          lcd_put_nibble@b 0071         ___lwmod@dividend 007A  
              stringcode 0003                 printf@ap 0025           _lcd_put_nibble 0554  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 0003  
               stringtab 0003  
