

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 10 17:42:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291                           
   292                           	psect	strings
   293  0003                     __pstrings:
   294  0003                     stringtab:
   295  0003                     __stringtab:
   296  0003                     stringcode:	
   297                           ;	String table - string pointers are 1 byte each
   298                           
   299  0003                     stringdir:
   300  0003  3000               	movlw	high stringdir
   301  0004  008A               	movwf	10
   302  0005  0804               	movf	4,w
   303  0006  0A84               	incf	4,f
   304  0007  0782               	addwf	2,f
   305  0008                     __stringbase:
   306  0008  3400               	retlw	0
   307  0009                     __end_of__stringtab:
   308  0009                     main@special_name_title:
   309  0009  3400               	retlw	0
   310  000A  3404               	retlw	4
   311  000B  3408               	retlw	8
   312  000C  3400               	retlw	0
   313  000D  341C               	retlw	28
   314  000E  3414               	retlw	20
   315  000F  341E               	retlw	30
   316  0010  3400               	retlw	0
   317  0011  3408               	retlw	8
   318  0012  3404               	retlw	4
   319  0013  3400               	retlw	0
   320  0014  340C               	retlw	12
   321  0015  3412               	retlw	18
   322  0016  3412               	retlw	18
   323  0017  340F               	retlw	15
   324  0018  3400               	retlw	0
   325  0019  3408               	retlw	8
   326  001A  3414               	retlw	20
   327  001B  3400               	retlw	0
   328  001C  340C               	retlw	12
   329  001D  3414               	retlw	20
   330  001E  341F               	retlw	31
   331  001F  3408               	retlw	8
   332  0020  3400               	retlw	0
   333  0021  340D               	retlw	13
   334  0022  3412               	retlw	18
   335  0023  3408               	retlw	8
   336  0024  3414               	retlw	20
   337  0025  3408               	retlw	8
   338  0026  3414               	retlw	20
   339  0027  341E               	retlw	30
   340  0028  3400               	retlw	0
   341  0029  3401               	retlw	1
   342  002A  340A               	retlw	10
   343  002B  3414               	retlw	20
   344  002C  3400               	retlw	0
   345  002D  341C               	retlw	28
   346  002E  3414               	retlw	20
   347  002F  341F               	retlw	31
   348  0030  3400               	retlw	0
   349  0031  3499               	retlw	153
   350  0032                     __end_ofmain@special_name_title:
   351  0032                     main@your_name:
   352  0032  344E               	retlw	78
   353  0033  3467               	retlw	103
   354  0034  3475               	retlw	117
   355  0035  3479               	retlw	121
   356  0036  3403               	retlw	3
   357  0037  346E               	retlw	110
   358  0038  3420               	retlw	32
   359  0039  3454               	retlw	84
   360  003A  3404               	retlw	4
   361  003B  346E               	retlw	110
   362  003C  3420               	retlw	32
   363  003D  3450               	retlw	80
   364  003E  3468               	retlw	104
   365  003F  3400               	retlw	0
   366  0040  3470               	retlw	112
   367  0041  340A               	retlw	10
   368  0042                     __end_ofmain@your_name:
   369  0042                     main@title:
   370  0042  3442               	retlw	66
   371  0043  3401               	retlw	1
   372  0044  3469               	retlw	105
   373  0045  3420               	retlw	32
   374  0046  3454               	retlw	84
   375  0047  3402               	retlw	2
   376  0048  3470               	retlw	112
   377  0049  3420               	retlw	32
   378  004A  3454               	retlw	84
   379  004B  3469               	retlw	105
   380  004C  346D               	retlw	109
   381  004D  3465               	retlw	101
   382  004E  3472               	retlw	114
   383  004F  3420               	retlw	32
   384  0050  3430               	retlw	48
   385  0051  340A               	retlw	10
   386  0052                     __end_ofmain@title:
   387  000E                     _TMR1L	set	14
   388  000F                     _TMR1H	set	15
   389  0044                     _RD4	set	68
   390  0045                     _RD5	set	69
   391  0046                     _RD6	set	70
   392  0047                     _RD7	set	71
   393  0043                     _RD3	set	67
   394  0041                     _RD1	set	65
   395  0042                     _RD2	set	66
   396  0082                     _T1SYNC	set	130
   397  0080                     _TMR1ON	set	128
   398  0084                     _T1CKPS0	set	132
   399  0085                     _T1CKPS1	set	133
   400  005E                     _PEIE	set	94
   401  005F                     _GIE	set	95
   402  0081                     _TMR1CS	set	129
   403  0060                     _TMR1IF	set	96
   404  0442                     _TRISD2	set	1090
   405  0441                     _TRISD1	set	1089
   406  0443                     _TRISD3	set	1091
   407  0447                     _TRISD7	set	1095
   408  0446                     _TRISD6	set	1094
   409  0445                     _TRISD5	set	1093
   410  0444                     _TRISD4	set	1092
   411  0460                     _TMR1IE	set	1120
   412                           
   413                           	psect	cinit
   414  07FC                     start_initialization:	
   415                           ; #config settings
   416                           
   417  07FC                     __initialization:
   418  07FC                     end_of_initialization:	
   419                           ;End of C runtime variable initialization code
   420                           
   421  07FC                     __end_of__initialization:
   422  07FC  0183               	clrf	3
   423  07FD  120A  118A  2F05   	ljmp	_main	;jump to C main() function
   424                           
   425                           	psect	cstackCOMMON
   426  0070                     __pcstackCOMMON:
   427  0070                     ?_lcd_busy:
   428  0070                     ??_lcd_busy:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_lcd_init:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_lcd_putc:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_lcd_ShiftRight:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_lcd_ShiftLeft:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_addCharSpecial:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_delay100us:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_main:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_lcd_put_nibble:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_lcd_put_nibble:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_getLengthArr:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     delay100us@n:	
   462                           ; 2 bytes @ 0x0
   463                           
   464                           
   465                           ; 2 bytes @ 0x0
   466  0070                     	ds	1
   467  0071                     lcd_busy@busy:
   468  0071                     lcd_put_nibble@b:	
   469                           ; 1 bytes @ 0x1
   470                           
   471                           
   472                           ; 1 bytes @ 0x1
   473  0071                     	ds	1
   474  0072                     ??_getLengthArr:
   475  0072                     ??_delay100us:	
   476                           ; 1 bytes @ 0x2
   477                           
   478  0072                     getLengthArr@character:	
   479                           ; 1 bytes @ 0x2
   480                           
   481  0072                     lcd_put_nibble@temp:	
   482                           ; 1 bytes @ 0x2
   483                           
   484                           
   485                           ; 1 bytes @ 0x2
   486  0072                     	ds	1
   487  0073                     ?_lcd_put_byte:
   488  0073                     lcd_put_byte@b:	
   489                           ; 1 bytes @ 0x3
   490                           
   491  0073                     getLengthArr@i:	
   492                           ; 1 bytes @ 0x3
   493                           
   494                           
   495                           ; 2 bytes @ 0x3
   496  0073                     	ds	1
   497  0074                     ??_lcd_put_byte:
   498                           
   499                           ; 1 bytes @ 0x4
   500  0074                     	ds	1
   501  0075                     lcd_put_byte@rs:
   502                           
   503                           ; 1 bytes @ 0x5
   504  0075                     	ds	1
   505  0076                     ??_lcd_init:
   506  0076                     ?_lcd_gotoxy:	
   507                           ; 1 bytes @ 0x6
   508                           
   509  0076                     ??_lcd_ShiftRight:	
   510                           ; 1 bytes @ 0x6
   511                           
   512  0076                     ??_lcd_ShiftLeft:	
   513                           ; 1 bytes @ 0x6
   514                           
   515  0076                     ??_addCharSpecial:	
   516                           ; 1 bytes @ 0x6
   517                           
   518  0076                     lcd_gotoxy@row:	
   519                           ; 1 bytes @ 0x6
   520                           
   521                           
   522                           ; 1 bytes @ 0x6
   523  0076                     	ds	1
   524  0077                     ??_lcd_gotoxy:
   525  0077                     addCharSpecial@i:	
   526                           ; 1 bytes @ 0x7
   527                           
   528                           
   529                           ; 2 bytes @ 0x7
   530  0077                     	ds	1
   531  0078                     lcd_gotoxy@col:
   532                           
   533                           ; 1 bytes @ 0x8
   534  0078                     	ds	1
   535  0079                     addCharSpecial@character:
   536  0079                     lcd_gotoxy@address:	
   537                           ; 1 bytes @ 0x9
   538                           
   539                           
   540                           ; 1 bytes @ 0x9
   541  0079                     	ds	1
   542  007A                     ??_lcd_putc:
   543                           
   544                           ; 1 bytes @ 0xA
   545  007A                     	ds	2
   546  007C                     lcd_putc@c:
   547                           
   548                           ; 1 bytes @ 0xC
   549  007C                     	ds	1
   550  007D                     ??_main:
   551                           
   552                           	psect	cstackBANK0
   553  0020                     __pcstackBANK0:	
   554                           ; 1 bytes @ 0xD
   555                           
   556  0020                     main@times:
   557                           
   558                           ; 2 bytes @ 0x0
   559  0020                     	ds	2
   560  0022                     main@length:
   561                           
   562                           ; 2 bytes @ 0x2
   563  0022                     	ds	2
   564  0024                     main@i:
   565                           
   566                           ; 2 bytes @ 0x4
   567  0024                     	ds	2
   568                           
   569                           	psect	maintext
   570  0705                     __pmaintext:	
   571 ;;
   572 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   573 ;;
   574 ;; *************** function _main *****************
   575 ;; Defined at:
   576 ;;		line 63 in file "bai4.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  i               2    4[BANK0 ] unsigned int 
   581 ;;  length          2    2[BANK0 ] unsigned int 
   582 ;;  times           2    0[BANK0 ] unsigned int 
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : B00/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       6       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         0       6       0       0       0
   596 ;;Total ram usage:        6 bytes
   597 ;; Hardware stack levels required when called: 4
   598 ;; This function calls:
   599 ;;		_addCharSpecial
   600 ;;		_delay100us
   601 ;;		_getLengthArr
   602 ;;		_lcd_ShiftLeft
   603 ;;		_lcd_ShiftRight
   604 ;;		_lcd_gotoxy
   605 ;;		_lcd_init
   606 ;;		_lcd_putc
   607 ;; This function is called by:
   608 ;;		Startup code after reset
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           
   613                           ;psect for function _main
   614  0705                     _main:
   615  0705                     l1311:	
   616                           ;incstack = 0
   617                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   618                           
   619  0705  1283               	bcf	3,5	;RP0=0, select bank0
   620  0706  1303               	bcf	3,6	;RP1=0, select bank0
   621  0707  01A2               	clrf	main@length
   622  0708  01A3               	clrf	main@length+1
   623  0709                     l1313:
   624  0709  3003               	movlw	3
   625  070A  00A0               	movwf	main@times
   626  070B  3000               	movlw	0
   627  070C  00A1               	movwf	main@times+1
   628  070D                     l1315:
   629                           
   630                           ;bai4.c: 76:     lcd_init();
   631  070D  120A  118A  2662  120A  118A  	fcall	_lcd_init
   632  0712                     l1317:
   633                           
   634                           ;bai4.c: 77:     addCharSpecial(special_name_title);
   635  0712  3001               	movlw	(low ((main@special_name_title-__stringbase)| (0+32768)))& (0+255)
   636  0713  120A  118A  25BF  120A  118A  	fcall	_addCharSpecial
   637                           
   638                           ;bai4.c: 78:     while(times--) {
   639  0718  2F9E               	goto	l1347
   640  0719                     l1319:
   641                           
   642                           ;bai4.c: 79:         lcd_putc('\f');
   643  0719  300C               	movlw	12
   644  071A  120A  118A  2606  120A  118A  	fcall	_lcd_putc
   645  071F                     l1321:
   646                           
   647                           ;bai4.c: 80:         delay100us(10000/2);
   648  071F  3088               	movlw	136
   649  0720  00F0               	movwf	delay100us@n
   650  0721  3013               	movlw	19
   651  0722  00F1               	movwf	delay100us@n+1
   652  0723  120A  118A  24EB  120A  118A  	fcall	_delay100us
   653  0728                     l1323:
   654                           
   655                           ;bai4.c: 81:         lcd_gotoxy(0, 0);
   656  0728  01F6               	clrf	lcd_gotoxy@row
   657  0729  3000               	movlw	0
   658  072A  120A  118A  24C5  120A  118A  	fcall	_lcd_gotoxy
   659                           
   660                           ;bai4.c: 82:         length = getLengthArr(your_name);
   661  072F  302A               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   662  0730  120A  118A  24A8  120A  118A  	fcall	_getLengthArr
   663  0735  0871               	movf	?_getLengthArr+1,w
   664  0736  1283               	bcf	3,5	;RP0=0, select bank0
   665  0737  1303               	bcf	3,6	;RP1=0, select bank0
   666  0738  00A3               	movwf	main@length+1
   667  0739  0870               	movf	?_getLengthArr,w
   668  073A  00A2               	movwf	main@length
   669  073B                     l1325:
   670                           
   671                           ;bai4.c: 83:         for(i = 0; i < length; i++) {
   672  073B  01A4               	clrf	main@i
   673  073C  01A5               	clrf	main@i+1
   674  073D  2F53               	goto	l1331
   675  073E                     l1327:
   676                           
   677                           ;bai4.c: 84:             lcd_putc(your_name[i]);
   678  073E  0824               	movf	main@i,w
   679  073F  3E2A               	addlw	low ((main@your_name-__stringbase)| (0+32768))
   680  0740  0084               	movwf	4
   681  0741  120A  118A  2003  120A  118A  	fcall	stringdir
   682  0746  120A  118A  2606  120A  118A  	fcall	_lcd_putc
   683  074B                     l1329:
   684                           
   685                           ;bai4.c: 85:         }
   686  074B  3001               	movlw	1
   687  074C  1283               	bcf	3,5	;RP0=0, select bank0
   688  074D  1303               	bcf	3,6	;RP1=0, select bank0
   689  074E  07A4               	addwf	main@i,f
   690  074F  1803               	skipnc
   691  0750  0AA5               	incf	main@i+1,f
   692  0751  3000               	movlw	0
   693  0752  07A5               	addwf	main@i+1,f
   694  0753                     l1331:
   695  0753  0823               	movf	main@length+1,w
   696  0754  0225               	subwf	main@i+1,w
   697  0755  1D03               	skipz
   698  0756  2F59               	goto	u715
   699  0757  0822               	movf	main@length,w
   700  0758  0224               	subwf	main@i,w
   701  0759                     u715:
   702  0759  1C03               	skipc
   703  075A  2F5C               	goto	u711
   704  075B  2F5D               	goto	u710
   705  075C                     u711:
   706  075C  2F3E               	goto	l1327
   707  075D                     u710:
   708  075D                     l1333:
   709                           
   710                           ;bai4.c: 86:         length = getLengthArr(title);
   711  075D  303A               	movlw	(low ((main@title-__stringbase)| (0+32768)))& (0+255)
   712  075E  120A  118A  24A8  120A  118A  	fcall	_getLengthArr
   713  0763  0871               	movf	?_getLengthArr+1,w
   714  0764  1283               	bcf	3,5	;RP0=0, select bank0
   715  0765  1303               	bcf	3,6	;RP1=0, select bank0
   716  0766  00A3               	movwf	main@length+1
   717  0767  0870               	movf	?_getLengthArr,w
   718  0768  00A2               	movwf	main@length
   719  0769                     l1335:
   720                           
   721                           ;bai4.c: 87:         lcd_gotoxy(0, 1);
   722  0769  01F6               	clrf	lcd_gotoxy@row
   723  076A  0AF6               	incf	lcd_gotoxy@row,f
   724  076B  3000               	movlw	0
   725  076C  120A  118A  24C5  120A  118A  	fcall	_lcd_gotoxy
   726  0771                     l1337:
   727                           
   728                           ;bai4.c: 88:         for(i = 0; i < length; i++) {
   729  0771  1283               	bcf	3,5	;RP0=0, select bank0
   730  0772  1303               	bcf	3,6	;RP1=0, select bank0
   731  0773  01A4               	clrf	main@i
   732  0774  01A5               	clrf	main@i+1
   733  0775  2F8B               	goto	l1343
   734  0776                     l1339:
   735                           
   736                           ;bai4.c: 89:             lcd_putc(title[i]);
   737  0776  0824               	movf	main@i,w
   738  0777  3E3A               	addlw	low ((main@title-__stringbase)| (0+32768))
   739  0778  0084               	movwf	4
   740  0779  120A  118A  2003  120A  118A  	fcall	stringdir
   741  077E  120A  118A  2606  120A  118A  	fcall	_lcd_putc
   742  0783                     l1341:
   743                           
   744                           ;bai4.c: 90:         }
   745  0783  3001               	movlw	1
   746  0784  1283               	bcf	3,5	;RP0=0, select bank0
   747  0785  1303               	bcf	3,6	;RP1=0, select bank0
   748  0786  07A4               	addwf	main@i,f
   749  0787  1803               	skipnc
   750  0788  0AA5               	incf	main@i+1,f
   751  0789  3000               	movlw	0
   752  078A  07A5               	addwf	main@i+1,f
   753  078B                     l1343:
   754  078B  0823               	movf	main@length+1,w
   755  078C  0225               	subwf	main@i+1,w
   756  078D  1D03               	skipz
   757  078E  2F91               	goto	u725
   758  078F  0822               	movf	main@length,w
   759  0790  0224               	subwf	main@i,w
   760  0791                     u725:
   761  0791  1C03               	skipc
   762  0792  2F94               	goto	u721
   763  0793  2F95               	goto	u720
   764  0794                     u721:
   765  0794  2F76               	goto	l1339
   766  0795                     u720:
   767  0795                     l1345:
   768                           
   769                           ;bai4.c: 91:         delay100us(10000/2);
   770  0795  3088               	movlw	136
   771  0796  00F0               	movwf	delay100us@n
   772  0797  3013               	movlw	19
   773  0798  00F1               	movwf	delay100us@n+1
   774  0799  120A  118A  24EB  120A  118A  	fcall	_delay100us
   775  079E                     l1347:
   776                           
   777                           ;bai4.c: 78:     while(times--) {
   778  079E  3001               	movlw	1
   779  079F  1283               	bcf	3,5	;RP0=0, select bank0
   780  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   781  07A1  02A0               	subwf	main@times,f
   782  07A2  3000               	movlw	0
   783  07A3  1C03               	skipc
   784  07A4  03A1               	decf	main@times+1,f
   785  07A5  02A1               	subwf	main@times+1,f
   786  07A6  0A20               	incf	main@times,w
   787  07A7  1D03               	skipz
   788  07A8  2FAD               	goto	u731
   789  07A9  0A21               	incf	main@times+1,w
   790  07AA  1D03               	btfss	3,2
   791  07AB  2FAD               	goto	u731
   792  07AC  2FAE               	goto	u730
   793  07AD                     u731:
   794  07AD  2F19               	goto	l1319
   795  07AE                     u730:
   796  07AE                     l1349:
   797                           
   798                           ;bai4.c: 93:     for(i = 0; i < 2; i++) {
   799  07AE  01A4               	clrf	main@i
   800  07AF  01A5               	clrf	main@i+1
   801  07B0                     l1355:
   802                           
   803                           ;bai4.c: 94:         delay100us(10000);
   804  07B0  3010               	movlw	16
   805  07B1  00F0               	movwf	delay100us@n
   806  07B2  3027               	movlw	39
   807  07B3  00F1               	movwf	delay100us@n+1
   808  07B4  120A  118A  24EB  120A  118A  	fcall	_delay100us
   809                           
   810                           ;bai4.c: 95:         lcd_ShiftRight();
   811  07B9  120A  118A  249D  120A  118A  	fcall	_lcd_ShiftRight
   812  07BE                     l1357:
   813                           
   814                           ;bai4.c: 96:     }
   815  07BE  3001               	movlw	1
   816  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   817  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   818  07C1  07A4               	addwf	main@i,f
   819  07C2  1803               	skipnc
   820  07C3  0AA5               	incf	main@i+1,f
   821  07C4  3000               	movlw	0
   822  07C5  07A5               	addwf	main@i+1,f
   823  07C6                     l1359:
   824  07C6  3000               	movlw	0
   825  07C7  0225               	subwf	main@i+1,w
   826  07C8  3002               	movlw	2
   827  07C9  1903               	skipnz
   828  07CA  0224               	subwf	main@i,w
   829  07CB  1C03               	skipc
   830  07CC  2FCE               	goto	u741
   831  07CD  2FCF               	goto	u740
   832  07CE                     u741:
   833  07CE  2FB0               	goto	l1355
   834  07CF                     u740:
   835  07CF                     l1361:
   836                           
   837                           ;bai4.c: 97:     for(i = 0; i < 2; i++) {
   838  07CF  01A4               	clrf	main@i
   839  07D0  01A5               	clrf	main@i+1
   840  07D1                     l1367:
   841                           
   842                           ;bai4.c: 98:         delay100us(10000);
   843  07D1  3010               	movlw	16
   844  07D2  00F0               	movwf	delay100us@n
   845  07D3  3027               	movlw	39
   846  07D4  00F1               	movwf	delay100us@n+1
   847  07D5  120A  118A  24EB  120A  118A  	fcall	_delay100us
   848                           
   849                           ;bai4.c: 99:         lcd_ShiftLeft();
   850  07DA  120A  118A  2492  120A  118A  	fcall	_lcd_ShiftLeft
   851  07DF                     l1369:
   852                           
   853                           ;bai4.c: 100:     }
   854  07DF  3001               	movlw	1
   855  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   856  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   857  07E2  07A4               	addwf	main@i,f
   858  07E3  1803               	skipnc
   859  07E4  0AA5               	incf	main@i+1,f
   860  07E5  3000               	movlw	0
   861  07E6  07A5               	addwf	main@i+1,f
   862  07E7                     l1371:
   863  07E7  3000               	movlw	0
   864  07E8  0225               	subwf	main@i+1,w
   865  07E9  3002               	movlw	2
   866  07EA  1903               	skipnz
   867  07EB  0224               	subwf	main@i,w
   868  07EC  1C03               	skipc
   869  07ED  2FEF               	goto	u751
   870  07EE  2FF0               	goto	u750
   871  07EF                     u751:
   872  07EF  2FD1               	goto	l1367
   873  07F0                     u750:
   874  07F0                     l1373:
   875                           
   876                           ;bai4.c: 101:     delay100us(10000);
   877  07F0  3010               	movlw	16
   878  07F1  00F0               	movwf	delay100us@n
   879  07F2  3027               	movlw	39
   880  07F3  00F1               	movwf	delay100us@n+1
   881  07F4  120A  118A  24EB  120A  118A  	fcall	_delay100us
   882  07F9                     l88:
   883  07F9  120A  118A  2800   	ljmp	start
   884  07FC                     __end_of_main:
   885                           
   886                           	psect	text1
   887  0606                     __ptext1:	
   888 ;; *************** function _lcd_putc *****************
   889 ;; Defined at:
   890 ;;		line 190 in file "../Timer0_bai3.X/lcd.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  c               1    wreg     unsigned char 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  c               1   12[COMMON] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         1       0       0       0       0
   906 ;;      Temps:          2       0       0       0       0
   907 ;;      Totals:         3       0       0       0       0
   908 ;;Total ram usage:        3 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 3
   911 ;; This function calls:
   912 ;;		_lcd_busy
   913 ;;		_lcd_gotoxy
   914 ;;		_lcd_put_byte
   915 ;; This function is called by:
   916 ;;		_main
   917 ;;		_lcd_puts
   918 ;;		_lcd_String_Delay
   919 ;;		_putch
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _lcd_putc
   925  0606                     _lcd_putc:
   926                           
   927                           ;incstack = 0
   928                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   929                           ;lcd_putc@c stored from wreg
   930  0606  00FC               	movwf	lcd_putc@c
   931  0607                     l1285:
   932                           
   933                           ;../Timer0_bai3.X/lcd.c: 190: void lcd_putc(char c);../Timer0_bai3.X/lcd.c: 190: void lc
      +                          d_putc(char c);../Timer0_bai3.X/lcd.c: 191: {;../Timer0_bai3.X/lcd.c: 191: {;../Timer0_b
      +                          ai3.X/lcd.c: 195:  switch(c);../Timer0_bai3.X/lcd.c: 195:  switch(c)
   934  0607  2E4E               	goto	l1301
   935  0608                     l1287:
   936                           
   937                           ;../Timer0_bai3.X/lcd.c: 198:    lcd_put_byte(0,1);;../Timer0_bai3.X/lcd.c: 198:    lcd_
      +                          put_byte(0,1);
   938  0608  01F3               	clrf	lcd_put_byte@b
   939  0609  0AF3               	incf	lcd_put_byte@b,f
   940  060A  3000               	movlw	0
   941  060B  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
   942  0610                     l1289:	
   943                           ;../Timer0_bai3.X/lcd.c: 199:    while(lcd_busy());;../Timer0_bai3.X/lcd.c: 199:    whil
      +                          e(lcd_busy());
   944                           
   945  0610  120A  118A  2512  120A  118A  	fcall	_lcd_busy
   946  0615  3A00               	xorlw	0
   947  0616  1D03               	skipz
   948  0617  2E19               	goto	u681
   949  0618  2E1A               	goto	u680
   950  0619                     u681:
   951  0619  2E10               	goto	l1289
   952  061A                     u680:
   953  061A  2E61               	goto	l160
   954  061B                     l1291:
   955                           
   956                           ;../Timer0_bai3.X/lcd.c: 202:    lcd_gotoxy(0,1);;../Timer0_bai3.X/lcd.c: 202:    lcd_go
      +                          toxy(0,1);
   957  061B  01F6               	clrf	lcd_gotoxy@row
   958  061C  0AF6               	incf	lcd_gotoxy@row,f
   959  061D  3000               	movlw	0
   960  061E  120A  118A  24C5  120A  118A  	fcall	_lcd_gotoxy
   961                           
   962                           ;../Timer0_bai3.X/lcd.c: 203:    break;;../Timer0_bai3.X/lcd.c: 203:    break;
   963  0623  2E61               	goto	l160
   964  0624                     l1293:
   965                           
   966                           ;../Timer0_bai3.X/lcd.c: 205:    lcd_put_byte(0,0x10);;../Timer0_bai3.X/lcd.c: 205:    l
      +                          cd_put_byte(0,0x10);
   967  0624  3010               	movlw	16
   968  0625  00FA               	movwf	??_lcd_putc
   969  0626  087A               	movf	??_lcd_putc,w
   970  0627  00F3               	movwf	lcd_put_byte@b
   971  0628  3000               	movlw	0
   972  0629  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
   973  062E                     l1295:	
   974                           ;../Timer0_bai3.X/lcd.c: 206:    while(lcd_busy());;../Timer0_bai3.X/lcd.c: 206:    whil
      +                          e(lcd_busy());
   975                           
   976  062E  120A  118A  2512  120A  118A  	fcall	_lcd_busy
   977  0633  3A00               	xorlw	0
   978  0634  1D03               	skipz
   979  0635  2E37               	goto	u691
   980  0636  2E38               	goto	u690
   981  0637                     u691:
   982  0637  2E2E               	goto	l1295
   983  0638                     u690:
   984  0638  2E61               	goto	l160
   985  0639                     l1297:
   986                           
   987                           ;../Timer0_bai3.X/lcd.c: 210:     {;../Timer0_bai3.X/lcd.c: 210:     {;../Timer0_bai3.X/
      +                          lcd.c: 211:     lcd_put_byte(1,c);;../Timer0_bai3.X/lcd.c: 211:     lcd_put_byte(1,c);
   988  0639  087C               	movf	lcd_putc@c,w
   989  063A  00FA               	movwf	??_lcd_putc
   990  063B  087A               	movf	??_lcd_putc,w
   991  063C  00F3               	movwf	lcd_put_byte@b
   992  063D  3001               	movlw	1
   993  063E  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
   994  0643                     l1299:	
   995                           ;../Timer0_bai3.X/lcd.c: 212:     while(lcd_busy());;../Timer0_bai3.X/lcd.c: 212:     wh
      +                          ile(lcd_busy());
   996                           
   997  0643  120A  118A  2512  120A  118A  	fcall	_lcd_busy
   998  0648  3A00               	xorlw	0
   999  0649  1D03               	skipz
  1000  064A  2E4C               	goto	u701
  1001  064B  2E4D               	goto	u700
  1002  064C                     u701:
  1003  064C  2E43               	goto	l1299
  1004  064D                     u700:
  1005  064D  2E61               	goto	l160
  1006  064E                     l1301:
  1007  064E  087C               	movf	lcd_putc@c,w
  1008  064F  00FA               	movwf	??_lcd_putc
  1009  0650  01FB               	clrf	??_lcd_putc+1
  1010                           
  1011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1012                           ; Switch size 1, requested type "simple"
  1013                           ; Number of cases is 1, Range of values is 0 to 0
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte            4     3 (average)
  1017                           ; direct_byte           11     8 (fixed)
  1018                           ; jumptable            260     6 (fixed)
  1019                           ;	Chosen strategy is simple_byte
  1020  0651  087B               	movf	??_lcd_putc+1,w
  1021  0652  3A00               	xorlw	0	; case 0
  1022  0653  1903               	skipnz
  1023  0654  2E56               	goto	l1433
  1024  0655  2E39               	goto	l1297
  1025  0656                     l1433:
  1026                           
  1027                           ; Switch size 1, requested type "simple"
  1028                           ; Number of cases is 3, Range of values is 8 to 12
  1029                           ; switch strategies available:
  1030                           ; Name         Instructions Cycles
  1031                           ; simple_byte           10     6 (average)
  1032                           ; direct_byte           26    11 (fixed)
  1033                           ; jumptable            263     9 (fixed)
  1034                           ;	Chosen strategy is simple_byte
  1035  0656  087A               	movf	??_lcd_putc,w
  1036  0657  3A08               	xorlw	8	; case 8
  1037  0658  1903               	skipnz
  1038  0659  2E24               	goto	l1293
  1039  065A  3A02               	xorlw	2	; case 10
  1040  065B  1903               	skipnz
  1041  065C  2E1B               	goto	l1291
  1042  065D  3A06               	xorlw	6	; case 12
  1043  065E  1903               	skipnz
  1044  065F  2E08               	goto	l1287
  1045  0660  2E39               	goto	l1297
  1046  0661                     l160:
  1047  0661  0008               	return
  1048  0662                     __end_of_lcd_putc:
  1049                           
  1050                           	psect	text2
  1051  04C5                     __ptext2:	
  1052 ;; *************** function _lcd_gotoxy *****************
  1053 ;; Defined at:
  1054 ;;		line 167 in file "../Timer0_bai3.X/lcd.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  col             1    wreg     unsigned char 
  1057 ;;  row             1    6[COMMON] unsigned char 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  col             1    8[COMMON] unsigned char 
  1060 ;;  address         1    9[COMMON] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         1       0       0       0       0
  1071 ;;      Locals:         2       0       0       0       0
  1072 ;;      Temps:          1       0       0       0       0
  1073 ;;      Totals:         4       0       0       0       0
  1074 ;;Total ram usage:        4 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 2
  1077 ;; This function calls:
  1078 ;;		_lcd_busy
  1079 ;;		_lcd_put_byte
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;;		_lcd_putc
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           
  1087                           ;psect for function _lcd_gotoxy
  1088  04C5                     _lcd_gotoxy:
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1092                           ;lcd_gotoxy@col stored from wreg
  1093  04C5  00F8               	movwf	lcd_gotoxy@col
  1094  04C6                     l1189:
  1095                           
  1096                           ;../Timer0_bai3.X/lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);../T
      +                          imer0_bai3.X/lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);../Timer0
      +                          _bai3.X/lcd.c: 168: {;../Timer0_bai3.X/lcd.c: 168: {;../Timer0_bai3.X/lcd.c: 170:  unsig
      +                          ned char address;;../Timer0_bai3.X/lcd.c: 170:  unsigned char address;;../Timer0_bai3.X/
      +                          lcd.c: 173:  if(row!=0);../Timer0_bai3.X/lcd.c: 173:  if(row!=0)
  1097  04C6  0876               	movf	lcd_gotoxy@row,w
  1098  04C7  1903               	btfsc	3,2
  1099  04C8  2CCA               	goto	u551
  1100  04C9  2CCB               	goto	u550
  1101  04CA                     u551:
  1102  04CA  2CD0               	goto	l1193
  1103  04CB                     u550:
  1104  04CB                     l1191:
  1105                           
  1106                           ;../Timer0_bai3.X/lcd.c: 174:   address=0x40;;../Timer0_bai3.X/lcd.c: 174:   address=0x4
      +                          0;
  1107  04CB  3040               	movlw	64
  1108  04CC  00F7               	movwf	??_lcd_gotoxy
  1109  04CD  0877               	movf	??_lcd_gotoxy,w
  1110  04CE  00F9               	movwf	lcd_gotoxy@address
  1111  04CF  2CD1               	goto	l1195
  1112  04D0                     l1193:
  1113                           
  1114                           ;../Timer0_bai3.X/lcd.c: 176:   address=0;;../Timer0_bai3.X/lcd.c: 176:   address=0;
  1115  04D0  01F9               	clrf	lcd_gotoxy@address
  1116  04D1                     l1195:
  1117                           
  1118                           ;../Timer0_bai3.X/lcd.c: 178:  address += col;;../Timer0_bai3.X/lcd.c: 178:  address += 
      +                          col;
  1119  04D1  0878               	movf	lcd_gotoxy@col,w
  1120  04D2  00F7               	movwf	??_lcd_gotoxy
  1121  04D3  0877               	movf	??_lcd_gotoxy,w
  1122  04D4  07F9               	addwf	lcd_gotoxy@address,f
  1123  04D5                     l1197:
  1124                           
  1125                           ;../Timer0_bai3.X/lcd.c: 180:  lcd_put_byte(0,0x80|address);;../Timer0_bai3.X/lcd.c: 180
      +                          :  lcd_put_byte(0,0x80|address);
  1126  04D5  0879               	movf	lcd_gotoxy@address,w
  1127  04D6  3880               	iorlw	128
  1128  04D7  00F7               	movwf	??_lcd_gotoxy
  1129  04D8  0877               	movf	??_lcd_gotoxy,w
  1130  04D9  00F3               	movwf	lcd_put_byte@b
  1131  04DA  3000               	movlw	0
  1132  04DB  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1133  04E0                     l1199:	
  1134                           ;../Timer0_bai3.X/lcd.c: 181:  while(lcd_busy());;../Timer0_bai3.X/lcd.c: 181:  while(lc
      +                          d_busy());
  1135                           
  1136  04E0  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1137  04E5  3A00               	xorlw	0
  1138  04E6  1D03               	skipz
  1139  04E7  2CE9               	goto	u561
  1140  04E8  2CEA               	goto	u560
  1141  04E9                     u561:
  1142  04E9  2CE0               	goto	l1199
  1143  04EA                     u560:
  1144  04EA                     l142:
  1145  04EA  0008               	return
  1146  04EB                     __end_of_lcd_gotoxy:
  1147                           
  1148                           	psect	text3
  1149  0662                     __ptext3:	
  1150 ;; *************** function _lcd_init *****************
  1151 ;; Defined at:
  1152 ;;		line 241 in file "../Timer0_bai3.X/lcd.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  i               1    0        unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, pclath, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          2       0       0       0       0
  1169 ;;      Totals:         2       0       0       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 2
  1173 ;; This function calls:
  1174 ;;		_lcd_busy
  1175 ;;		_lcd_put_byte
  1176 ;;		_lcd_put_nibble
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _lcd_init
  1184  0662                     _lcd_init:
  1185  0662                     l1247:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1188                           
  1189                           
  1190                           ;../Timer0_bai3.X/lcd.c: 244: unsigned char i;;../Timer0_bai3.X/lcd.c: 244: unsigned cha
      +                          r i;;../Timer0_bai3.X/lcd.c: 247:  TRISD3 = 0;;../Timer0_bai3.X/lcd.c: 247:  TRISD3 = 0;
  1191  0662  1683               	bsf	3,5	;RP0=1, select bank1
  1192  0663  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0664  1188               	bcf	8,3	;volatile
  1194                           
  1195                           ;../Timer0_bai3.X/lcd.c: 248:  TRISD1 = 0;;../Timer0_bai3.X/lcd.c: 248:  TRISD1 = 0;
  1196  0665  1088               	bcf	8,1	;volatile
  1197                           
  1198                           ;../Timer0_bai3.X/lcd.c: 249:  TRISD2 = 0;;../Timer0_bai3.X/lcd.c: 249:  TRISD2 = 0;
  1199  0666  1108               	bcf	8,2	;volatile
  1200                           
  1201                           ;../Timer0_bai3.X/lcd.c: 250:  TRISD4 = 0;;../Timer0_bai3.X/lcd.c: 250:  TRISD4 = 0;
  1202  0667  1208               	bcf	8,4	;volatile
  1203                           
  1204                           ;../Timer0_bai3.X/lcd.c: 251:  TRISD5 = 0;;../Timer0_bai3.X/lcd.c: 251:  TRISD5 = 0;
  1205  0668  1288               	bcf	8,5	;volatile
  1206                           
  1207                           ;../Timer0_bai3.X/lcd.c: 252:  TRISD6 = 0;;../Timer0_bai3.X/lcd.c: 252:  TRISD6 = 0;
  1208  0669  1308               	bcf	8,6	;volatile
  1209                           
  1210                           ;../Timer0_bai3.X/lcd.c: 253:  TRISD7 = 0;;../Timer0_bai3.X/lcd.c: 253:  TRISD7 = 0;
  1211  066A  1388               	bcf	8,7	;volatile
  1212  066B                     l1249:
  1213                           
  1214                           ;../Timer0_bai3.X/lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));;../Timer0
      +                          _bai3.X/lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1215  066B  3014               	movlw	20
  1216  066C  00F7               	movwf	??_lcd_init+1
  1217  066D  3079               	movlw	121
  1218  066E  00F6               	movwf	??_lcd_init
  1219  066F                     u807:
  1220  066F  0BF6               	decfsz	??_lcd_init,f
  1221  0670  2E6F               	goto	u807
  1222  0671  0BF7               	decfsz	??_lcd_init+1,f
  1223  0672  2E6F               	goto	u807
  1224  0673  2E74               	nop2
  1225  0674                     l1251:
  1226                           
  1227                           ;../Timer0_bai3.X/lcd.c: 257:  RD1 = 0;;../Timer0_bai3.X/lcd.c: 257:  RD1 = 0;
  1228  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0676  1088               	bcf	8,1	;volatile
  1231  0677                     l1253:
  1232                           
  1233                           ;../Timer0_bai3.X/lcd.c: 258:  RD2 = 0;;../Timer0_bai3.X/lcd.c: 258:  RD2 = 0;
  1234  0677  1108               	bcf	8,2	;volatile
  1235  0678                     l1255:
  1236                           
  1237                           ;../Timer0_bai3.X/lcd.c: 259:  RD3 = 0;;../Timer0_bai3.X/lcd.c: 259:  RD3 = 0;
  1238  0678  1188               	bcf	8,3	;volatile
  1239  0679                     l1257:
  1240                           
  1241                           ;../Timer0_bai3.X/lcd.c: 261:  lcd_put_nibble(3);;../Timer0_bai3.X/lcd.c: 261:  lcd_put_
      +                          nibble(3);
  1242  0679  3003               	movlw	3
  1243  067A  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1244  067F                     l1259:
  1245                           
  1246                           ;../Timer0_bai3.X/lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));;../Timer0
      +                          _bai3.X/lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1247  067F  300D               	movlw	13
  1248  0680  00F7               	movwf	??_lcd_init+1
  1249  0681  30FB               	movlw	251
  1250  0682  00F6               	movwf	??_lcd_init
  1251  0683                     u817:
  1252  0683  0BF6               	decfsz	??_lcd_init,f
  1253  0684  2E83               	goto	u817
  1254  0685  0BF7               	decfsz	??_lcd_init+1,f
  1255  0686  2E83               	goto	u817
  1256  0687  2E88               	nop2
  1257                           
  1258                           ;../Timer0_bai3.X/lcd.c: 263:  lcd_put_nibble(3);;../Timer0_bai3.X/lcd.c: 263:  lcd_put_
      +                          nibble(3);
  1259  0688  3003               	movlw	3
  1260  0689  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1261  068E                     l1261:
  1262                           
  1263                           ;../Timer0_bai3.X/lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));;../Timer0
      +                          _bai3.X/lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1264  068E  300D               	movlw	13
  1265  068F  00F7               	movwf	??_lcd_init+1
  1266  0690  30FB               	movlw	251
  1267  0691  00F6               	movwf	??_lcd_init
  1268  0692                     u827:
  1269  0692  0BF6               	decfsz	??_lcd_init,f
  1270  0693  2E92               	goto	u827
  1271  0694  0BF7               	decfsz	??_lcd_init+1,f
  1272  0695  2E92               	goto	u827
  1273  0696  2E97               	nop2
  1274  0697                     l1263:
  1275                           
  1276                           ;../Timer0_bai3.X/lcd.c: 265:  lcd_put_nibble(3);;../Timer0_bai3.X/lcd.c: 265:  lcd_put_
      +                          nibble(3);
  1277  0697  3003               	movlw	3
  1278  0698  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1279                           
  1280                           ;../Timer0_bai3.X/lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));;../Timer0
      +                          _bai3.X/lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1281  069D  300D               	movlw	13
  1282  069E  00F7               	movwf	??_lcd_init+1
  1283  069F  30FB               	movlw	251
  1284  06A0  00F6               	movwf	??_lcd_init
  1285  06A1                     u837:
  1286  06A1  0BF6               	decfsz	??_lcd_init,f
  1287  06A2  2EA1               	goto	u837
  1288  06A3  0BF7               	decfsz	??_lcd_init+1,f
  1289  06A4  2EA1               	goto	u837
  1290  06A5  2EA6               	nop2
  1291  06A6                     l1265:
  1292                           
  1293                           ;../Timer0_bai3.X/lcd.c: 268:  lcd_put_nibble(2);;../Timer0_bai3.X/lcd.c: 268:  lcd_put_
      +                          nibble(2);
  1294  06A6  3002               	movlw	2
  1295  06A7  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1296  06AC                     l1267:	
  1297                           ;../Timer0_bai3.X/lcd.c: 269:  while(lcd_busy());;../Timer0_bai3.X/lcd.c: 269:  while(lc
      +                          d_busy());
  1298                           
  1299  06AC  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1300  06B1  3A00               	xorlw	0
  1301  06B2  1D03               	skipz
  1302  06B3  2EB5               	goto	u631
  1303  06B4  2EB6               	goto	u630
  1304  06B5                     u631:
  1305  06B5  2EAC               	goto	l1267
  1306  06B6                     u630:
  1307  06B6                     l1269:
  1308                           
  1309                           ;../Timer0_bai3.X/lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);;../Timer0_bai3.X
      +                          /lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1310  06B6  3028               	movlw	40
  1311  06B7  00F6               	movwf	??_lcd_init
  1312  06B8  0876               	movf	??_lcd_init,w
  1313  06B9  00F3               	movwf	lcd_put_byte@b
  1314  06BA  3000               	movlw	0
  1315  06BB  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1316  06C0                     l1271:	
  1317                           ;../Timer0_bai3.X/lcd.c: 272:  while(lcd_busy());;../Timer0_bai3.X/lcd.c: 272:  while(lc
      +                          d_busy());
  1318                           
  1319  06C0  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1320  06C5  3A00               	xorlw	0
  1321  06C6  1D03               	skipz
  1322  06C7  2EC9               	goto	u641
  1323  06C8  2ECA               	goto	u640
  1324  06C9                     u641:
  1325  06C9  2EC0               	goto	l1271
  1326  06CA                     u640:
  1327  06CA                     l1273:
  1328                           
  1329                           ;../Timer0_bai3.X/lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);;../
      +                          Timer0_bai3.X/lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1330  06CA  300C               	movlw	12
  1331  06CB  00F6               	movwf	??_lcd_init
  1332  06CC  0876               	movf	??_lcd_init,w
  1333  06CD  00F3               	movwf	lcd_put_byte@b
  1334  06CE  3000               	movlw	0
  1335  06CF  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1336  06D4                     l1275:	
  1337                           ;../Timer0_bai3.X/lcd.c: 275:  while(lcd_busy());;../Timer0_bai3.X/lcd.c: 275:  while(lc
      +                          d_busy());
  1338                           
  1339  06D4  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1340  06D9  3A00               	xorlw	0
  1341  06DA  1D03               	skipz
  1342  06DB  2EDD               	goto	u651
  1343  06DC  2EDE               	goto	u650
  1344  06DD                     u651:
  1345  06DD  2ED4               	goto	l1275
  1346  06DE                     u650:
  1347  06DE                     l1277:
  1348                           
  1349                           ;../Timer0_bai3.X/lcd.c: 277:  lcd_put_byte(0,0x01);;../Timer0_bai3.X/lcd.c: 277:  lcd_p
      +                          ut_byte(0,0x01);
  1350  06DE  01F3               	clrf	lcd_put_byte@b
  1351  06DF  0AF3               	incf	lcd_put_byte@b,f
  1352  06E0  3000               	movlw	0
  1353  06E1  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1354  06E6                     l1279:	
  1355                           ;../Timer0_bai3.X/lcd.c: 278:  while(lcd_busy());;../Timer0_bai3.X/lcd.c: 278:  while(lc
      +                          d_busy());
  1356                           
  1357  06E6  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1358  06EB  3A00               	xorlw	0
  1359  06EC  1D03               	skipz
  1360  06ED  2EEF               	goto	u661
  1361  06EE  2EF0               	goto	u660
  1362  06EF                     u661:
  1363  06EF  2EE6               	goto	l1279
  1364  06F0                     u660:
  1365  06F0                     l1281:
  1366                           
  1367                           ;../Timer0_bai3.X/lcd.c: 280:  lcd_put_byte(0,0b00000110);;../Timer0_bai3.X/lcd.c: 280: 
      +                           lcd_put_byte(0,0b00000110);
  1368  06F0  3006               	movlw	6
  1369  06F1  00F6               	movwf	??_lcd_init
  1370  06F2  0876               	movf	??_lcd_init,w
  1371  06F3  00F3               	movwf	lcd_put_byte@b
  1372  06F4  3000               	movlw	0
  1373  06F5  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1374  06FA                     l1283:	
  1375                           ;../Timer0_bai3.X/lcd.c: 281:  while(lcd_busy());;../Timer0_bai3.X/lcd.c: 281:  while(lc
      +                          d_busy());
  1376                           
  1377  06FA  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1378  06FF  3A00               	xorlw	0
  1379  0700  1D03               	skipz
  1380  0701  2F03               	goto	u671
  1381  0702  2F04               	goto	u670
  1382  0703                     u671:
  1383  0703  2EFA               	goto	l1283
  1384  0704                     u670:
  1385  0704                     l184:
  1386  0704  0008               	return
  1387  0705                     __end_of_lcd_init:
  1388                           
  1389                           	psect	text4
  1390  049D                     __ptext4:	
  1391 ;; *************** function _lcd_ShiftRight *****************
  1392 ;; Defined at:
  1393 ;;		line 304 in file "../Timer0_bai3.X/lcd.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          1       0       0       0       0
  1410 ;;      Totals:         1       0       0       0       0
  1411 ;;Total ram usage:        1 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 2
  1414 ;; This function calls:
  1415 ;;		_lcd_put_byte
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;;		_lcd_MoveRight
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           
  1423                           ;psect for function _lcd_ShiftRight
  1424  049D                     _lcd_ShiftRight:
  1425  049D                     l1307:	
  1426                           ;incstack = 0
  1427                           ; Regs used in _lcd_ShiftRight: [wreg+status,2+status,0+pclath+cstack]
  1428                           
  1429                           
  1430                           ;../Timer0_bai3.X/lcd.c: 309:      lcd_put_byte(0,0x1C);;../Timer0_bai3.X/lcd.c: 309:   
      +                             lcd_put_byte(0,0x1C);
  1431  049D  301C               	movlw	28
  1432  049E  00F6               	movwf	??_lcd_ShiftRight
  1433  049F  0876               	movf	??_lcd_ShiftRight,w
  1434  04A0  00F3               	movwf	lcd_put_byte@b
  1435  04A1  3000               	movlw	0
  1436  04A2  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1437  04A7                     l190:
  1438  04A7  0008               	return
  1439  04A8                     __end_of_lcd_ShiftRight:
  1440                           
  1441                           	psect	text5
  1442  0492                     __ptext5:	
  1443 ;; *************** function _lcd_ShiftLeft *****************
  1444 ;; Defined at:
  1445 ;;		line 290 in file "../Timer0_bai3.X/lcd.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0
  1461 ;;      Temps:          1       0       0       0       0
  1462 ;;      Totals:         1       0       0       0       0
  1463 ;;Total ram usage:        1 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; Hardware stack levels required when called: 2
  1466 ;; This function calls:
  1467 ;;		_lcd_put_byte
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;;		_lcd_MoveLeft
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _lcd_ShiftLeft
  1476  0492                     _lcd_ShiftLeft:
  1477  0492                     l1309:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
  1480                           
  1481                           
  1482                           ;../Timer0_bai3.X/lcd.c: 295:      lcd_put_byte(0,0x18);;../Timer0_bai3.X/lcd.c: 295:   
      +                             lcd_put_byte(0,0x18);
  1483  0492  3018               	movlw	24
  1484  0493  00F6               	movwf	??_lcd_ShiftLeft
  1485  0494  0876               	movf	??_lcd_ShiftLeft,w
  1486  0495  00F3               	movwf	lcd_put_byte@b
  1487  0496  3000               	movlw	0
  1488  0497  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1489  049C                     l187:
  1490  049C  0008               	return
  1491  049D                     __end_of_lcd_ShiftLeft:
  1492                           
  1493                           	psect	text6
  1494  04A8                     __ptext6:	
  1495 ;; *************** function _getLengthArr *****************
  1496 ;; Defined at:
  1497 ;;		line 38 in file "bai4.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  character       1    wreg     PTR unsigned char 
  1500 ;;		 -> main@title(16), main@your_name(16), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  character       1    2[COMMON] PTR unsigned char 
  1503 ;;		 -> main@title(16), main@your_name(16), 
  1504 ;;  i               2    3[COMMON] unsigned int 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  2    0[COMMON] unsigned int 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1514 ;;      Params:         2       0       0       0       0
  1515 ;;      Locals:         3       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0
  1517 ;;      Totals:         5       0       0       0       0
  1518 ;;Total ram usage:        5 bytes
  1519 ;; Hardware stack levels used: 2
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _getLengthArr
  1529  04A8                     _getLengthArr:
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1533                           ;getLengthArr@character stored from wreg
  1534  04A8  00F2               	movwf	getLengthArr@character
  1535  04A9                     l1215:
  1536                           
  1537                           ;bai4.c: 39:     unsigned int i = 0;
  1538  04A9  01F3               	clrf	getLengthArr@i
  1539  04AA  01F4               	clrf	getLengthArr@i+1
  1540  04AB                     l1217:
  1541                           
  1542                           ;bai4.c: 41:         if(character[i] == '\n')
  1543  04AB  0873               	movf	getLengthArr@i,w
  1544  04AC  0772               	addwf	getLengthArr@character,w
  1545  04AD  0084               	movwf	4
  1546  04AE  120A  118A  2003  120A  118A  	fcall	stringdir
  1547  04B3  3A0A               	xorlw	10
  1548  04B4  1D03               	skipz
  1549  04B5  2CB7               	goto	u601
  1550  04B6  2CB8               	goto	u600
  1551  04B7                     u601:
  1552  04B7  2CB9               	goto	l1221
  1553  04B8                     u600:
  1554  04B8  2CC0               	goto	l1223
  1555  04B9                     l1221:
  1556                           
  1557                           ;bai4.c: 45:         i++;
  1558  04B9  3001               	movlw	1
  1559  04BA  07F3               	addwf	getLengthArr@i,f
  1560  04BB  1803               	skipnc
  1561  04BC  0AF4               	incf	getLengthArr@i+1,f
  1562  04BD  3000               	movlw	0
  1563  04BE  07F4               	addwf	getLengthArr@i+1,f
  1564  04BF  2CAB               	goto	l1217
  1565  04C0                     l1223:
  1566                           
  1567                           ;bai4.c: 47:     return i;
  1568  04C0  0874               	movf	getLengthArr@i+1,w
  1569  04C1  00F1               	movwf	?_getLengthArr+1
  1570  04C2  0873               	movf	getLengthArr@i,w
  1571  04C3  00F0               	movwf	?_getLengthArr
  1572  04C4                     l55:
  1573  04C4  0008               	return
  1574  04C5                     __end_of_getLengthArr:
  1575                           
  1576                           	psect	text7
  1577  04EB                     __ptext7:	
  1578 ;; *************** function _delay100us *****************
  1579 ;; Defined at:
  1580 ;;		line 50 in file "bai4.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  n               2    0[COMMON] unsigned int 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         2       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0
  1597 ;;      Totals:         2       0       0       0       0
  1598 ;;Total ram usage:        2 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _delay100us
  1609  04EB                     _delay100us:
  1610  04EB                     l1227:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _delay100us: [wreg+status,2+status,0]
  1613                           
  1614                           
  1615                           ;bai4.c: 51:     while(n--) {
  1616  04EB  2D03               	goto	l1245
  1617  04EC                     l1229:
  1618                           
  1619                           ;bai4.c: 52:         TMR1H= 255; TMR1L= 231;
  1620  04EC  30FF               	movlw	255
  1621  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1622  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1623  04EF  008F               	movwf	15	;volatile
  1624  04F0  30E7               	movlw	231
  1625  04F1  008E               	movwf	14	;volatile
  1626  04F2                     l1231:
  1627                           
  1628                           ;bai4.c: 53:         TMR1IF = 0;
  1629  04F2  100C               	bcf	12,0	;volatile
  1630  04F3                     l1233:
  1631                           
  1632                           ;bai4.c: 54:         TMR1CS = 0;
  1633  04F3  1090               	bcf	16,1	;volatile
  1634  04F4                     l1235:
  1635                           
  1636                           ;bai4.c: 55:         GIE=PEIE =TMR1IE = 0;
  1637  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  1638  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  1639  04F6  100C               	bcf	12,0	;volatile
  1640  04F7  130B               	bcf	11,6	;volatile
  1641  04F8  138B               	bcf	11,7	;volatile
  1642  04F9                     l1237:
  1643                           
  1644                           ;bai4.c: 56:         T1CKPS1 = 1; T1CKPS0 = 0;
  1645  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1646  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1647  04FB  1690               	bsf	16,5	;volatile
  1648  04FC                     l1239:
  1649  04FC  1210               	bcf	16,4	;volatile
  1650  04FD                     l1241:
  1651                           
  1652                           ;bai4.c: 57:         TMR1ON = 1;
  1653  04FD  1410               	bsf	16,0	;volatile
  1654  04FE                     l1243:
  1655                           
  1656                           ;bai4.c: 58:         T1SYNC=1;
  1657  04FE  1510               	bsf	16,2	;volatile
  1658  04FF                     l60:	
  1659                           ;bai4.c: 59:         while(TMR1IF==0);
  1660                           
  1661  04FF  1C0C               	btfss	12,0	;volatile
  1662  0500  2D02               	goto	u611
  1663  0501  2D03               	goto	u610
  1664  0502                     u611:
  1665  0502  2CFF               	goto	l60
  1666  0503                     u610:
  1667  0503                     l1245:
  1668                           
  1669                           ;bai4.c: 51:     while(n--) {
  1670  0503  3001               	movlw	1
  1671  0504  02F0               	subwf	delay100us@n,f
  1672  0505  3000               	movlw	0
  1673  0506  1C03               	skipc
  1674  0507  03F1               	decf	delay100us@n+1,f
  1675  0508  02F1               	subwf	delay100us@n+1,f
  1676  0509  0A70               	incf	delay100us@n,w
  1677  050A  1D03               	skipz
  1678  050B  2D10               	goto	u621
  1679  050C  0A71               	incf	delay100us@n+1,w
  1680  050D  1D03               	btfss	3,2
  1681  050E  2D10               	goto	u621
  1682  050F  2D11               	goto	u620
  1683  0510                     u621:
  1684  0510  2CEC               	goto	l1229
  1685  0511                     u620:
  1686  0511                     l64:
  1687  0511  0008               	return
  1688  0512                     __end_of_delay100us:
  1689                           
  1690                           	psect	text8
  1691  05BF                     __ptext8:	
  1692 ;; *************** function _addCharSpecial *****************
  1693 ;; Defined at:
  1694 ;;		line 27 in file "bai4.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  character       1    wreg     PTR unsigned char 
  1697 ;;		 -> main@special_name_title(41), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  character       1    9[COMMON] PTR unsigned char 
  1700 ;;		 -> main@special_name_title(41), 
  1701 ;;  i               2    7[COMMON] unsigned int 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         3       0       0       0       0
  1713 ;;      Temps:          1       0       0       0       0
  1714 ;;      Totals:         4       0       0       0       0
  1715 ;;Total ram usage:        4 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 2
  1718 ;; This function calls:
  1719 ;;		_lcd_busy
  1720 ;;		_lcd_put_byte
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _addCharSpecial
  1728  05BF                     _addCharSpecial:
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1732                           ;addCharSpecial@character stored from wreg
  1733  05BF  00F9               	movwf	addCharSpecial@character
  1734  05C0                     l1201:
  1735                           
  1736                           ;bai4.c: 28:     unsigned int i = 0;
  1737  05C0  01F7               	clrf	addCharSpecial@i
  1738  05C1  01F8               	clrf	addCharSpecial@i+1
  1739  05C2                     l1203:
  1740                           
  1741                           ;bai4.c: 29:     lcd_put_byte(0, 0x40);
  1742  05C2  3040               	movlw	64
  1743  05C3  00F6               	movwf	??_addCharSpecial
  1744  05C4  0876               	movf	??_addCharSpecial,w
  1745  05C5  00F3               	movwf	lcd_put_byte@b
  1746  05C6  3000               	movlw	0
  1747  05C7  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1748  05CC                     l1205:	
  1749                           ;bai4.c: 30:     while(lcd_busy());
  1750                           
  1751  05CC  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1752  05D1  3A00               	xorlw	0
  1753  05D2  1D03               	skipz
  1754  05D3  2DD5               	goto	u571
  1755  05D4  2DD6               	goto	u570
  1756  05D5                     u571:
  1757  05D5  2DCC               	goto	l1205
  1758  05D6                     u570:
  1759  05D6  2DF8               	goto	l1213
  1760  05D7                     l1207:
  1761                           
  1762                           ;bai4.c: 32:         lcd_put_byte(1, character[i]);
  1763  05D7  0877               	movf	addCharSpecial@i,w
  1764  05D8  0779               	addwf	addCharSpecial@character,w
  1765  05D9  0084               	movwf	4
  1766  05DA  120A  118A  2003  120A  118A  	fcall	stringdir
  1767  05DF  00F6               	movwf	??_addCharSpecial
  1768  05E0  0876               	movf	??_addCharSpecial,w
  1769  05E1  00F3               	movwf	lcd_put_byte@b
  1770  05E2  3001               	movlw	1
  1771  05E3  120A  118A  2542  120A  118A  	fcall	_lcd_put_byte
  1772  05E8                     l1209:	
  1773                           ;bai4.c: 33:         while(lcd_busy());
  1774                           
  1775  05E8  120A  118A  2512  120A  118A  	fcall	_lcd_busy
  1776  05ED  3A00               	xorlw	0
  1777  05EE  1D03               	skipz
  1778  05EF  2DF1               	goto	u581
  1779  05F0  2DF2               	goto	u580
  1780  05F1                     u581:
  1781  05F1  2DE8               	goto	l1209
  1782  05F2                     u580:
  1783  05F2                     l1211:
  1784                           
  1785                           ;bai4.c: 34:         i++;
  1786  05F2  3001               	movlw	1
  1787  05F3  07F7               	addwf	addCharSpecial@i,f
  1788  05F4  1803               	skipnc
  1789  05F5  0AF8               	incf	addCharSpecial@i+1,f
  1790  05F6  3000               	movlw	0
  1791  05F7  07F8               	addwf	addCharSpecial@i+1,f
  1792  05F8                     l1213:
  1793                           
  1794                           ;bai4.c: 31:     while(character[i] != 0x99) {
  1795  05F8  0877               	movf	addCharSpecial@i,w
  1796  05F9  0779               	addwf	addCharSpecial@character,w
  1797  05FA  0084               	movwf	4
  1798  05FB  120A  118A  2003  120A  118A  	fcall	stringdir
  1799  0600  3A99               	xorlw	153
  1800  0601  1D03               	skipz
  1801  0602  2E04               	goto	u591
  1802  0603  2E05               	goto	u590
  1803  0604                     u591:
  1804  0604  2DD7               	goto	l1207
  1805  0605                     u590:
  1806  0605                     l48:
  1807  0605  0008               	return
  1808  0606                     __end_of_addCharSpecial:
  1809                           
  1810                           	psect	text9
  1811  0542                     __ptext9:	
  1812 ;; *************** function _lcd_put_byte *****************
  1813 ;; Defined at:
  1814 ;;		line 134 in file "../Timer0_bai3.X/lcd.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  rs              1    wreg     unsigned char 
  1817 ;;  b               1    3[COMMON] unsigned char 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  rs              1    5[COMMON] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0, pclath, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         1       0       0       0       0
  1830 ;;      Locals:         1       0       0       0       0
  1831 ;;      Temps:          1       0       0       0       0
  1832 ;;      Totals:         3       0       0       0       0
  1833 ;;Total ram usage:        3 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 1
  1836 ;; This function calls:
  1837 ;;		_lcd_put_nibble
  1838 ;; This function is called by:
  1839 ;;		_addCharSpecial
  1840 ;;		_lcd_gotoxy
  1841 ;;		_lcd_putc
  1842 ;;		_lcd_init
  1843 ;;		_lcd_ShiftLeft
  1844 ;;		_lcd_ShiftRight
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _lcd_put_byte
  1850  0542                     _lcd_put_byte:
  1851                           
  1852                           ;incstack = 0
  1853                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1854                           ;lcd_put_byte@rs stored from wreg
  1855  0542  00F5               	movwf	lcd_put_byte@rs
  1856  0543                     l1151:
  1857                           
  1858                           ;../Timer0_bai3.X/lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);../Ti
      +                          mer0_bai3.X/lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);../Timer0_b
      +                          ai3.X/lcd.c: 135: {;../Timer0_bai3.X/lcd.c: 135: {;../Timer0_bai3.X/lcd.c: 139:  TRISD4 
      +                          = 0;;../Timer0_bai3.X/lcd.c: 139:  TRISD4 = 0;
  1859  0543  1683               	bsf	3,5	;RP0=1, select bank1
  1860  0544  1303               	bcf	3,6	;RP1=0, select bank1
  1861  0545  1208               	bcf	8,4	;volatile
  1862                           
  1863                           ;../Timer0_bai3.X/lcd.c: 140:  TRISD5 = 0;;../Timer0_bai3.X/lcd.c: 140:  TRISD5 = 0;
  1864  0546  1288               	bcf	8,5	;volatile
  1865                           
  1866                           ;../Timer0_bai3.X/lcd.c: 141:  TRISD6 = 0;;../Timer0_bai3.X/lcd.c: 141:  TRISD6 = 0;
  1867  0547  1308               	bcf	8,6	;volatile
  1868                           
  1869                           ;../Timer0_bai3.X/lcd.c: 142:  TRISD7 = 0;;../Timer0_bai3.X/lcd.c: 142:  TRISD7 = 0;
  1870  0548  1388               	bcf	8,7	;volatile
  1871  0549                     l1153:
  1872                           
  1873                           ;../Timer0_bai3.X/lcd.c: 144:  if(rs);../Timer0_bai3.X/lcd.c: 144:  if(rs)
  1874  0549  0875               	movf	lcd_put_byte@rs,w
  1875  054A  1903               	btfsc	3,2
  1876  054B  2D4D               	goto	u531
  1877  054C  2D4E               	goto	u530
  1878  054D                     u531:
  1879  054D  2D52               	goto	l132
  1880  054E                     u530:
  1881  054E                     l1155:
  1882                           
  1883                           ;../Timer0_bai3.X/lcd.c: 145:   RD1 = 1;;../Timer0_bai3.X/lcd.c: 145:   RD1 = 1;
  1884  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1885  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0550  1488               	bsf	8,1	;volatile
  1887  0551  2D55               	goto	l1157
  1888  0552                     l132:	
  1889                           ;../Timer0_bai3.X/lcd.c: 146:  else;../Timer0_bai3.X/lcd.c: 146:  else
  1890                           
  1891                           
  1892                           ;../Timer0_bai3.X/lcd.c: 147:   RD1 = 0;;../Timer0_bai3.X/lcd.c: 147:   RD1 = 0;
  1893  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0554  1088               	bcf	8,1	;volatile
  1896  0555                     l1157:
  1897                           
  1898                           ;../Timer0_bai3.X/lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));;../Tim
      +                          er0_bai3.X/lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1899  0555  3006               	movlw	6
  1900  0556  00F4               	movwf	??_lcd_put_byte
  1901  0557                     u847:
  1902  0557  0BF4               	decfsz	??_lcd_put_byte,f
  1903  0558  2D57               	goto	u847
  1904  0559  0000               	nop
  1905  055A                     l1159:
  1906                           
  1907                           ;../Timer0_bai3.X/lcd.c: 150:  RD2 = 0;;../Timer0_bai3.X/lcd.c: 150:  RD2 = 0;
  1908  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1909  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1910  055C  1108               	bcf	8,2	;volatile
  1911                           
  1912                           ;../Timer0_bai3.X/lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));;../Tim
      +                          er0_bai3.X/lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1913  055D  3006               	movlw	6
  1914  055E  00F4               	movwf	??_lcd_put_byte
  1915  055F                     u857:
  1916  055F  0BF4               	decfsz	??_lcd_put_byte,f
  1917  0560  2D5F               	goto	u857
  1918  0561  0000               	nop
  1919  0562                     l1161:
  1920                           
  1921                           ;../Timer0_bai3.X/lcd.c: 153:  RD3 = 0;;../Timer0_bai3.X/lcd.c: 153:  RD3 = 0;
  1922  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0564  1188               	bcf	8,3	;volatile
  1925  0565                     l1163:
  1926                           
  1927                           ;../Timer0_bai3.X/lcd.c: 155:  lcd_put_nibble(b >> 4);;../Timer0_bai3.X/lcd.c: 155:  lcd
      +                          _put_nibble(b >> 4);
  1928  0565  0873               	movf	lcd_put_byte@b,w
  1929  0566  00F4               	movwf	??_lcd_put_byte
  1930  0567  3004               	movlw	4
  1931  0568                     u545:
  1932  0568  1003               	clrc
  1933  0569  0CF4               	rrf	??_lcd_put_byte,f
  1934  056A  3EFF               	addlw	-1
  1935  056B  1D03               	skipz
  1936  056C  2D68               	goto	u545
  1937  056D  0874               	movf	??_lcd_put_byte,w
  1938  056E  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1939  0573                     l1165:
  1940                           
  1941                           ;../Timer0_bai3.X/lcd.c: 157:  lcd_put_nibble(b & 0xf);;../Timer0_bai3.X/lcd.c: 157:  lc
      +                          d_put_nibble(b & 0xf);
  1942  0573  0873               	movf	lcd_put_byte@b,w
  1943  0574  390F               	andlw	15
  1944  0575  120A  118A  257B  120A  118A  	fcall	_lcd_put_nibble
  1945  057A                     l134:
  1946  057A  0008               	return
  1947  057B                     __end_of_lcd_put_byte:
  1948                           
  1949                           	psect	text10
  1950  057B                     __ptext10:	
  1951 ;; *************** function _lcd_put_nibble *****************
  1952 ;; Defined at:
  1953 ;;		line 103 in file "../Timer0_bai3.X/lcd.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  b               1    wreg     unsigned char 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  b               1    1[COMMON] unsigned char 
  1958 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       0       0       0       0
  1969 ;;      Locals:         2       0       0       0       0
  1970 ;;      Temps:          1       0       0       0       0
  1971 ;;      Totals:         3       0       0       0       0
  1972 ;;Total ram usage:        3 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_lcd_put_byte
  1978 ;;		_lcd_init
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _lcd_put_nibble
  1984  057B                     _lcd_put_nibble:
  1985                           
  1986                           ;incstack = 0
  1987                           ; Regs used in _lcd_put_nibble: [wreg]
  1988                           ;lcd_put_nibble@b stored from wreg
  1989  057B  00F1               	movwf	lcd_put_nibble@b
  1990  057C                     l1135:
  1991                           
  1992                           ;../Timer0_bai3.X/lcd.c: 103: void lcd_put_nibble(unsigned char b);../Timer0_bai3.X/lcd.
      +                          c: 103: void lcd_put_nibble(unsigned char b);../Timer0_bai3.X/lcd.c: 104: {;../Timer0_ba
      +                          i3.X/lcd.c: 104: {;../Timer0_bai3.X/lcd.c: 106:  BYTE_VAL temp;;../Timer0_bai3.X/lcd.c: 
      +                          106:  BYTE_VAL temp;;../Timer0_bai3.X/lcd.c: 109:  TRISD4 = 0;;../Timer0_bai3.X/lcd.c: 1
      +                          09:  TRISD4 = 0;
  1993  057C  1683               	bsf	3,5	;RP0=1, select bank1
  1994  057D  1303               	bcf	3,6	;RP1=0, select bank1
  1995  057E  1208               	bcf	8,4	;volatile
  1996                           
  1997                           ;../Timer0_bai3.X/lcd.c: 110:  TRISD5 = 0;;../Timer0_bai3.X/lcd.c: 110:  TRISD5 = 0;
  1998  057F  1288               	bcf	8,5	;volatile
  1999                           
  2000                           ;../Timer0_bai3.X/lcd.c: 111:  TRISD6 = 0;;../Timer0_bai3.X/lcd.c: 111:  TRISD6 = 0;
  2001  0580  1308               	bcf	8,6	;volatile
  2002                           
  2003                           ;../Timer0_bai3.X/lcd.c: 112:  TRISD7 = 0;;../Timer0_bai3.X/lcd.c: 112:  TRISD7 = 0;
  2004  0581  1388               	bcf	8,7	;volatile
  2005  0582                     l1137:
  2006                           
  2007                           ;../Timer0_bai3.X/lcd.c: 114:  temp.Val = b;;../Timer0_bai3.X/lcd.c: 114:  temp.Val = b;
  2008  0582  0871               	movf	lcd_put_nibble@b,w
  2009  0583  00F0               	movwf	??_lcd_put_nibble
  2010  0584  0870               	movf	??_lcd_put_nibble,w
  2011  0585  00F2               	movwf	lcd_put_nibble@temp
  2012  0586                     l1139:
  2013                           
  2014                           ;../Timer0_bai3.X/lcd.c: 116:  RD4 = temp.bits.b0;;../Timer0_bai3.X/lcd.c: 116:  RD4 = t
      +                          emp.bits.b0;
  2015  0586  1872               	btfsc	lcd_put_nibble@temp,0
  2016  0587  2D89               	goto	u451
  2017  0588  2D8D               	goto	u450
  2018  0589                     u451:
  2019  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2020  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2021  058B  1608               	bsf	8,4	;volatile
  2022  058C  2D90               	goto	u464
  2023  058D                     u450:
  2024  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2025  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2026  058F  1208               	bcf	8,4	;volatile
  2027  0590                     u464:
  2028  0590                     l1141:
  2029                           
  2030                           ;../Timer0_bai3.X/lcd.c: 117:  RD5 = temp.bits.b1;;../Timer0_bai3.X/lcd.c: 117:  RD5 = t
      +                          emp.bits.b1;
  2031  0590  18F2               	btfsc	lcd_put_nibble@temp,1
  2032  0591  2D93               	goto	u471
  2033  0592  2D97               	goto	u470
  2034  0593                     u471:
  2035  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0595  1688               	bsf	8,5	;volatile
  2038  0596  2D9A               	goto	u484
  2039  0597                     u470:
  2040  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0599  1288               	bcf	8,5	;volatile
  2043  059A                     u484:
  2044  059A                     l1143:
  2045                           
  2046                           ;../Timer0_bai3.X/lcd.c: 118:  RD6 = temp.bits.b2;;../Timer0_bai3.X/lcd.c: 118:  RD6 = t
      +                          emp.bits.b2;
  2047  059A  1972               	btfsc	lcd_put_nibble@temp,2
  2048  059B  2D9D               	goto	u491
  2049  059C  2DA1               	goto	u490
  2050  059D                     u491:
  2051  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2052  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2053  059F  1708               	bsf	8,6	;volatile
  2054  05A0  2DA4               	goto	u504
  2055  05A1                     u490:
  2056  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2057  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2058  05A3  1308               	bcf	8,6	;volatile
  2059  05A4                     u504:
  2060  05A4                     l1145:
  2061                           
  2062                           ;../Timer0_bai3.X/lcd.c: 119:  RD7 = temp.bits.b3;;../Timer0_bai3.X/lcd.c: 119:  RD7 = t
      +                          emp.bits.b3;
  2063  05A4  19F2               	btfsc	lcd_put_nibble@temp,3
  2064  05A5  2DA7               	goto	u511
  2065  05A6  2DAB               	goto	u510
  2066  05A7                     u511:
  2067  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2068  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2069  05A9  1788               	bsf	8,7	;volatile
  2070  05AA  2DAE               	goto	u524
  2071  05AB                     u510:
  2072  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2073  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2074  05AD  1388               	bcf	8,7	;volatile
  2075  05AE                     u524:
  2076                           
  2077                           ;../Timer0_bai3.X/lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));;../Tim
      +                          er0_bai3.X/lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2078  05AE  3006               	movlw	6
  2079  05AF  00F0               	movwf	??_lcd_put_nibble
  2080  05B0                     u867:
  2081  05B0  0BF0               	decfsz	??_lcd_put_nibble,f
  2082  05B1  2DB0               	goto	u867
  2083  05B2  0000               	nop
  2084  05B3                     l1147:
  2085                           
  2086                           ;../Timer0_bai3.X/lcd.c: 122:  RD3 = 1;;../Timer0_bai3.X/lcd.c: 122:  RD3 = 1;
  2087  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2088  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2089  05B5  1588               	bsf	8,3	;volatile
  2090                           
  2091                           ;../Timer0_bai3.X/lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));;../Tim
      +                          er0_bai3.X/lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2092  05B6  3006               	movlw	6
  2093  05B7  00F0               	movwf	??_lcd_put_nibble
  2094  05B8                     u877:
  2095  05B8  0BF0               	decfsz	??_lcd_put_nibble,f
  2096  05B9  2DB8               	goto	u877
  2097  05BA  0000               	nop
  2098  05BB                     l1149:
  2099                           
  2100                           ;../Timer0_bai3.X/lcd.c: 124:  RD3 = 0;;../Timer0_bai3.X/lcd.c: 124:  RD3 = 0;
  2101  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2102  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2103  05BD  1188               	bcf	8,3	;volatile
  2104  05BE                     l129:
  2105  05BE  0008               	return
  2106  05BF                     __end_of_lcd_put_nibble:
  2107                           
  2108                           	psect	text11
  2109  0512                     __ptext11:	
  2110 ;; *************** function _lcd_busy *****************
  2111 ;; Defined at:
  2112 ;;		line 18 in file "../Timer0_bai3.X/lcd.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  busy            1    1[COMMON] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      unsigned char 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         0       0       0       0       0
  2127 ;;      Locals:         1       0       0       0       0
  2128 ;;      Temps:          1       0       0       0       0
  2129 ;;      Totals:         2       0       0       0       0
  2130 ;;Total ram usage:        2 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_addCharSpecial
  2136 ;;		_lcd_gotoxy
  2137 ;;		_lcd_putc
  2138 ;;		_lcd_init
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _lcd_busy
  2144  0512                     _lcd_busy:
  2145  0512                     l1167:	
  2146                           ;incstack = 0
  2147                           ; Regs used in _lcd_busy: [wreg+status,2]
  2148                           
  2149                           
  2150                           ;../Timer0_bai3.X/lcd.c: 21: unsigned char busy;;../Timer0_bai3.X/lcd.c: 21: unsigned ch
      +                          ar busy;;../Timer0_bai3.X/lcd.c: 24:  TRISD4 = 1;;../Timer0_bai3.X/lcd.c: 24:  TRISD4 = 
      +                          1;
  2151  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2152  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2153  0514  1608               	bsf	8,4	;volatile
  2154                           
  2155                           ;../Timer0_bai3.X/lcd.c: 25:  TRISD5 = 1;;../Timer0_bai3.X/lcd.c: 25:  TRISD5 = 1;
  2156  0515  1688               	bsf	8,5	;volatile
  2157                           
  2158                           ;../Timer0_bai3.X/lcd.c: 26:  TRISD6 = 1;;../Timer0_bai3.X/lcd.c: 26:  TRISD6 = 1;
  2159  0516  1708               	bsf	8,6	;volatile
  2160                           
  2161                           ;../Timer0_bai3.X/lcd.c: 27:  TRISD7 = 1;;../Timer0_bai3.X/lcd.c: 27:  TRISD7 = 1;
  2162  0517  1788               	bsf	8,7	;volatile
  2163                           
  2164                           ;../Timer0_bai3.X/lcd.c: 29:  RD2 = 1;;../Timer0_bai3.X/lcd.c: 29:  RD2 = 1;
  2165  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2167  051A  1508               	bsf	8,2	;volatile
  2168                           
  2169                           ;../Timer0_bai3.X/lcd.c: 30:  RD1 = 0;;../Timer0_bai3.X/lcd.c: 30:  RD1 = 0;
  2170  051B  1088               	bcf	8,1	;volatile
  2171  051C                     l1169:
  2172                           
  2173                           ;../Timer0_bai3.X/lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));;../Time
      +                          r0_bai3.X/lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2174  051C  3006               	movlw	6
  2175  051D  00F0               	movwf	??_lcd_busy
  2176  051E                     u887:
  2177  051E  0BF0               	decfsz	??_lcd_busy,f
  2178  051F  2D1E               	goto	u887
  2179  0520  0000               	nop
  2180  0521                     l1171:
  2181                           
  2182                           ;../Timer0_bai3.X/lcd.c: 32:  RD3 = 1;;../Timer0_bai3.X/lcd.c: 32:  RD3 = 1;
  2183  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0523  1588               	bsf	8,3	;volatile
  2186                           
  2187                           ;../Timer0_bai3.X/lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));;../Time
      +                          r0_bai3.X/lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2188  0524  3006               	movlw	6
  2189  0525  00F0               	movwf	??_lcd_busy
  2190  0526                     u897:
  2191  0526  0BF0               	decfsz	??_lcd_busy,f
  2192  0527  2D26               	goto	u897
  2193  0528  0000               	nop
  2194  0529                     l1173:
  2195                           
  2196                           ;../Timer0_bai3.X/lcd.c: 35:  busy = RD7;;../Timer0_bai3.X/lcd.c: 35:  busy = RD7;
  2197  0529  3000               	movlw	0
  2198  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2199  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2200  052C  1B88               	btfsc	8,7	;volatile
  2201  052D  3001               	movlw	1
  2202  052E  00F1               	movwf	lcd_busy@busy
  2203  052F                     l1175:
  2204                           
  2205                           ;../Timer0_bai3.X/lcd.c: 37:  RD3 = 0;;../Timer0_bai3.X/lcd.c: 37:  RD3 = 0;
  2206  052F  1188               	bcf	8,3	;volatile
  2207  0530                     l1177:
  2208                           
  2209                           ;../Timer0_bai3.X/lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));;../Time
      +                          r0_bai3.X/lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2210  0530  3006               	movlw	6
  2211  0531  00F0               	movwf	??_lcd_busy
  2212  0532                     u907:
  2213  0532  0BF0               	decfsz	??_lcd_busy,f
  2214  0533  2D32               	goto	u907
  2215  0534  0000               	nop
  2216  0535                     l1179:
  2217                           
  2218                           ;../Timer0_bai3.X/lcd.c: 39:  RD3 = 1;;../Timer0_bai3.X/lcd.c: 39:  RD3 = 1;
  2219  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0537  1588               	bsf	8,3	;volatile
  2222  0538                     l1181:
  2223                           
  2224                           ;../Timer0_bai3.X/lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));;../Time
      +                          r0_bai3.X/lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2225  0538  3006               	movlw	6
  2226  0539  00F0               	movwf	??_lcd_busy
  2227  053A                     u917:
  2228  053A  0BF0               	decfsz	??_lcd_busy,f
  2229  053B  2D3A               	goto	u917
  2230  053C  0000               	nop
  2231  053D                     l1183:
  2232                           
  2233                           ;../Timer0_bai3.X/lcd.c: 41:  RD3 = 0;;../Timer0_bai3.X/lcd.c: 41:  RD3 = 0;
  2234  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2235  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2236  053F  1188               	bcf	8,3	;volatile
  2237  0540                     l1185:
  2238                           
  2239                           ;../Timer0_bai3.X/lcd.c: 43:  return busy;;../Timer0_bai3.X/lcd.c: 43:  return busy;
  2240  0540  0871               	movf	lcd_busy@busy,w
  2241  0541                     l121:
  2242  0541  0008               	return
  2243  0542                     __end_of_lcd_busy:
  2244  007E                     btemp	set	126	;btemp
  2245  007E                     wtemp0	set	126
  2246                           
  2247                           	psect	config
  2248                           
  2249                           ;Config register CONFIG1 @ 0x2007
  2250                           ;	Oscillator Selection bits
  2251                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2252                           ;	Watchdog Timer Enable bit
  2253                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2254                           ;	Power-up Timer Enable bit
  2255                           ;	PWRTE = OFF, PWRT disabled
  2256                           ;	RE3/MCLR pin function select bit
  2257                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2258                           ;	Code Protection bit
  2259                           ;	CP = OFF, Program memory code protection is disabled
  2260                           ;	Data Code Protection bit
  2261                           ;	CPD = OFF, Data memory code protection is disabled
  2262                           ;	Brown Out Reset Selection bits
  2263                           ;	BOREN = OFF, BOR disabled
  2264                           ;	Internal External Switchover bit
  2265                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2266                           ;	Fail-Safe Clock Monitor Enabled bit
  2267                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2268                           ;	Low Voltage Programming Enable bit
  2269                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2270                           ;	In-Circuit Debugger Mode bit
  2271                           ;	DEBUG = 0x1, unprogrammed default
  2272  2007                     	org	8199
  2273  2007  20F2               	dw	8434
  2274                           
  2275                           ;Config register CONFIG2 @ 0x2008
  2276                           ;	Brown-out Reset Selection bit
  2277                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2278                           ;	Flash Program Memory Self Write Enable bits
  2279                           ;	WRT = OFF, Write protection off
  2280  2008                     	org	8200
  2281  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    73
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 16
		 -> main@title(CODE[16]), main@your_name(CODE[16]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 41
		 -> main@special_name_title(CODE[41]), 


Critical Paths under _main in COMMON

    _main->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_ShiftRight->_lcd_put_byte
    _lcd_ShiftLeft->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    9401
                                              0 BANK0      6     6      0
                     _addCharSpecial
                         _delay100us
                       _getLengthArr
                      _lcd_ShiftLeft
                     _lcd_ShiftRight
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           4     3      1    1409
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftRight                                       1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftLeft                                        1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _getLengthArr                                         5     3      2     134
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _delay100us                                           2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1235
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _delay100us
   _getLengthArr
   _lcd_ShiftLeft
     _lcd_put_byte
   _lcd_ShiftRight
     _lcd_put_byte
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 10 17:42:48 2021

               ??_lcd_ShiftLeft 0076                               pc 0002                              l60 04FF  
                            l55 04C4                              l48 0605                              l64 0511  
                            l88 07F9          __end_of_lcd_put_nibble 05BF                ??_lcd_ShiftRight 0076  
                            fsr 0004                 ?_addCharSpecial 0070                   ?_lcd_put_byte 0073  
                           l121 0541                             l132 0552                             l134 057A  
                           l142 04EA                             l160 0661                             l129 05BE  
                           l190 04A7                             l184 0704                             l187 049C  
                           _GIE 005F                             _RD1 0041                             _RD2 0042  
                           _RD3 0043                             _RD4 0044                             _RD5 0045  
                           _RD6 0046                             _RD7 0047                             u510 05AB  
                           u511 05A7                             u504 05A4                             u600 04B8  
                           u601 04B7                             u450 058D                             u530 054E  
                           u610 0503                             u451 0589                             u531 054D  
                           u611 0502                             u524 05AE                             u620 0511  
                           u700 064D                             u621 0510                             u701 064C  
                           u470 0597                             u630 06B6                             u550 04CB  
                           u710 075D                             u471 0593                             u631 06B5  
                           u551 04CA                             u711 075C                             u464 0590  
                           u640 06CA                             u560 04EA                             u720 0795  
                           u545 0568                             u641 06C9                             u561 04E9  
                           u721 0794                             u490 05A1                             u570 05D6  
                           u650 06DE                             u730 07AE                             u491 059D  
                           u571 05D5                             u651 06DD                             u731 07AD  
                           u715 0759                             u484 059A                             u580 05F2  
                           u660 06F0                             u740 07CF                             u581 05F1  
                           u661 06EF                             u741 07CE                             u725 0791  
                           u590 0605                             u670 0704                             u750 07F0  
                           u591 0604                             u671 0703                             u807 066F  
                           u751 07EF                             u680 061A                             u817 0683  
                           u681 0619                             u690 0638                             u907 0532  
                           u827 0692                             u691 0637                             u917 053A  
                           u837 06A1                             u847 0557                             u857 055F  
                           u867 05B0                             u877 05B8                             u887 051E  
                           u897 0526                             fsr0 0004                            l1201 05C0  
                          l1211 05F2                            l1203 05C2                            l1141 0590  
                          l1213 05F8                            l1205 05CC                            l1221 04B9  
                          l1301 064E                            l1143 059A                            l1135 057C  
                          l1151 0543                            l1207 05D7                            l1231 04F2  
                          l1223 04C0                            l1215 04A9                            l1311 0705  
                          l1145 05A4                            l1137 0582                            l1161 0562  
                          l1153 0549                            l1209 05E8                            l1241 04FD  
                          l1233 04F3                            l1217 04AB                            l1321 071F  
                          l1313 0709                            l1171 0521                            l1147 05B3  
                          l1139 0586                            l1163 0565                            l1155 054E  
                          l1243 04FE                            l1235 04F4                            l1227 04EB  
                          l1307 049D                            l1251 0674                            l1331 0753  
                          l1323 0728                            l1315 070D                            l1181 0538  
                          l1173 0529                            l1149 05BB                            l1165 0573  
                          l1157 0555                            l1237 04F9                            l1229 04EC  
                          l1245 0503                            l1309 0492                            l1261 068E  
                          l1253 0677                            l1341 0783                            l1333 075D  
                          l1325 073B                            l1317 0712                            l1183 053D  
                          l1175 052F                            l1167 0512                            l1159 055A  
                          l1239 04FC                            l1271 06C0                            l1263 0697  
                          l1255 0678                            l1247 0662                            l1191 04CB  
                          l1343 078B                            l1335 0769                            l1327 073E  
                          l1319 0719                            l1185 0540                            l1177 0530  
                          l1169 051C                            l1281 06F0                            l1273 06CA  
                          l1265 06A6                            l1257 0679                            l1249 066B  
                          l1193 04D0                            l1433 0656                            l1361 07CF  
                          l1345 0795                            l1337 0771                            l1329 074B  
                          l1179 0535                            l1283 06FA                            l1275 06D4  
                          l1267 06AC                            l1259 067F                            l1195 04D1  
                          l1291 061B                            l1371 07E7                            l1355 07B0  
                          l1339 0776                            l1347 079E                            l1277 06DE  
                          l1269 06B6                            l1197 04D5                            l1189 04C6  
                          l1293 0624                            l1285 0607                            l1373 07F0  
                          l1357 07BE                            l1349 07AE                            l1279 06E6  
                          l1199 04E0                            l1295 062E                            l1287 0608  
                          l1367 07D1                            l1359 07C6                            l1297 0639  
                          l1289 0610                            l1369 07DF                            l1299 0643  
                          _PEIE 005E                            _main 0705                    lcd_busy@busy 0071  
                          btemp 007E                            start 0000                 ?_lcd_put_nibble 0070  
                ??_lcd_put_byte 0074                           ?_main 0070           getLengthArr@character 0072  
                         _TMR1H 000F                           _TMR1L 000E                           main@i 0024  
                         pclath 000A                           status 0003                           wtemp0 007E  
               __initialization 07FC            __end_of_getLengthArr 04C5                    __end_of_main 07FC  
                 lcd_gotoxy@col 0078                   lcd_gotoxy@row 0076              lcd_put_nibble@temp 0072  
                        ??_main 007D                          _T1SYNC 0082                          _TMR1IE 0460  
                        _TMR1IF 0060                          _TMR1CS 0081                          _TMR1ON 0080  
                        _TRISD1 0441                          _TRISD2 0442                          _TRISD3 0443  
                        _TRISD4 0444                          _TRISD5 0445                          _TRISD6 0446  
                        _TRISD7 0447                __end_of_lcd_busy 0542                __end_of_lcd_init 0705  
              __end_of_lcd_putc 0662                   lcd_put_byte@b 0073         __end_of__initialization 07FC  
          __end_of_lcd_put_byte 057B  __end_ofmain@special_name_title 0032                ??_addCharSpecial 0076  
                __pcstackCOMMON 0070                   main@your_name 0032               lcd_gotoxy@address 0079  
                    _delay100us 04EB           __size_of_getLengthArr 001D                ??_lcd_put_nibble 0070  
                    __pmaintext 0705           __end_of_lcd_ShiftLeft 049D                         _T1CKPS0 0084  
                       _T1CKPS1 0085                      _lcd_gotoxy 04C5                    _getLengthArr 04A8  
                     ?_lcd_busy 0070                       ?_lcd_init 0070                       ?_lcd_putc 0070  
                    __stringtab 0003         addCharSpecial@character 0079                         __ptext1 0606  
                       __ptext2 04C5                         __ptext3 0662                         __ptext4 049D  
                       __ptext5 0492                         __ptext6 04A8                         __ptext7 04EB  
                       __ptext8 05BF                         __ptext9 0542         __size_of_lcd_ShiftRight 000B  
         __size_of_lcd_put_byte 0039                     ?_delay100us 0070                      ??_lcd_busy 0070  
                    ??_lcd_init 0076                      ??_lcd_putc 007A            end_of_initialization 07FC  
                lcd_put_byte@rs 0075               __end_ofmain@title 0052                    _lcd_put_byte 0542  
                   ?_lcd_gotoxy 0076                      main@length 0022             __size_of_delay100us 0027  
           start_initialization 07FC             __size_of_lcd_gotoxy 0026                       ___latbits 0002  
                 __pcstackBANK0 0020                 addCharSpecial@i 0077                  _lcd_ShiftRight 049D  
             __size_of_lcd_busy 0030               __size_of_lcd_init 00A3               __size_of_lcd_putc 005C  
                     __pstrings 0003         __size_of_addCharSpecial 0047          __end_of_lcd_ShiftRight 04A8  
                  ??_delay100us 0072          __size_of_lcd_ShiftLeft 000B              __end_of_delay100us 0512  
                   __stringbase 0008         __size_of_lcd_put_nibble 0044                 ?_lcd_ShiftRight 0070  
                 getLengthArr@i 0073                       lcd_putc@c 007C                       main@times 0020  
                     main@title 0042                    ??_lcd_gotoxy 0077                     delay100us@n 0070  
         __end_ofmain@your_name 0042              __end_of_lcd_gotoxy 04EB                   _lcd_ShiftLeft 0492  
            __end_of__stringtab 0009                        __ptext10 057B                        __ptext11 0512  
                      _lcd_busy 0512                        _lcd_init 0662                        _lcd_putc 0606  
                 __size_of_main 00F7                  ?_lcd_ShiftLeft 0070                  _addCharSpecial 05BF  
               lcd_put_nibble@b 0071                   ?_getLengthArr 0070                       stringcode 0003  
        __end_of_addCharSpecial 0606          main@special_name_title 0009                  _lcd_put_nibble 057B  
                      stringdir 0003                        stringtab 0003                  ??_getLengthArr 0072  
