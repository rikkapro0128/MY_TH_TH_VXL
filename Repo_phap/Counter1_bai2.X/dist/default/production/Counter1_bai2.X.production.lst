

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 10 17:24:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293                           
   294                           	psect	strings
   295  0003                     __pstrings:
   296  0003                     stringtab:
   297  0003                     __stringtab:
   298  0003                     stringcode:	
   299                           ;	String table - string pointers are 1 byte each
   300                           
   301  0003                     stringdir:
   302  0003  3000               	movlw	high stringdir
   303  0004  008A               	movwf	10
   304  0005  0804               	movf	4,w
   305  0006  0A84               	incf	4,f
   306  0007  0782               	addwf	2,f
   307  0008                     __stringbase:
   308  0008  3400               	retlw	0
   309  0009                     __end_of__stringtab:
   310  0009                     _dpowers:
   311  0009  3401               	retlw	1
   312  000A  3400               	retlw	0
   313  000B  340A               	retlw	10
   314  000C  3400               	retlw	0
   315  000D  3464               	retlw	100
   316  000E  3400               	retlw	0
   317  000F  34E8               	retlw	232
   318  0010  3403               	retlw	3
   319  0011  3410               	retlw	16
   320  0012  3427               	retlw	39
   321  0013                     __end_of_dpowers:
   322  0013                     main@your_name:
   323  0013  3454               	retlw	84
   324  0014  342E               	retlw	46
   325  0015  3450               	retlw	80
   326  0016  3468               	retlw	104
   327  0017  3400               	retlw	0
   328  0018  3470               	retlw	112
   329  0019  3420               	retlw	32
   330  001A  3443               	retlw	67
   331  001B  346F               	retlw	111
   332  001C  3475               	retlw	117
   333  001D  346E               	retlw	110
   334  001E  3474               	retlw	116
   335  001F  3465               	retlw	101
   336  0020  3472               	retlw	114
   337  0021  3420               	retlw	32
   338  0022  3431               	retlw	49
   339  0023  340A               	retlw	10
   340  0024                     __end_ofmain@your_name:
   341  0024                     main@special_name_title:
   342  0024  3400               	retlw	0
   343  0025  3404               	retlw	4
   344  0026  3408               	retlw	8
   345  0027  3400               	retlw	0
   346  0028  341C               	retlw	28
   347  0029  3414               	retlw	20
   348  002A  341E               	retlw	30
   349  002B  3400               	retlw	0
   350  002C  3499               	retlw	153
   351  002D                     __end_ofmain@special_name_title:
   352  000E                     _TMR1	set	14
   353  0044                     _RD4	set	68
   354  0045                     _RD5	set	69
   355  0046                     _RD6	set	70
   356  0047                     _RD7	set	71
   357  0043                     _RD3	set	67
   358  0041                     _RD1	set	65
   359  0042                     _RD2	set	66
   360  0080                     _TMR1ON	set	128
   361  0084                     _T1CKPS0	set	132
   362  0085                     _T1CKPS1	set	133
   363  005E                     _PEIE	set	94
   364  005F                     _GIE	set	95
   365  0083                     _T1OSCEN	set	131
   366  0081                     _TMR1CS	set	129
   367  0060                     _TMR1IF	set	96
   368  0442                     _TRISD2	set	1090
   369  0441                     _TRISD1	set	1089
   370  0443                     _TRISD3	set	1091
   371  0447                     _TRISD7	set	1095
   372  0446                     _TRISD6	set	1094
   373  0445                     _TRISD5	set	1093
   374  0444                     _TRISD4	set	1092
   375  0438                     _TRISC0	set	1080
   376  0460                     _TMR1IE	set	1120
   377  0189                     _ANSELH	set	393
   378  0188                     _ANSEL	set	392
   379  002D                     STR_2:
   380  002D  3425               	retlw	37	;'%'
   381  002E  3464               	retlw	100	;'d'
   382  002F  3400               	retlw	0
   383  0030                     STR_1:
   384  0030  340C               	retlw	12
   385  0031  3400               	retlw	0
   386                           
   387                           	psect	cinit
   388  07FC                     start_initialization:	
   389                           ; #config settings
   390                           
   391  07FC                     __initialization:
   392  07FC                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  07FC                     __end_of__initialization:
   396  07FC  0183               	clrf	3
   397  07FD  120A  118A  2E03   	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	cstackCOMMON
   400  0070                     __pcstackCOMMON:
   401  0070                     ?_lcd_busy:
   402  0070                     ??_lcd_busy:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_lcd_init:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_lcd_putc:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_addCharSpecial:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_declarePort:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_declarePort:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_main:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_lcd_put_nibble:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ??_lcd_put_nibble:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_putch:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_getLengthArr:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?___lwdiv:	
   436                           ; 2 bytes @ 0x0
   437                           
   438  0070                     ___lwdiv@divisor:	
   439                           ; 2 bytes @ 0x0
   440                           
   441                           
   442                           ; 2 bytes @ 0x0
   443  0070                     	ds	1
   444  0071                     lcd_busy@busy:
   445  0071                     lcd_put_nibble@b:	
   446                           ; 1 bytes @ 0x1
   447                           
   448                           
   449                           ; 1 bytes @ 0x1
   450  0071                     	ds	1
   451  0072                     ??_getLengthArr:
   452  0072                     getLengthArr@character:	
   453                           ; 1 bytes @ 0x2
   454                           
   455  0072                     lcd_put_nibble@temp:	
   456                           ; 1 bytes @ 0x2
   457                           
   458  0072                     ___lwdiv@dividend:	
   459                           ; 1 bytes @ 0x2
   460                           
   461                           
   462                           ; 2 bytes @ 0x2
   463  0072                     	ds	1
   464  0073                     ?_lcd_put_byte:
   465  0073                     lcd_put_byte@b:	
   466                           ; 1 bytes @ 0x3
   467                           
   468  0073                     getLengthArr@i:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 2 bytes @ 0x3
   473  0073                     	ds	1
   474  0074                     ??_lcd_put_byte:
   475  0074                     ??___lwdiv:	
   476                           ; 1 bytes @ 0x4
   477                           
   478                           
   479                           ; 1 bytes @ 0x4
   480  0074                     	ds	1
   481  0075                     lcd_put_byte@rs:
   482  0075                     ___lwdiv@quotient:	
   483                           ; 1 bytes @ 0x5
   484                           
   485                           
   486                           ; 2 bytes @ 0x5
   487  0075                     	ds	1
   488  0076                     ??_lcd_init:
   489  0076                     ?_lcd_gotoxy:	
   490                           ; 1 bytes @ 0x6
   491                           
   492  0076                     ??_addCharSpecial:	
   493                           ; 1 bytes @ 0x6
   494                           
   495  0076                     lcd_gotoxy@row:	
   496                           ; 1 bytes @ 0x6
   497                           
   498                           
   499                           ; 1 bytes @ 0x6
   500  0076                     	ds	1
   501  0077                     ??_lcd_gotoxy:
   502  0077                     ___lwdiv@counter:	
   503                           ; 1 bytes @ 0x7
   504                           
   505  0077                     addCharSpecial@i:	
   506                           ; 1 bytes @ 0x7
   507                           
   508                           
   509                           ; 2 bytes @ 0x7
   510  0077                     	ds	1
   511  0078                     ?___lwmod:
   512  0078                     lcd_gotoxy@col:	
   513                           ; 2 bytes @ 0x8
   514                           
   515  0078                     ___lwmod@divisor:	
   516                           ; 1 bytes @ 0x8
   517                           
   518                           
   519                           ; 2 bytes @ 0x8
   520  0078                     	ds	1
   521  0079                     addCharSpecial@character:
   522  0079                     lcd_gotoxy@address:	
   523                           ; 1 bytes @ 0x9
   524                           
   525                           
   526                           ; 1 bytes @ 0x9
   527  0079                     	ds	1
   528  007A                     ??_lcd_putc:
   529  007A                     ___lwmod@dividend:	
   530                           ; 1 bytes @ 0xA
   531                           
   532                           
   533                           ; 2 bytes @ 0xA
   534  007A                     	ds	2
   535  007C                     ??___lwmod:
   536  007C                     lcd_putc@c:	
   537                           ; 1 bytes @ 0xC
   538                           
   539                           
   540                           ; 1 bytes @ 0xC
   541  007C                     	ds	1
   542  007D                     ??_putch:
   543  007D                     putch@c:	
   544                           ; 1 bytes @ 0xD
   545                           
   546  007D                     ___lwmod@counter:	
   547                           ; 1 bytes @ 0xD
   548                           
   549                           
   550                           ; 1 bytes @ 0xD
   551  007D                     	ds	1
   552  007E                     ??_main:
   553                           
   554                           	psect	cstackBANK0
   555  0020                     __pcstackBANK0:	
   556                           ; 1 bytes @ 0xE
   557                           
   558  0020                     ?_printf:
   559                           
   560                           ; 2 bytes @ 0x0
   561  0020                     	ds	2
   562  0022                     ??_printf:
   563                           
   564                           ; 1 bytes @ 0x2
   565  0022                     	ds	3
   566  0025                     printf@ap:
   567                           
   568                           ; 1 bytes @ 0x5
   569  0025                     	ds	1
   570  0026                     printf@flag:
   571                           
   572                           ; 1 bytes @ 0x6
   573  0026                     	ds	1
   574  0027                     printf@prec:
   575                           
   576                           ; 1 bytes @ 0x7
   577  0027                     	ds	1
   578  0028                     printf@f:
   579                           
   580                           ; 1 bytes @ 0x8
   581  0028                     	ds	1
   582  0029                     printf@val:
   583                           
   584                           ; 2 bytes @ 0x9
   585  0029                     	ds	2
   586  002B                     printf@c:
   587                           
   588                           ; 1 bytes @ 0xB
   589  002B                     	ds	1
   590  002C                     main@length:
   591                           
   592                           ; 2 bytes @ 0xC
   593  002C                     	ds	2
   594  002E                     main@i:
   595                           
   596                           ; 2 bytes @ 0xE
   597  002E                     	ds	2
   598                           
   599                           	psect	maintext
   600  0603                     __pmaintext:	
   601 ;;
   602 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   603 ;;
   604 ;; *************** function _main *****************
   605 ;; Defined at:
   606 ;;		line 63 in file "bai2.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  i               2   14[BANK0 ] unsigned int 
   611 ;;  length          2   12[BANK0 ] unsigned int 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : B00/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         0       4       0       0       0
   623 ;;      Temps:          0       0       0       0       0
   624 ;;      Totals:         0       4       0       0       0
   625 ;;Total ram usage:        4 bytes
   626 ;; Hardware stack levels required when called: 6
   627 ;; This function calls:
   628 ;;		_addCharSpecial
   629 ;;		_declarePort
   630 ;;		_getLengthArr
   631 ;;		_lcd_gotoxy
   632 ;;		_lcd_init
   633 ;;		_lcd_putc
   634 ;;		_printf
   635 ;; This function is called by:
   636 ;;		Startup code after reset
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _main
   642  0603                     _main:
   643  0603                     l1517:	
   644                           ;incstack = 0
   645                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   646                           
   647                           
   648                           ;bai2.c: 64:     declarePort();
   649  0603  120A  118A  23D7  120A  118A  	fcall	_declarePort
   650  0608                     l1519:
   651  0608                     l1521:
   652  0608                     l1523:
   653                           
   654                           ;bai2.c: 72:     addCharSpecial(special_name_title);
   655  0608  301C               	movlw	(low ((main@special_name_title-__stringbase)| (0+32768)))& (0+255)
   656  0609  120A  118A  2560  120A  118A  	fcall	_addCharSpecial
   657  060E                     l1525:
   658                           
   659                           ;bai2.c: 73:     lcd_init();
   660  060E  120A  118A  267E  120A  118A  	fcall	_lcd_init
   661  0613                     l1527:
   662                           
   663                           ;bai2.c: 75:         if(TMR1 > 30) {
   664  0613  3000               	movlw	0
   665  0614  1283               	bcf	3,5	;RP0=0, select bank0
   666  0615  1303               	bcf	3,6	;RP1=0, select bank0
   667  0616  020F               	subwf	15,w	;volatile
   668  0617  301F               	movlw	31
   669  0618  1903               	skipnz
   670  0619  020E               	subwf	14,w	;volatile
   671  061A  1C03               	skipc
   672  061B  2E1D               	goto	u1041
   673  061C  2E1E               	goto	u1040
   674  061D                     u1041:
   675  061D  2E25               	goto	l1533
   676  061E                     u1040:
   677  061E                     l1529:
   678                           
   679                           ;bai2.c: 76:             TMR1 = 0;
   680  061E  018E               	clrf	14	;volatile
   681  061F  018F               	clrf	15	;volatile
   682  0620                     l1531:
   683                           
   684                           ;bai2.c: 77:             lcd_init();
   685  0620  120A  118A  267E  120A  118A  	fcall	_lcd_init
   686  0625                     l1533:
   687                           
   688                           ;bai2.c: 79:         addCharSpecial(special_name_title);
   689  0625  301C               	movlw	(low ((main@special_name_title-__stringbase)| (0+32768)))& (0+255)
   690  0626  120A  118A  2560  120A  118A  	fcall	_addCharSpecial
   691  062B                     l1535:
   692                           
   693                           ;bai2.c: 80:         lcd_putc("\f");
   694  062B  3028               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   695  062C  120A  118A  25A7  120A  118A  	fcall	_lcd_putc
   696  0631                     l1537:
   697                           
   698                           ;bai2.c: 81:         lcd_gotoxy(0, 0);
   699  0631  01F6               	clrf	lcd_gotoxy@row
   700  0632  3000               	movlw	0
   701  0633  120A  118A  240F  120A  118A  	fcall	_lcd_gotoxy
   702  0638                     l1539:
   703                           
   704                           ;bai2.c: 82:         length = getLengthArr(your_name);
   705  0638  300B               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   706  0639  120A  118A  23F2  120A  118A  	fcall	_getLengthArr
   707  063E  0871               	movf	?_getLengthArr+1,w
   708  063F  1283               	bcf	3,5	;RP0=0, select bank0
   709  0640  1303               	bcf	3,6	;RP1=0, select bank0
   710  0641  00AD               	movwf	main@length+1
   711  0642  0870               	movf	?_getLengthArr,w
   712  0643  00AC               	movwf	main@length
   713  0644                     l1541:
   714                           
   715                           ;bai2.c: 83:         for(i = 0; i < length; i++) {
   716  0644  01AE               	clrf	main@i
   717  0645  01AF               	clrf	main@i+1
   718  0646  2E5C               	goto	l1547
   719  0647                     l1543:
   720                           
   721                           ;bai2.c: 84:             lcd_putc(your_name[i]);
   722  0647  082E               	movf	main@i,w
   723  0648  3E0B               	addlw	low ((main@your_name-__stringbase)| (0+32768))
   724  0649  0084               	movwf	4
   725  064A  120A  118A  2003  120A  118A  	fcall	stringdir
   726  064F  120A  118A  25A7  120A  118A  	fcall	_lcd_putc
   727  0654                     l1545:
   728                           
   729                           ;bai2.c: 85:         }
   730  0654  3001               	movlw	1
   731  0655  1283               	bcf	3,5	;RP0=0, select bank0
   732  0656  1303               	bcf	3,6	;RP1=0, select bank0
   733  0657  07AE               	addwf	main@i,f
   734  0658  1803               	skipnc
   735  0659  0AAF               	incf	main@i+1,f
   736  065A  3000               	movlw	0
   737  065B  07AF               	addwf	main@i+1,f
   738  065C                     l1547:
   739  065C  082D               	movf	main@length+1,w
   740  065D  022F               	subwf	main@i+1,w
   741  065E  1D03               	skipz
   742  065F  2E62               	goto	u1055
   743  0660  082C               	movf	main@length,w
   744  0661  022E               	subwf	main@i,w
   745  0662                     u1055:
   746  0662  1C03               	skipc
   747  0663  2E65               	goto	u1051
   748  0664  2E66               	goto	u1050
   749  0665                     u1051:
   750  0665  2E47               	goto	l1543
   751  0666                     u1050:
   752  0666                     l1549:
   753                           
   754                           ;bai2.c: 86:         lcd_gotoxy(7, 1);
   755  0666  01F6               	clrf	lcd_gotoxy@row
   756  0667  0AF6               	incf	lcd_gotoxy@row,f
   757  0668  3007               	movlw	7
   758  0669  120A  118A  240F  120A  118A  	fcall	_lcd_gotoxy
   759  066E                     l1551:
   760                           
   761                           ;bai2.c: 87:         printf("%d", TMR1);
   762  066E  1283               	bcf	3,5	;RP0=0, select bank0
   763  066F  1303               	bcf	3,6	;RP1=0, select bank0
   764  0670  080F               	movf	15,w	;volatile
   765  0671  00A1               	movwf	?_printf+1
   766  0672  080E               	movf	14,w	;volatile
   767  0673  00A0               	movwf	?_printf
   768  0674  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   769  0675  120A  118A  2721  120A  118A  	fcall	_printf
   770  067A                     l1553:
   771  067A  2E13               	goto	l1527
   772  067B  120A  118A  2800   	ljmp	start
   773  067E                     __end_of_main:
   774                           
   775                           	psect	text1
   776  0721                     __ptext1:	
   777 ;; *************** function _printf *****************
   778 ;; Defined at:
   779 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  f               1    wreg     PTR const unsigned char 
   782 ;;		 -> STR_2(3), 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  f               1    8[BANK0 ] PTR const unsigned char 
   785 ;;		 -> STR_2(3), 
   786 ;;  tmpval          4    0        struct .
   787 ;;  val             2    9[BANK0 ] unsigned int 
   788 ;;  cp              2    0        PTR const unsigned char 
   789 ;;  len             2    0        unsigned int 
   790 ;;  c               1   11[BANK0 ] unsigned char 
   791 ;;  prec            1    7[BANK0 ] char 
   792 ;;  flag            1    6[BANK0 ] unsigned char 
   793 ;;  ap              1    5[BANK0 ] PTR void [1]
   794 ;;		 -> ?_printf(2), 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  2    0[BANK0 ] int 
   797 ;; Registers used:
   798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       2       0       0       0
   805 ;;      Locals:         0       7       0       0       0
   806 ;;      Temps:          0       3       0       0       0
   807 ;;      Totals:         0      12       0       0       0
   808 ;;Total ram usage:       12 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 5
   811 ;; This function calls:
   812 ;;		___lwdiv
   813 ;;		___lwmod
   814 ;;		_putch
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _printf
   822  0721                     _printf:
   823                           
   824                           ;incstack = 0
   825                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   826                           ;printf@f stored from wreg
   827  0721  1283               	bcf	3,5	;RP0=0, select bank0
   828  0722  1303               	bcf	3,6	;RP1=0, select bank0
   829  0723  00A8               	movwf	printf@f
   830  0724                     l1463:
   831                           
   832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   833  0724  3020               	movlw	(low (?_printf| 0))& (0+255)
   834  0725  00A2               	movwf	??_printf
   835  0726  0822               	movf	??_printf,w
   836  0727  00A5               	movwf	printf@ap
   837                           
   838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   839  0728  2FE7               	goto	l1507
   840  0729                     l1465:
   841                           
   842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   843  0729  3025               	movlw	37
   844  072A  062B               	xorwf	printf@c,w
   845  072B  1903               	btfsc	3,2
   846  072C  2F2E               	goto	u971
   847  072D  2F2F               	goto	u970
   848  072E                     u971:
   849  072E  2F36               	goto	l1469
   850  072F                     u970:
   851  072F                     l1467:
   852                           
   853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   854  072F  082B               	movf	printf@c,w
   855  0730  120A  118A  23CF  120A  118A  	fcall	_putch
   856                           
   857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
   858  0735  2FE7               	goto	l1507
   859  0736                     l1469:
   860                           
   861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   862  0736  01A6               	clrf	printf@flag
   863  0737                     l1473:	
   864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   865                           
   866  0737  3001               	movlw	1
   867  0738  07A8               	addwf	printf@f,f
   868  0739  30FF               	movlw	-1
   869  073A  0728               	addwf	printf@f,w
   870  073B  0084               	movwf	4
   871  073C  120A  118A  2003  120A  118A  	fcall	stringdir
   872  0741  00AB               	movwf	printf@c
   873  0742  00A2               	movwf	??_printf
   874  0743  01A3               	clrf	??_printf+1
   875                           
   876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   877                           ; Switch size 1, requested type "simple"
   878                           ; Number of cases is 1, Range of values is 0 to 0
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; simple_byte            4     3 (average)
   882                           ; direct_byte           11     8 (fixed)
   883                           ; jumptable            260     6 (fixed)
   884                           ;	Chosen strategy is simple_byte
   885  0744  0823               	movf	??_printf+1,w
   886  0745  3A00               	xorlw	0	; case 0
   887  0746  1903               	skipnz
   888  0747  2F49               	goto	l1631
   889  0748  2FE7               	goto	l1507
   890  0749                     l1631:
   891                           
   892                           ; Switch size 1, requested type "simple"
   893                           ; Number of cases is 3, Range of values is 0 to 105
   894                           ; switch strategies available:
   895                           ; Name         Instructions Cycles
   896                           ; simple_byte           10     6 (average)
   897                           ; jumptable            260     6 (fixed)
   898                           ;	Chosen strategy is simple_byte
   899  0749  0822               	movf	??_printf,w
   900  074A  3A00               	xorlw	0	; case 0
   901  074B  1903               	skipnz
   902  074C  2FFB               	goto	l311
   903  074D  3A64               	xorlw	100	; case 100
   904  074E  1903               	skipnz
   905  074F  2F54               	goto	l1475
   906  0750  3A0D               	xorlw	13	; case 105
   907  0751  1903               	skipnz
   908  0752  2F54               	goto	l1475
   909  0753  2FE7               	goto	l1507
   910  0754                     l1475:
   911                           
   912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   913  0754  0825               	movf	printf@ap,w
   914  0755  0084               	movwf	4
   915  0756  1383               	bcf	3,7	;select IRP bank0
   916  0757  0800               	movf	0,w
   917  0758  00A9               	movwf	printf@val
   918  0759  0A84               	incf	4,f
   919  075A  0800               	movf	0,w
   920  075B  00AA               	movwf	printf@val+1
   921  075C                     l1477:
   922  075C  3002               	movlw	2
   923  075D  00A2               	movwf	??_printf
   924  075E  0822               	movf	??_printf,w
   925  075F  07A5               	addwf	printf@ap,f
   926  0760                     l1479:
   927                           
   928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   929  0760  1FAA               	btfss	printf@val+1,7
   930  0761  2F63               	goto	u981
   931  0762  2F64               	goto	u980
   932  0763                     u981:
   933  0763  2F6D               	goto	l1485
   934  0764                     u980:
   935  0764                     l1481:
   936                           
   937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   938  0764  3003               	movlw	3
   939  0765  00A2               	movwf	??_printf
   940  0766  0822               	movf	??_printf,w
   941  0767  04A6               	iorwf	printf@flag,f
   942  0768                     l1483:
   943                           
   944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   945  0768  09A9               	comf	printf@val,f
   946  0769  09AA               	comf	printf@val+1,f
   947  076A  0AA9               	incf	printf@val,f
   948  076B  1903               	skipnz
   949  076C  0AAA               	incf	printf@val+1,f
   950  076D                     l1485:
   951                           
   952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   953  076D  01AB               	clrf	printf@c
   954  076E  0AAB               	incf	printf@c,f
   955  076F                     l1491:
   956                           
   957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   958  076F  082B               	movf	printf@c,w
   959  0770  00A2               	movwf	??_printf
   960  0771  0722               	addwf	??_printf,w
   961  0772  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   962  0773  0084               	movwf	4
   963  0774  120A  118A  2003  120A  118A  	fcall	stringdir
   964  0779  00A3               	movwf	??_printf+1
   965  077A  120A  118A  2003  120A  118A  	fcall	stringdir
   966  077F  00A4               	movwf	??_printf+2
   967  0780  0824               	movf	??_printf+2,w
   968  0781  022A               	subwf	printf@val+1,w
   969  0782  1D03               	skipz
   970  0783  2F86               	goto	u995
   971  0784  0823               	movf	??_printf+1,w
   972  0785  0229               	subwf	printf@val,w
   973  0786                     u995:
   974  0786  1803               	skipnc
   975  0787  2F89               	goto	u991
   976  0788  2F8A               	goto	u990
   977  0789                     u991:
   978  0789  2F8B               	goto	l1495
   979  078A                     u990:
   980  078A  2F95               	goto	l1497
   981  078B                     l1495:
   982  078B  3001               	movlw	1
   983  078C  00A2               	movwf	??_printf
   984  078D  0822               	movf	??_printf,w
   985  078E  07AB               	addwf	printf@c,f
   986  078F  3005               	movlw	5
   987  0790  062B               	xorwf	printf@c,w
   988  0791  1D03               	btfss	3,2
   989  0792  2F94               	goto	u1001
   990  0793  2F95               	goto	u1000
   991  0794                     u1001:
   992  0794  2F6F               	goto	l1491
   993  0795                     u1000:
   994  0795                     l1497:
   995                           
   996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
   997  0795  0826               	movf	printf@flag,w
   998  0796  3903               	andlw	3
   999  0797  1903               	btfsc	3,2
  1000  0798  2F9A               	goto	u1011
  1001  0799  2F9B               	goto	u1010
  1002  079A                     u1011:
  1003  079A  2FA1               	goto	l1501
  1004  079B                     u1010:
  1005  079B                     l1499:
  1006                           
  1007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  1008  079B  302D               	movlw	45
  1009  079C  120A  118A  23CF  120A  118A  	fcall	_putch
  1010  07A1                     l1501:
  1011                           
  1012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1013  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1014  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1015  07A3  082B               	movf	printf@c,w
  1016  07A4  00A2               	movwf	??_printf
  1017  07A5  0822               	movf	??_printf,w
  1018  07A6  00A7               	movwf	printf@prec
  1019                           
  1020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1021  07A7  2FDC               	goto	l1505
  1022  07A8                     l1503:
  1023                           
  1024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1025  07A8  300A               	movlw	10
  1026  07A9  00F8               	movwf	___lwmod@divisor
  1027  07AA  3000               	movlw	0
  1028  07AB  00F9               	movwf	___lwmod@divisor+1
  1029  07AC  0827               	movf	printf@prec,w
  1030  07AD  00A2               	movwf	??_printf
  1031  07AE  0722               	addwf	??_printf,w
  1032  07AF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1033  07B0  0084               	movwf	4
  1034  07B1  120A  118A  2003  120A  118A  	fcall	stringdir
  1035  07B6  00F0               	movwf	___lwdiv@divisor
  1036  07B7  120A  118A  2003  120A  118A  	fcall	stringdir
  1037  07BC  00F1               	movwf	___lwdiv@divisor+1
  1038  07BD  082A               	movf	printf@val+1,w
  1039  07BE  00F3               	movwf	___lwdiv@dividend+1
  1040  07BF  0829               	movf	printf@val,w
  1041  07C0  00F2               	movwf	___lwdiv@dividend
  1042  07C1  120A  118A  251C  120A  118A  	fcall	___lwdiv
  1043  07C6  0871               	movf	?___lwdiv+1,w
  1044  07C7  00FB               	movwf	___lwmod@dividend+1
  1045  07C8  0870               	movf	?___lwdiv,w
  1046  07C9  00FA               	movwf	___lwmod@dividend
  1047  07CA  120A  118A  249E  120A  118A  	fcall	___lwmod
  1048  07CF  0878               	movf	?___lwmod,w
  1049  07D0  3E30               	addlw	48
  1050  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1051  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1052  07D3  00A3               	movwf	??_printf+1
  1053  07D4  0823               	movf	??_printf+1,w
  1054  07D5  00AB               	movwf	printf@c
  1055                           
  1056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  1057  07D6  082B               	movf	printf@c,w
  1058  07D7  120A  118A  23CF  120A  118A  	fcall	_putch
  1059  07DC                     l1505:
  1060                           
  1061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1062  07DC  30FF               	movlw	255
  1063  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  1064  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  1065  07DF  00A2               	movwf	??_printf
  1066  07E0  0822               	movf	??_printf,w
  1067  07E1  07A7               	addwf	printf@prec,f
  1068  07E2  0A27               	incf	printf@prec,w
  1069  07E3  1D03               	btfss	3,2
  1070  07E4  2FE6               	goto	u1021
  1071  07E5  2FE7               	goto	u1020
  1072  07E6                     u1021:
  1073  07E6  2FA8               	goto	l1503
  1074  07E7                     u1020:
  1075  07E7                     l1507:
  1076                           
  1077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1078  07E7  3001               	movlw	1
  1079  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  1080  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  1081  07EA  07A8               	addwf	printf@f,f
  1082  07EB  30FF               	movlw	-1
  1083  07EC  0728               	addwf	printf@f,w
  1084  07ED  0084               	movwf	4
  1085  07EE  120A  118A  2003  120A  118A  	fcall	stringdir
  1086  07F3  00A2               	movwf	??_printf
  1087  07F4  0822               	movf	??_printf,w
  1088  07F5  00AB               	movwf	printf@c
  1089  07F6  082B               	movf	printf@c,w
  1090  07F7  1D03               	btfss	3,2
  1091  07F8  2FFA               	goto	u1031
  1092  07F9  2FFB               	goto	u1030
  1093  07FA                     u1031:
  1094  07FA  2F29               	goto	l1465
  1095  07FB                     u1030:
  1096  07FB                     l311:
  1097  07FB  0008               	return
  1098  07FC                     __end_of_printf:
  1099                           
  1100                           	psect	text2
  1101  03CF                     __ptext2:	
  1102 ;; *************** function _putch *****************
  1103 ;; Defined at:
  1104 ;;		line 368 in file "../Counter0_bai1.X/lcd.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  c               1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  c               1   13[COMMON] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0
  1121 ;;      Totals:         1       0       0       0       0
  1122 ;;Total ram usage:        1 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 4
  1125 ;; This function calls:
  1126 ;;		_lcd_putc
  1127 ;; This function is called by:
  1128 ;;		_printf
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _putch
  1134  03CF                     _putch:
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1138                           ;putch@c stored from wreg
  1139  03CF  00FD               	movwf	putch@c
  1140  03D0                     l1331:
  1141                           
  1142                           ;../Counter0_bai1.X/lcd.c: 368: void putch(char c);../Counter0_bai1.X/lcd.c: 369: {;../C
      +                          ounter0_bai1.X/lcd.c: 370:     lcd_putc(c);
  1143  03D0  087D               	movf	putch@c,w
  1144  03D1  120A  118A  25A7  120A  118A  	fcall	_lcd_putc
  1145  03D6                     l199:
  1146  03D6  0008               	return
  1147  03D7                     __end_of_putch:
  1148                           
  1149                           	psect	text3
  1150  05A7                     __ptext3:	
  1151 ;; *************** function _lcd_putc *****************
  1152 ;; Defined at:
  1153 ;;		line 190 in file "../Counter0_bai1.X/lcd.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  c               1    wreg     unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  c               1   12[COMMON] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1167 ;;      Params:         0       0       0       0       0
  1168 ;;      Locals:         1       0       0       0       0
  1169 ;;      Temps:          2       0       0       0       0
  1170 ;;      Totals:         3       0       0       0       0
  1171 ;;Total ram usage:        3 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 3
  1174 ;; This function calls:
  1175 ;;		_lcd_busy
  1176 ;;		_lcd_gotoxy
  1177 ;;		_lcd_put_byte
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;;		_putch
  1181 ;;		_lcd_puts
  1182 ;;		_lcd_String_Delay
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _lcd_putc
  1188  05A7                     _lcd_putc:
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1192                           ;lcd_putc@c stored from wreg
  1193  05A7  00FC               	movwf	lcd_putc@c
  1194  05A8                     l1309:
  1195                           
  1196                           ;../Counter0_bai1.X/lcd.c: 190: void lcd_putc(char c);../Counter0_bai1.X/lcd.c: 191: {;.
      +                          ./Counter0_bai1.X/lcd.c: 195:  switch(c)
  1197  05A8  2DEF               	goto	l1325
  1198  05A9                     l1311:
  1199                           
  1200                           ;../Counter0_bai1.X/lcd.c: 198:    lcd_put_byte(0,1);
  1201  05A9  01F3               	clrf	lcd_put_byte@b
  1202  05AA  0AF3               	incf	lcd_put_byte@b,f
  1203  05AB  3000               	movlw	0
  1204  05AC  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  1205  05B1                     l1313:	
  1206                           ;../Counter0_bai1.X/lcd.c: 199:    while(lcd_busy());
  1207                           
  1208  05B1  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1209  05B6  3A00               	xorlw	0
  1210  05B7  1D03               	skipz
  1211  05B8  2DBA               	goto	u721
  1212  05B9  2DBB               	goto	u720
  1213  05BA                     u721:
  1214  05BA  2DB1               	goto	l1313
  1215  05BB                     u720:
  1216  05BB  2E02               	goto	l148
  1217  05BC                     l1315:
  1218                           
  1219                           ;../Counter0_bai1.X/lcd.c: 202:    lcd_gotoxy(0,1);
  1220  05BC  01F6               	clrf	lcd_gotoxy@row
  1221  05BD  0AF6               	incf	lcd_gotoxy@row,f
  1222  05BE  3000               	movlw	0
  1223  05BF  120A  118A  240F  120A  118A  	fcall	_lcd_gotoxy
  1224                           
  1225                           ;../Counter0_bai1.X/lcd.c: 203:    break;
  1226  05C4  2E02               	goto	l148
  1227  05C5                     l1317:
  1228                           
  1229                           ;../Counter0_bai1.X/lcd.c: 205:    lcd_put_byte(0,0x10);
  1230  05C5  3010               	movlw	16
  1231  05C6  00FA               	movwf	??_lcd_putc
  1232  05C7  087A               	movf	??_lcd_putc,w
  1233  05C8  00F3               	movwf	lcd_put_byte@b
  1234  05C9  3000               	movlw	0
  1235  05CA  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  1236  05CF                     l1319:	
  1237                           ;../Counter0_bai1.X/lcd.c: 206:    while(lcd_busy());
  1238                           
  1239  05CF  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1240  05D4  3A00               	xorlw	0
  1241  05D5  1D03               	skipz
  1242  05D6  2DD8               	goto	u731
  1243  05D7  2DD9               	goto	u730
  1244  05D8                     u731:
  1245  05D8  2DCF               	goto	l1319
  1246  05D9                     u730:
  1247  05D9  2E02               	goto	l148
  1248  05DA                     l1321:
  1249                           
  1250                           ;../Counter0_bai1.X/lcd.c: 210:     {;../Counter0_bai1.X/lcd.c: 211:     lcd_put_byte(1,
      +                          c);
  1251  05DA  087C               	movf	lcd_putc@c,w
  1252  05DB  00FA               	movwf	??_lcd_putc
  1253  05DC  087A               	movf	??_lcd_putc,w
  1254  05DD  00F3               	movwf	lcd_put_byte@b
  1255  05DE  3001               	movlw	1
  1256  05DF  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  1257  05E4                     l1323:	
  1258                           ;../Counter0_bai1.X/lcd.c: 212:     while(lcd_busy());
  1259                           
  1260  05E4  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1261  05E9  3A00               	xorlw	0
  1262  05EA  1D03               	skipz
  1263  05EB  2DED               	goto	u741
  1264  05EC  2DEE               	goto	u740
  1265  05ED                     u741:
  1266  05ED  2DE4               	goto	l1323
  1267  05EE                     u740:
  1268  05EE  2E02               	goto	l148
  1269  05EF                     l1325:
  1270  05EF  087C               	movf	lcd_putc@c,w
  1271  05F0  00FA               	movwf	??_lcd_putc
  1272  05F1  01FB               	clrf	??_lcd_putc+1
  1273                           
  1274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1275                           ; Switch size 1, requested type "simple"
  1276                           ; Number of cases is 1, Range of values is 0 to 0
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte            4     3 (average)
  1280                           ; direct_byte           11     8 (fixed)
  1281                           ; jumptable            260     6 (fixed)
  1282                           ;	Chosen strategy is simple_byte
  1283  05F2  087B               	movf	??_lcd_putc+1,w
  1284  05F3  3A00               	xorlw	0	; case 0
  1285  05F4  1903               	skipnz
  1286  05F5  2DF7               	goto	l1633
  1287  05F6  2DDA               	goto	l1321
  1288  05F7                     l1633:
  1289                           
  1290                           ; Switch size 1, requested type "simple"
  1291                           ; Number of cases is 3, Range of values is 8 to 12
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte           10     6 (average)
  1295                           ; direct_byte           26    11 (fixed)
  1296                           ; jumptable            263     9 (fixed)
  1297                           ;	Chosen strategy is simple_byte
  1298  05F7  087A               	movf	??_lcd_putc,w
  1299  05F8  3A08               	xorlw	8	; case 8
  1300  05F9  1903               	skipnz
  1301  05FA  2DC5               	goto	l1317
  1302  05FB  3A02               	xorlw	2	; case 10
  1303  05FC  1903               	skipnz
  1304  05FD  2DBC               	goto	l1315
  1305  05FE  3A06               	xorlw	6	; case 12
  1306  05FF  1903               	skipnz
  1307  0600  2DA9               	goto	l1311
  1308  0601  2DDA               	goto	l1321
  1309  0602                     l148:
  1310  0602  0008               	return
  1311  0603                     __end_of_lcd_putc:
  1312                           
  1313                           	psect	text4
  1314  040F                     __ptext4:	
  1315 ;; *************** function _lcd_gotoxy *****************
  1316 ;; Defined at:
  1317 ;;		line 167 in file "../Counter0_bai1.X/lcd.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  col             1    wreg     unsigned char 
  1320 ;;  row             1    6[COMMON] unsigned char 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  col             1    8[COMMON] unsigned char 
  1323 ;;  address         1    9[COMMON] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0, pclath, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         1       0       0       0       0
  1334 ;;      Locals:         2       0       0       0       0
  1335 ;;      Temps:          1       0       0       0       0
  1336 ;;      Totals:         4       0       0       0       0
  1337 ;;Total ram usage:        4 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 2
  1340 ;; This function calls:
  1341 ;;		_lcd_busy
  1342 ;;		_lcd_put_byte
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;;		_lcd_putc
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _lcd_gotoxy
  1351  040F                     _lcd_gotoxy:
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1355                           ;lcd_gotoxy@col stored from wreg
  1356  040F  00F8               	movwf	lcd_gotoxy@col
  1357  0410                     l1297:
  1358                           
  1359                           ;../Counter0_bai1.X/lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);..
      +                          /Counter0_bai1.X/lcd.c: 168: {;../Counter0_bai1.X/lcd.c: 170:  unsigned char address;;..
      +                          /Counter0_bai1.X/lcd.c: 173:  if(row!=0)
  1360  0410  0876               	movf	lcd_gotoxy@row,w
  1361  0411  1903               	btfsc	3,2
  1362  0412  2C14               	goto	u701
  1363  0413  2C15               	goto	u700
  1364  0414                     u701:
  1365  0414  2C1A               	goto	l1301
  1366  0415                     u700:
  1367  0415                     l1299:
  1368                           
  1369                           ;../Counter0_bai1.X/lcd.c: 174:   address=0x40;
  1370  0415  3040               	movlw	64
  1371  0416  00F7               	movwf	??_lcd_gotoxy
  1372  0417  0877               	movf	??_lcd_gotoxy,w
  1373  0418  00F9               	movwf	lcd_gotoxy@address
  1374  0419  2C1B               	goto	l1303
  1375  041A                     l1301:
  1376                           
  1377                           ;../Counter0_bai1.X/lcd.c: 176:   address=0;
  1378  041A  01F9               	clrf	lcd_gotoxy@address
  1379  041B                     l1303:
  1380                           
  1381                           ;../Counter0_bai1.X/lcd.c: 178:  address += col;
  1382  041B  0878               	movf	lcd_gotoxy@col,w
  1383  041C  00F7               	movwf	??_lcd_gotoxy
  1384  041D  0877               	movf	??_lcd_gotoxy,w
  1385  041E  07F9               	addwf	lcd_gotoxy@address,f
  1386  041F                     l1305:
  1387                           
  1388                           ;../Counter0_bai1.X/lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1389  041F  0879               	movf	lcd_gotoxy@address,w
  1390  0420  3880               	iorlw	128
  1391  0421  00F7               	movwf	??_lcd_gotoxy
  1392  0422  0877               	movf	??_lcd_gotoxy,w
  1393  0423  00F3               	movwf	lcd_put_byte@b
  1394  0424  3000               	movlw	0
  1395  0425  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  1396  042A                     l1307:	
  1397                           ;../Counter0_bai1.X/lcd.c: 181:  while(lcd_busy());
  1398                           
  1399  042A  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1400  042F  3A00               	xorlw	0
  1401  0430  1D03               	skipz
  1402  0431  2C33               	goto	u711
  1403  0432  2C34               	goto	u710
  1404  0433                     u711:
  1405  0433  2C2A               	goto	l1307
  1406  0434                     u710:
  1407  0434                     l130:
  1408  0434  0008               	return
  1409  0435                     __end_of_lcd_gotoxy:
  1410                           
  1411                           	psect	text5
  1412  049E                     __ptext5:	
  1413 ;; *************** function ___lwmod *****************
  1414 ;; Defined at:
  1415 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  divisor         2    8[COMMON] unsigned int 
  1418 ;;  dividend        2   10[COMMON] unsigned int 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  counter         1   13[COMMON] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  2    8[COMMON] unsigned int 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1430 ;;      Params:         4       0       0       0       0
  1431 ;;      Locals:         1       0       0       0       0
  1432 ;;      Temps:          1       0       0       0       0
  1433 ;;      Totals:         6       0       0       0       0
  1434 ;;Total ram usage:        6 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_printf
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function ___lwmod
  1445  049E                     ___lwmod:
  1446  049E                     l1359:	
  1447                           ;incstack = 0
  1448                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1449                           
  1450  049E  0878               	movf	___lwmod@divisor,w
  1451  049F  0479               	iorwf	___lwmod@divisor+1,w
  1452  04A0  1903               	btfsc	3,2
  1453  04A1  2CA3               	goto	u821
  1454  04A2  2CA4               	goto	u820
  1455  04A3                     u821:
  1456  04A3  2CD3               	goto	l1377
  1457  04A4                     u820:
  1458  04A4                     l1361:
  1459  04A4  01FD               	clrf	___lwmod@counter
  1460  04A5  0AFD               	incf	___lwmod@counter,f
  1461  04A6  2CB2               	goto	l1367
  1462  04A7                     l1363:
  1463  04A7  3001               	movlw	1
  1464  04A8                     u835:
  1465  04A8  1003               	clrc
  1466  04A9  0DF8               	rlf	___lwmod@divisor,f
  1467  04AA  0DF9               	rlf	___lwmod@divisor+1,f
  1468  04AB  3EFF               	addlw	-1
  1469  04AC  1D03               	skipz
  1470  04AD  2CA8               	goto	u835
  1471  04AE                     l1365:
  1472  04AE  3001               	movlw	1
  1473  04AF  00FC               	movwf	??___lwmod
  1474  04B0  087C               	movf	??___lwmod,w
  1475  04B1  07FD               	addwf	___lwmod@counter,f
  1476  04B2                     l1367:
  1477  04B2  1FF9               	btfss	___lwmod@divisor+1,7
  1478  04B3  2CB5               	goto	u841
  1479  04B4  2CB6               	goto	u840
  1480  04B5                     u841:
  1481  04B5  2CA7               	goto	l1363
  1482  04B6                     u840:
  1483  04B6                     l1369:
  1484  04B6  0879               	movf	___lwmod@divisor+1,w
  1485  04B7  027B               	subwf	___lwmod@dividend+1,w
  1486  04B8  1D03               	skipz
  1487  04B9  2CBC               	goto	u855
  1488  04BA  0878               	movf	___lwmod@divisor,w
  1489  04BB  027A               	subwf	___lwmod@dividend,w
  1490  04BC                     u855:
  1491  04BC  1C03               	skipc
  1492  04BD  2CBF               	goto	u851
  1493  04BE  2CC0               	goto	u850
  1494  04BF                     u851:
  1495  04BF  2CC6               	goto	l1373
  1496  04C0                     u850:
  1497  04C0                     l1371:
  1498  04C0  0878               	movf	___lwmod@divisor,w
  1499  04C1  02FA               	subwf	___lwmod@dividend,f
  1500  04C2  0879               	movf	___lwmod@divisor+1,w
  1501  04C3  1C03               	skipc
  1502  04C4  03FB               	decf	___lwmod@dividend+1,f
  1503  04C5  02FB               	subwf	___lwmod@dividend+1,f
  1504  04C6                     l1373:
  1505  04C6  3001               	movlw	1
  1506  04C7                     u865:
  1507  04C7  1003               	clrc
  1508  04C8  0CF9               	rrf	___lwmod@divisor+1,f
  1509  04C9  0CF8               	rrf	___lwmod@divisor,f
  1510  04CA  3EFF               	addlw	-1
  1511  04CB  1D03               	skipz
  1512  04CC  2CC7               	goto	u865
  1513  04CD                     l1375:
  1514  04CD  3001               	movlw	1
  1515  04CE  02FD               	subwf	___lwmod@counter,f
  1516  04CF  1D03               	btfss	3,2
  1517  04D0  2CD2               	goto	u871
  1518  04D1  2CD3               	goto	u870
  1519  04D2                     u871:
  1520  04D2  2CB6               	goto	l1369
  1521  04D3                     u870:
  1522  04D3                     l1377:
  1523  04D3  087B               	movf	___lwmod@dividend+1,w
  1524  04D4  00F9               	movwf	?___lwmod+1
  1525  04D5  087A               	movf	___lwmod@dividend,w
  1526  04D6  00F8               	movwf	?___lwmod
  1527  04D7                     l597:
  1528  04D7  0008               	return
  1529  04D8                     __end_of___lwmod:
  1530                           
  1531                           	psect	text6
  1532  051C                     __ptext6:	
  1533 ;; *************** function ___lwdiv *****************
  1534 ;; Defined at:
  1535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  divisor         2    0[COMMON] unsigned int 
  1538 ;;  dividend        2    2[COMMON] unsigned int 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  quotient        2    5[COMMON] unsigned int 
  1541 ;;  counter         1    7[COMMON] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  2    0[COMMON] unsigned int 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         4       0       0       0       0
  1552 ;;      Locals:         3       0       0       0       0
  1553 ;;      Temps:          1       0       0       0       0
  1554 ;;      Totals:         8       0       0       0       0
  1555 ;;Total ram usage:        8 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_printf
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function ___lwdiv
  1566  051C                     ___lwdiv:
  1567  051C                     l1333:	
  1568                           ;incstack = 0
  1569                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1570                           
  1571  051C  01F5               	clrf	___lwdiv@quotient
  1572  051D  01F6               	clrf	___lwdiv@quotient+1
  1573  051E                     l1335:
  1574  051E  0870               	movf	___lwdiv@divisor,w
  1575  051F  0471               	iorwf	___lwdiv@divisor+1,w
  1576  0520  1903               	btfsc	3,2
  1577  0521  2D23               	goto	u751
  1578  0522  2D24               	goto	u750
  1579  0523                     u751:
  1580  0523  2D5B               	goto	l1355
  1581  0524                     u750:
  1582  0524                     l1337:
  1583  0524  01F7               	clrf	___lwdiv@counter
  1584  0525  0AF7               	incf	___lwdiv@counter,f
  1585  0526  2D32               	goto	l1343
  1586  0527                     l1339:
  1587  0527  3001               	movlw	1
  1588  0528                     u765:
  1589  0528  1003               	clrc
  1590  0529  0DF0               	rlf	___lwdiv@divisor,f
  1591  052A  0DF1               	rlf	___lwdiv@divisor+1,f
  1592  052B  3EFF               	addlw	-1
  1593  052C  1D03               	skipz
  1594  052D  2D28               	goto	u765
  1595  052E                     l1341:
  1596  052E  3001               	movlw	1
  1597  052F  00F4               	movwf	??___lwdiv
  1598  0530  0874               	movf	??___lwdiv,w
  1599  0531  07F7               	addwf	___lwdiv@counter,f
  1600  0532                     l1343:
  1601  0532  1FF1               	btfss	___lwdiv@divisor+1,7
  1602  0533  2D35               	goto	u771
  1603  0534  2D36               	goto	u770
  1604  0535                     u771:
  1605  0535  2D27               	goto	l1339
  1606  0536                     u770:
  1607  0536                     l1345:
  1608  0536  3001               	movlw	1
  1609  0537                     u785:
  1610  0537  1003               	clrc
  1611  0538  0DF5               	rlf	___lwdiv@quotient,f
  1612  0539  0DF6               	rlf	___lwdiv@quotient+1,f
  1613  053A  3EFF               	addlw	-1
  1614  053B  1D03               	skipz
  1615  053C  2D37               	goto	u785
  1616  053D  0871               	movf	___lwdiv@divisor+1,w
  1617  053E  0273               	subwf	___lwdiv@dividend+1,w
  1618  053F  1D03               	skipz
  1619  0540  2D43               	goto	u795
  1620  0541  0870               	movf	___lwdiv@divisor,w
  1621  0542  0272               	subwf	___lwdiv@dividend,w
  1622  0543                     u795:
  1623  0543  1C03               	skipc
  1624  0544  2D46               	goto	u791
  1625  0545  2D47               	goto	u790
  1626  0546                     u791:
  1627  0546  2D4E               	goto	l1351
  1628  0547                     u790:
  1629  0547                     l1347:
  1630  0547  0870               	movf	___lwdiv@divisor,w
  1631  0548  02F2               	subwf	___lwdiv@dividend,f
  1632  0549  0871               	movf	___lwdiv@divisor+1,w
  1633  054A  1C03               	skipc
  1634  054B  03F3               	decf	___lwdiv@dividend+1,f
  1635  054C  02F3               	subwf	___lwdiv@dividend+1,f
  1636  054D                     l1349:
  1637  054D  1475               	bsf	___lwdiv@quotient,0
  1638  054E                     l1351:
  1639  054E  3001               	movlw	1
  1640  054F                     u805:
  1641  054F  1003               	clrc
  1642  0550  0CF1               	rrf	___lwdiv@divisor+1,f
  1643  0551  0CF0               	rrf	___lwdiv@divisor,f
  1644  0552  3EFF               	addlw	-1
  1645  0553  1D03               	skipz
  1646  0554  2D4F               	goto	u805
  1647  0555                     l1353:
  1648  0555  3001               	movlw	1
  1649  0556  02F7               	subwf	___lwdiv@counter,f
  1650  0557  1D03               	btfss	3,2
  1651  0558  2D5A               	goto	u811
  1652  0559  2D5B               	goto	u810
  1653  055A                     u811:
  1654  055A  2D36               	goto	l1345
  1655  055B                     u810:
  1656  055B                     l1355:
  1657  055B  0876               	movf	___lwdiv@quotient+1,w
  1658  055C  00F1               	movwf	?___lwdiv+1
  1659  055D  0875               	movf	___lwdiv@quotient,w
  1660  055E  00F0               	movwf	?___lwdiv
  1661  055F                     l587:
  1662  055F  0008               	return
  1663  0560                     __end_of___lwdiv:
  1664                           
  1665                           	psect	text7
  1666  067E                     __ptext7:	
  1667 ;; *************** function _lcd_init *****************
  1668 ;; Defined at:
  1669 ;;		line 241 in file "../Counter0_bai1.X/lcd.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  i               1    0        unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0
  1685 ;;      Temps:          2       0       0       0       0
  1686 ;;      Totals:         2       0       0       0       0
  1687 ;;Total ram usage:        2 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 2
  1690 ;; This function calls:
  1691 ;;		_lcd_busy
  1692 ;;		_lcd_put_byte
  1693 ;;		_lcd_put_nibble
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _lcd_init
  1701  067E                     _lcd_init:
  1702  067E                     l1425:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1705                           
  1706                           
  1707                           ;../Counter0_bai1.X/lcd.c: 244: unsigned char i;;../Counter0_bai1.X/lcd.c: 247:  TRISD3 
      +                          = 0;
  1708  067E  1683               	bsf	3,5	;RP0=1, select bank1
  1709  067F  1303               	bcf	3,6	;RP1=0, select bank1
  1710  0680  1188               	bcf	8,3	;volatile
  1711                           
  1712                           ;../Counter0_bai1.X/lcd.c: 248:  TRISD1 = 0;
  1713  0681  1088               	bcf	8,1	;volatile
  1714                           
  1715                           ;../Counter0_bai1.X/lcd.c: 249:  TRISD2 = 0;
  1716  0682  1108               	bcf	8,2	;volatile
  1717                           
  1718                           ;../Counter0_bai1.X/lcd.c: 250:  TRISD4 = 0;
  1719  0683  1208               	bcf	8,4	;volatile
  1720                           
  1721                           ;../Counter0_bai1.X/lcd.c: 251:  TRISD5 = 0;
  1722  0684  1288               	bcf	8,5	;volatile
  1723                           
  1724                           ;../Counter0_bai1.X/lcd.c: 252:  TRISD6 = 0;
  1725  0685  1308               	bcf	8,6	;volatile
  1726                           
  1727                           ;../Counter0_bai1.X/lcd.c: 253:  TRISD7 = 0;
  1728  0686  1388               	bcf	8,7	;volatile
  1729  0687                     l1427:
  1730                           
  1731                           ;../Counter0_bai1.X/lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1732  0687  3014               	movlw	20
  1733  0688  00F7               	movwf	??_lcd_init+1
  1734  0689  3079               	movlw	121
  1735  068A  00F6               	movwf	??_lcd_init
  1736  068B                     u1107:
  1737  068B  0BF6               	decfsz	??_lcd_init,f
  1738  068C  2E8B               	goto	u1107
  1739  068D  0BF7               	decfsz	??_lcd_init+1,f
  1740  068E  2E8B               	goto	u1107
  1741  068F  2E90               	nop2
  1742  0690                     l1429:
  1743                           
  1744                           ;../Counter0_bai1.X/lcd.c: 257:  RD1 = 0;
  1745  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0692  1088               	bcf	8,1	;volatile
  1748  0693                     l1431:
  1749                           
  1750                           ;../Counter0_bai1.X/lcd.c: 258:  RD2 = 0;
  1751  0693  1108               	bcf	8,2	;volatile
  1752  0694                     l1433:
  1753                           
  1754                           ;../Counter0_bai1.X/lcd.c: 259:  RD3 = 0;
  1755  0694  1188               	bcf	8,3	;volatile
  1756  0695                     l1435:
  1757                           
  1758                           ;../Counter0_bai1.X/lcd.c: 261:  lcd_put_nibble(3);
  1759  0695  3003               	movlw	3
  1760  0696  120A  118A  24D8  120A  118A  	fcall	_lcd_put_nibble
  1761  069B                     l1437:
  1762                           
  1763                           ;../Counter0_bai1.X/lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1764  069B  300D               	movlw	13
  1765  069C  00F7               	movwf	??_lcd_init+1
  1766  069D  30FB               	movlw	251
  1767  069E  00F6               	movwf	??_lcd_init
  1768  069F                     u1117:
  1769  069F  0BF6               	decfsz	??_lcd_init,f
  1770  06A0  2E9F               	goto	u1117
  1771  06A1  0BF7               	decfsz	??_lcd_init+1,f
  1772  06A2  2E9F               	goto	u1117
  1773  06A3  2EA4               	nop2
  1774                           
  1775                           ;../Counter0_bai1.X/lcd.c: 263:  lcd_put_nibble(3);
  1776  06A4  3003               	movlw	3
  1777  06A5  120A  118A  24D8  120A  118A  	fcall	_lcd_put_nibble
  1778  06AA                     l1439:
  1779                           
  1780                           ;../Counter0_bai1.X/lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1781  06AA  300D               	movlw	13
  1782  06AB  00F7               	movwf	??_lcd_init+1
  1783  06AC  30FB               	movlw	251
  1784  06AD  00F6               	movwf	??_lcd_init
  1785  06AE                     u1127:
  1786  06AE  0BF6               	decfsz	??_lcd_init,f
  1787  06AF  2EAE               	goto	u1127
  1788  06B0  0BF7               	decfsz	??_lcd_init+1,f
  1789  06B1  2EAE               	goto	u1127
  1790  06B2  2EB3               	nop2
  1791  06B3                     l1441:
  1792                           
  1793                           ;../Counter0_bai1.X/lcd.c: 265:  lcd_put_nibble(3);
  1794  06B3  3003               	movlw	3
  1795  06B4  120A  118A  24D8  120A  118A  	fcall	_lcd_put_nibble
  1796                           
  1797                           ;../Counter0_bai1.X/lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1798  06B9  300D               	movlw	13
  1799  06BA  00F7               	movwf	??_lcd_init+1
  1800  06BB  30FB               	movlw	251
  1801  06BC  00F6               	movwf	??_lcd_init
  1802  06BD                     u1137:
  1803  06BD  0BF6               	decfsz	??_lcd_init,f
  1804  06BE  2EBD               	goto	u1137
  1805  06BF  0BF7               	decfsz	??_lcd_init+1,f
  1806  06C0  2EBD               	goto	u1137
  1807  06C1  2EC2               	nop2
  1808  06C2                     l1443:
  1809                           
  1810                           ;../Counter0_bai1.X/lcd.c: 268:  lcd_put_nibble(2);
  1811  06C2  3002               	movlw	2
  1812  06C3  120A  118A  24D8  120A  118A  	fcall	_lcd_put_nibble
  1813  06C8                     l1445:	
  1814                           ;../Counter0_bai1.X/lcd.c: 269:  while(lcd_busy());
  1815                           
  1816  06C8  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1817  06CD  3A00               	xorlw	0
  1818  06CE  1D03               	skipz
  1819  06CF  2ED1               	goto	u921
  1820  06D0  2ED2               	goto	u920
  1821  06D1                     u921:
  1822  06D1  2EC8               	goto	l1445
  1823  06D2                     u920:
  1824  06D2                     l1447:
  1825                           
  1826                           ;../Counter0_bai1.X/lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1827  06D2  3028               	movlw	40
  1828  06D3  00F6               	movwf	??_lcd_init
  1829  06D4  0876               	movf	??_lcd_init,w
  1830  06D5  00F3               	movwf	lcd_put_byte@b
  1831  06D6  3000               	movlw	0
  1832  06D7  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  1833  06DC                     l1449:	
  1834                           ;../Counter0_bai1.X/lcd.c: 272:  while(lcd_busy());
  1835                           
  1836  06DC  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1837  06E1  3A00               	xorlw	0
  1838  06E2  1D03               	skipz
  1839  06E3  2EE5               	goto	u931
  1840  06E4  2EE6               	goto	u930
  1841  06E5                     u931:
  1842  06E5  2EDC               	goto	l1449
  1843  06E6                     u930:
  1844  06E6                     l1451:
  1845                           
  1846                           ;../Counter0_bai1.X/lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1847  06E6  300C               	movlw	12
  1848  06E7  00F6               	movwf	??_lcd_init
  1849  06E8  0876               	movf	??_lcd_init,w
  1850  06E9  00F3               	movwf	lcd_put_byte@b
  1851  06EA  3000               	movlw	0
  1852  06EB  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  1853  06F0                     l1453:	
  1854                           ;../Counter0_bai1.X/lcd.c: 275:  while(lcd_busy());
  1855                           
  1856  06F0  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1857  06F5  3A00               	xorlw	0
  1858  06F6  1D03               	skipz
  1859  06F7  2EF9               	goto	u941
  1860  06F8  2EFA               	goto	u940
  1861  06F9                     u941:
  1862  06F9  2EF0               	goto	l1453
  1863  06FA                     u940:
  1864  06FA                     l1455:
  1865                           
  1866                           ;../Counter0_bai1.X/lcd.c: 277:  lcd_put_byte(0,0x01);
  1867  06FA  01F3               	clrf	lcd_put_byte@b
  1868  06FB  0AF3               	incf	lcd_put_byte@b,f
  1869  06FC  3000               	movlw	0
  1870  06FD  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  1871  0702                     l1457:	
  1872                           ;../Counter0_bai1.X/lcd.c: 278:  while(lcd_busy());
  1873                           
  1874  0702  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1875  0707  3A00               	xorlw	0
  1876  0708  1D03               	skipz
  1877  0709  2F0B               	goto	u951
  1878  070A  2F0C               	goto	u950
  1879  070B                     u951:
  1880  070B  2F02               	goto	l1457
  1881  070C                     u950:
  1882  070C                     l1459:
  1883                           
  1884                           ;../Counter0_bai1.X/lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1885  070C  3006               	movlw	6
  1886  070D  00F6               	movwf	??_lcd_init
  1887  070E  0876               	movf	??_lcd_init,w
  1888  070F  00F3               	movwf	lcd_put_byte@b
  1889  0710  3000               	movlw	0
  1890  0711  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  1891  0716                     l1461:	
  1892                           ;../Counter0_bai1.X/lcd.c: 281:  while(lcd_busy());
  1893                           
  1894  0716  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  1895  071B  3A00               	xorlw	0
  1896  071C  1D03               	skipz
  1897  071D  2F1F               	goto	u961
  1898  071E  2F20               	goto	u960
  1899  071F                     u961:
  1900  071F  2F16               	goto	l1461
  1901  0720                     u960:
  1902  0720                     l172:
  1903  0720  0008               	return
  1904  0721                     __end_of_lcd_init:
  1905                           
  1906                           	psect	text8
  1907  03F2                     __ptext8:	
  1908 ;; *************** function _getLengthArr *****************
  1909 ;; Defined at:
  1910 ;;		line 38 in file "bai2.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  character       1    wreg     PTR unsigned char 
  1913 ;;		 -> main@your_name(17), 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  character       1    2[COMMON] PTR unsigned char 
  1916 ;;		 -> main@your_name(17), 
  1917 ;;  i               2    3[COMMON] unsigned int 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  2    0[COMMON] unsigned int 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         2       0       0       0       0
  1928 ;;      Locals:         3       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0
  1930 ;;      Totals:         5       0       0       0       0
  1931 ;;Total ram usage:        5 bytes
  1932 ;; Hardware stack levels used: 2
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function _getLengthArr
  1942  03F2                     _getLengthArr:
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1946                           ;getLengthArr@character stored from wreg
  1947  03F2  00F2               	movwf	getLengthArr@character
  1948  03F3                     l1395:
  1949                           
  1950                           ;bai2.c: 39:     unsigned int i = 0;
  1951  03F3  01F3               	clrf	getLengthArr@i
  1952  03F4  01F4               	clrf	getLengthArr@i+1
  1953  03F5                     l1397:
  1954                           
  1955                           ;bai2.c: 41:         if(character[i] == '\n')
  1956  03F5  0873               	movf	getLengthArr@i,w
  1957  03F6  0772               	addwf	getLengthArr@character,w
  1958  03F7  0084               	movwf	4
  1959  03F8  120A  118A  2003  120A  118A  	fcall	stringdir
  1960  03FD  3A0A               	xorlw	10
  1961  03FE  1D03               	skipz
  1962  03FF  2C01               	goto	u911
  1963  0400  2C02               	goto	u910
  1964  0401                     u911:
  1965  0401  2C03               	goto	l1401
  1966  0402                     u910:
  1967  0402  2C0A               	goto	l1403
  1968  0403                     l1401:
  1969                           
  1970                           ;bai2.c: 45:         i++;
  1971  0403  3001               	movlw	1
  1972  0404  07F3               	addwf	getLengthArr@i,f
  1973  0405  1803               	skipnc
  1974  0406  0AF4               	incf	getLengthArr@i+1,f
  1975  0407  3000               	movlw	0
  1976  0408  07F4               	addwf	getLengthArr@i+1,f
  1977  0409  2BF5               	goto	l1397
  1978  040A                     l1403:
  1979                           
  1980                           ;bai2.c: 47:     return i;
  1981  040A  0874               	movf	getLengthArr@i+1,w
  1982  040B  00F1               	movwf	?_getLengthArr+1
  1983  040C  0873               	movf	getLengthArr@i,w
  1984  040D  00F0               	movwf	?_getLengthArr
  1985  040E                     l57:
  1986  040E  0008               	return
  1987  040F                     __end_of_getLengthArr:
  1988                           
  1989                           	psect	text9
  1990  03D7                     __ptext9:	
  1991 ;; *************** function _declarePort *****************
  1992 ;; Defined at:
  1993 ;;		line 50 in file "bai2.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		status,2
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _declarePort
  2022  03D7                     _declarePort:
  2023  03D7                     l1407:	
  2024                           ;incstack = 0
  2025                           ; Regs used in _declarePort: [status,2]
  2026                           
  2027                           
  2028                           ;bai2.c: 51:     ANSEL = ANSELH = 0;
  2029  03D7  1683               	bsf	3,5	;RP0=1, select bank3
  2030  03D8  1703               	bsf	3,6	;RP1=1, select bank3
  2031  03D9  0189               	clrf	9	;volatile
  2032  03DA  0188               	clrf	8	;volatile
  2033                           
  2034                           ;bai2.c: 52:     TMR1 = 0;
  2035  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2036  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2037  03DD  018E               	clrf	14	;volatile
  2038  03DE  018F               	clrf	15	;volatile
  2039  03DF                     l1409:
  2040                           
  2041                           ;bai2.c: 53:     TMR1IF = 0;
  2042  03DF  100C               	bcf	12,0	;volatile
  2043  03E0                     l1411:
  2044                           
  2045                           ;bai2.c: 54:     TMR1CS = 1;
  2046  03E0  1490               	bsf	16,1	;volatile
  2047  03E1                     l1413:
  2048                           
  2049                           ;bai2.c: 55:     T1OSCEN = 0;
  2050  03E1  1190               	bcf	16,3	;volatile
  2051  03E2                     l1415:
  2052                           
  2053                           ;bai2.c: 56:     GIE = PEIE = TMR1IE = 0;
  2054  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2055  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2056  03E4  100C               	bcf	12,0	;volatile
  2057  03E5  130B               	bcf	11,6	;volatile
  2058  03E6  138B               	bcf	11,7	;volatile
  2059  03E7                     l1417:
  2060                           
  2061                           ;bai2.c: 57:     T1CKPS1 = 0;
  2062  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2063  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2064  03E9  1290               	bcf	16,5	;volatile
  2065  03EA                     l1419:
  2066                           
  2067                           ;bai2.c: 58:     T1CKPS0 = 0;
  2068  03EA  1210               	bcf	16,4	;volatile
  2069  03EB                     l1421:
  2070                           
  2071                           ;bai2.c: 59:     TRISC0 = 1;
  2072  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2073  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2074  03ED  1407               	bsf	7,0	;volatile
  2075  03EE                     l1423:
  2076                           
  2077                           ;bai2.c: 60:     TMR1ON = 1;
  2078  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2079  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2080  03F0  1410               	bsf	16,0	;volatile
  2081  03F1                     l60:
  2082  03F1  0008               	return
  2083  03F2                     __end_of_declarePort:
  2084                           
  2085                           	psect	text10
  2086  0560                     __ptext10:	
  2087 ;; *************** function _addCharSpecial *****************
  2088 ;; Defined at:
  2089 ;;		line 27 in file "bai2.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  character       1    wreg     PTR unsigned char 
  2092 ;;		 -> main@special_name_title(9), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  character       1    9[COMMON] PTR unsigned char 
  2095 ;;		 -> main@special_name_title(9), 
  2096 ;;  i               2    7[COMMON] unsigned int 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       0       0       0       0
  2107 ;;      Locals:         3       0       0       0       0
  2108 ;;      Temps:          1       0       0       0       0
  2109 ;;      Totals:         4       0       0       0       0
  2110 ;;Total ram usage:        4 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 2
  2113 ;; This function calls:
  2114 ;;		_lcd_busy
  2115 ;;		_lcd_put_byte
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _addCharSpecial
  2123  0560                     _addCharSpecial:
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2127                           ;addCharSpecial@character stored from wreg
  2128  0560  00F9               	movwf	addCharSpecial@character
  2129  0561                     l1381:
  2130                           
  2131                           ;bai2.c: 28:     unsigned int i = 0;
  2132  0561  01F7               	clrf	addCharSpecial@i
  2133  0562  01F8               	clrf	addCharSpecial@i+1
  2134  0563                     l1383:
  2135                           
  2136                           ;bai2.c: 29:     lcd_put_byte(0, 0x40);
  2137  0563  3040               	movlw	64
  2138  0564  00F6               	movwf	??_addCharSpecial
  2139  0565  0876               	movf	??_addCharSpecial,w
  2140  0566  00F3               	movwf	lcd_put_byte@b
  2141  0567  3000               	movlw	0
  2142  0568  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  2143  056D                     l1385:	
  2144                           ;bai2.c: 30:     while(lcd_busy());
  2145                           
  2146  056D  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  2147  0572  3A00               	xorlw	0
  2148  0573  1D03               	skipz
  2149  0574  2D76               	goto	u881
  2150  0575  2D77               	goto	u880
  2151  0576                     u881:
  2152  0576  2D6D               	goto	l1385
  2153  0577                     u880:
  2154  0577  2D99               	goto	l1393
  2155  0578                     l1387:
  2156                           
  2157                           ;bai2.c: 32:         lcd_put_byte(1, character[i]);
  2158  0578  0877               	movf	addCharSpecial@i,w
  2159  0579  0779               	addwf	addCharSpecial@character,w
  2160  057A  0084               	movwf	4
  2161  057B  120A  118A  2003  120A  118A  	fcall	stringdir
  2162  0580  00F6               	movwf	??_addCharSpecial
  2163  0581  0876               	movf	??_addCharSpecial,w
  2164  0582  00F3               	movwf	lcd_put_byte@b
  2165  0583  3001               	movlw	1
  2166  0584  120A  118A  2465  120A  118A  	fcall	_lcd_put_byte
  2167  0589                     l1389:	
  2168                           ;bai2.c: 33:         while(lcd_busy());
  2169                           
  2170  0589  120A  118A  2435  120A  118A  	fcall	_lcd_busy
  2171  058E  3A00               	xorlw	0
  2172  058F  1D03               	skipz
  2173  0590  2D92               	goto	u891
  2174  0591  2D93               	goto	u890
  2175  0592                     u891:
  2176  0592  2D89               	goto	l1389
  2177  0593                     u890:
  2178  0593                     l1391:
  2179                           
  2180                           ;bai2.c: 34:         i++;
  2181  0593  3001               	movlw	1
  2182  0594  07F7               	addwf	addCharSpecial@i,f
  2183  0595  1803               	skipnc
  2184  0596  0AF8               	incf	addCharSpecial@i+1,f
  2185  0597  3000               	movlw	0
  2186  0598  07F8               	addwf	addCharSpecial@i+1,f
  2187  0599                     l1393:
  2188                           
  2189                           ;bai2.c: 31:     while(character[i] != 0x99) {
  2190  0599  0877               	movf	addCharSpecial@i,w
  2191  059A  0779               	addwf	addCharSpecial@character,w
  2192  059B  0084               	movwf	4
  2193  059C  120A  118A  2003  120A  118A  	fcall	stringdir
  2194  05A1  3A99               	xorlw	153
  2195  05A2  1D03               	skipz
  2196  05A3  2DA5               	goto	u901
  2197  05A4  2DA6               	goto	u900
  2198  05A5                     u901:
  2199  05A5  2D78               	goto	l1387
  2200  05A6                     u900:
  2201  05A6                     l50:
  2202  05A6  0008               	return
  2203  05A7                     __end_of_addCharSpecial:
  2204                           
  2205                           	psect	text11
  2206  0465                     __ptext11:	
  2207 ;; *************** function _lcd_put_byte *****************
  2208 ;; Defined at:
  2209 ;;		line 134 in file "../Counter0_bai1.X/lcd.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  rs              1    wreg     unsigned char 
  2212 ;;  b               1    3[COMMON] unsigned char 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  rs              1    5[COMMON] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         1       0       0       0       0
  2225 ;;      Locals:         1       0       0       0       0
  2226 ;;      Temps:          1       0       0       0       0
  2227 ;;      Totals:         3       0       0       0       0
  2228 ;;Total ram usage:        3 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 1
  2231 ;; This function calls:
  2232 ;;		_lcd_put_nibble
  2233 ;; This function is called by:
  2234 ;;		_addCharSpecial
  2235 ;;		_lcd_gotoxy
  2236 ;;		_lcd_putc
  2237 ;;		_lcd_init
  2238 ;;		_lcd_ShiftLeft
  2239 ;;		_lcd_ShiftRight
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           
  2244                           ;psect for function _lcd_put_byte
  2245  0465                     _lcd_put_byte:
  2246                           
  2247                           ;incstack = 0
  2248                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2249                           ;lcd_put_byte@rs stored from wreg
  2250  0465  00F5               	movwf	lcd_put_byte@rs
  2251  0466                     l1259:
  2252                           
  2253                           ;../Counter0_bai1.X/lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);../
      +                          Counter0_bai1.X/lcd.c: 135: {;../Counter0_bai1.X/lcd.c: 139:  TRISD4 = 0;
  2254  0466  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0467  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0468  1208               	bcf	8,4	;volatile
  2257                           
  2258                           ;../Counter0_bai1.X/lcd.c: 140:  TRISD5 = 0;
  2259  0469  1288               	bcf	8,5	;volatile
  2260                           
  2261                           ;../Counter0_bai1.X/lcd.c: 141:  TRISD6 = 0;
  2262  046A  1308               	bcf	8,6	;volatile
  2263                           
  2264                           ;../Counter0_bai1.X/lcd.c: 142:  TRISD7 = 0;
  2265  046B  1388               	bcf	8,7	;volatile
  2266  046C                     l1261:
  2267                           
  2268                           ;../Counter0_bai1.X/lcd.c: 144:  if(rs)
  2269  046C  0875               	movf	lcd_put_byte@rs,w
  2270  046D  1903               	btfsc	3,2
  2271  046E  2C70               	goto	u681
  2272  046F  2C71               	goto	u680
  2273  0470                     u681:
  2274  0470  2C75               	goto	l120
  2275  0471                     u680:
  2276  0471                     l1263:
  2277                           
  2278                           ;../Counter0_bai1.X/lcd.c: 145:   RD1 = 1;
  2279  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0473  1488               	bsf	8,1	;volatile
  2282  0474  2C78               	goto	l1265
  2283  0475                     l120:	
  2284                           ;../Counter0_bai1.X/lcd.c: 146:  else
  2285                           
  2286                           
  2287                           ;../Counter0_bai1.X/lcd.c: 147:   RD1 = 0;
  2288  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0477  1088               	bcf	8,1	;volatile
  2291  0478                     l1265:
  2292                           
  2293                           ;../Counter0_bai1.X/lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2294  0478  3006               	movlw	6
  2295  0479  00F4               	movwf	??_lcd_put_byte
  2296  047A                     u1147:
  2297  047A  0BF4               	decfsz	??_lcd_put_byte,f
  2298  047B  2C7A               	goto	u1147
  2299  047C  0000               	nop
  2300  047D                     l1267:
  2301                           
  2302                           ;../Counter0_bai1.X/lcd.c: 150:  RD2 = 0;
  2303  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2304  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2305  047F  1108               	bcf	8,2	;volatile
  2306                           
  2307                           ;../Counter0_bai1.X/lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2308  0480  3006               	movlw	6
  2309  0481  00F4               	movwf	??_lcd_put_byte
  2310  0482                     u1157:
  2311  0482  0BF4               	decfsz	??_lcd_put_byte,f
  2312  0483  2C82               	goto	u1157
  2313  0484  0000               	nop
  2314  0485                     l1269:
  2315                           
  2316                           ;../Counter0_bai1.X/lcd.c: 153:  RD3 = 0;
  2317  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0487  1188               	bcf	8,3	;volatile
  2320  0488                     l1271:
  2321                           
  2322                           ;../Counter0_bai1.X/lcd.c: 155:  lcd_put_nibble(b >> 4);
  2323  0488  0873               	movf	lcd_put_byte@b,w
  2324  0489  00F4               	movwf	??_lcd_put_byte
  2325  048A  3004               	movlw	4
  2326  048B                     u695:
  2327  048B  1003               	clrc
  2328  048C  0CF4               	rrf	??_lcd_put_byte,f
  2329  048D  3EFF               	addlw	-1
  2330  048E  1D03               	skipz
  2331  048F  2C8B               	goto	u695
  2332  0490  0874               	movf	??_lcd_put_byte,w
  2333  0491  120A  118A  24D8  120A  118A  	fcall	_lcd_put_nibble
  2334  0496                     l1273:
  2335                           
  2336                           ;../Counter0_bai1.X/lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2337  0496  0873               	movf	lcd_put_byte@b,w
  2338  0497  390F               	andlw	15
  2339  0498  120A  118A  24D8  120A  118A  	fcall	_lcd_put_nibble
  2340  049D                     l122:
  2341  049D  0008               	return
  2342  049E                     __end_of_lcd_put_byte:
  2343                           
  2344                           	psect	text12
  2345  04D8                     __ptext12:	
  2346 ;; *************** function _lcd_put_nibble *****************
  2347 ;; Defined at:
  2348 ;;		line 103 in file "../Counter0_bai1.X/lcd.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  b               1    wreg     unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  b               1    1[COMMON] unsigned char 
  2353 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         2       0       0       0       0
  2365 ;;      Temps:          1       0       0       0       0
  2366 ;;      Totals:         3       0       0       0       0
  2367 ;;Total ram usage:        3 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_lcd_put_byte
  2373 ;;		_lcd_init
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _lcd_put_nibble
  2379  04D8                     _lcd_put_nibble:
  2380                           
  2381                           ;incstack = 0
  2382                           ; Regs used in _lcd_put_nibble: [wreg]
  2383                           ;lcd_put_nibble@b stored from wreg
  2384  04D8  00F1               	movwf	lcd_put_nibble@b
  2385  04D9                     l1243:
  2386                           
  2387                           ;../Counter0_bai1.X/lcd.c: 103: void lcd_put_nibble(unsigned char b);../Counter0_bai1.X/
      +                          lcd.c: 104: {;../Counter0_bai1.X/lcd.c: 106:  BYTE_VAL temp;;../Counter0_bai1.X/lcd.c: 1
      +                          09:  TRISD4 = 0;
  2388  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  2389  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  2390  04DB  1208               	bcf	8,4	;volatile
  2391                           
  2392                           ;../Counter0_bai1.X/lcd.c: 110:  TRISD5 = 0;
  2393  04DC  1288               	bcf	8,5	;volatile
  2394                           
  2395                           ;../Counter0_bai1.X/lcd.c: 111:  TRISD6 = 0;
  2396  04DD  1308               	bcf	8,6	;volatile
  2397                           
  2398                           ;../Counter0_bai1.X/lcd.c: 112:  TRISD7 = 0;
  2399  04DE  1388               	bcf	8,7	;volatile
  2400  04DF                     l1245:
  2401                           
  2402                           ;../Counter0_bai1.X/lcd.c: 114:  temp.Val = b;
  2403  04DF  0871               	movf	lcd_put_nibble@b,w
  2404  04E0  00F0               	movwf	??_lcd_put_nibble
  2405  04E1  0870               	movf	??_lcd_put_nibble,w
  2406  04E2  00F2               	movwf	lcd_put_nibble@temp
  2407  04E3                     l1247:
  2408                           
  2409                           ;../Counter0_bai1.X/lcd.c: 116:  RD4 = temp.bits.b0;
  2410  04E3  1872               	btfsc	lcd_put_nibble@temp,0
  2411  04E4  2CE6               	goto	u601
  2412  04E5  2CEA               	goto	u600
  2413  04E6                     u601:
  2414  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2415  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2416  04E8  1608               	bsf	8,4	;volatile
  2417  04E9  2CED               	goto	u614
  2418  04EA                     u600:
  2419  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2420  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2421  04EC  1208               	bcf	8,4	;volatile
  2422  04ED                     u614:
  2423  04ED                     l1249:
  2424                           
  2425                           ;../Counter0_bai1.X/lcd.c: 117:  RD5 = temp.bits.b1;
  2426  04ED  18F2               	btfsc	lcd_put_nibble@temp,1
  2427  04EE  2CF0               	goto	u621
  2428  04EF  2CF4               	goto	u620
  2429  04F0                     u621:
  2430  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2431  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2432  04F2  1688               	bsf	8,5	;volatile
  2433  04F3  2CF7               	goto	u634
  2434  04F4                     u620:
  2435  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2436  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2437  04F6  1288               	bcf	8,5	;volatile
  2438  04F7                     u634:
  2439  04F7                     l1251:
  2440                           
  2441                           ;../Counter0_bai1.X/lcd.c: 118:  RD6 = temp.bits.b2;
  2442  04F7  1972               	btfsc	lcd_put_nibble@temp,2
  2443  04F8  2CFA               	goto	u641
  2444  04F9  2CFE               	goto	u640
  2445  04FA                     u641:
  2446  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2447  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2448  04FC  1708               	bsf	8,6	;volatile
  2449  04FD  2D01               	goto	u654
  2450  04FE                     u640:
  2451  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2452  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0500  1308               	bcf	8,6	;volatile
  2454  0501                     u654:
  2455  0501                     l1253:
  2456                           
  2457                           ;../Counter0_bai1.X/lcd.c: 119:  RD7 = temp.bits.b3;
  2458  0501  19F2               	btfsc	lcd_put_nibble@temp,3
  2459  0502  2D04               	goto	u661
  2460  0503  2D08               	goto	u660
  2461  0504                     u661:
  2462  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0506  1788               	bsf	8,7	;volatile
  2465  0507  2D0B               	goto	u674
  2466  0508                     u660:
  2467  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2469  050A  1388               	bcf	8,7	;volatile
  2470  050B                     u674:
  2471                           
  2472                           ;../Counter0_bai1.X/lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2473  050B  3006               	movlw	6
  2474  050C  00F0               	movwf	??_lcd_put_nibble
  2475  050D                     u1167:
  2476  050D  0BF0               	decfsz	??_lcd_put_nibble,f
  2477  050E  2D0D               	goto	u1167
  2478  050F  0000               	nop
  2479  0510                     l1255:
  2480                           
  2481                           ;../Counter0_bai1.X/lcd.c: 122:  RD3 = 1;
  2482  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0512  1588               	bsf	8,3	;volatile
  2485                           
  2486                           ;../Counter0_bai1.X/lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2487  0513  3006               	movlw	6
  2488  0514  00F0               	movwf	??_lcd_put_nibble
  2489  0515                     u1177:
  2490  0515  0BF0               	decfsz	??_lcd_put_nibble,f
  2491  0516  2D15               	goto	u1177
  2492  0517  0000               	nop
  2493  0518                     l1257:
  2494                           
  2495                           ;../Counter0_bai1.X/lcd.c: 124:  RD3 = 0;
  2496  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2498  051A  1188               	bcf	8,3	;volatile
  2499  051B                     l117:
  2500  051B  0008               	return
  2501  051C                     __end_of_lcd_put_nibble:
  2502                           
  2503                           	psect	text13
  2504  0435                     __ptext13:	
  2505 ;; *************** function _lcd_busy *****************
  2506 ;; Defined at:
  2507 ;;		line 18 in file "../Counter0_bai1.X/lcd.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  busy            1    1[COMMON] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      unsigned char 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       0       0       0       0
  2522 ;;      Locals:         1       0       0       0       0
  2523 ;;      Temps:          1       0       0       0       0
  2524 ;;      Totals:         2       0       0       0       0
  2525 ;;Total ram usage:        2 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_addCharSpecial
  2531 ;;		_lcd_gotoxy
  2532 ;;		_lcd_putc
  2533 ;;		_lcd_init
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _lcd_busy
  2539  0435                     _lcd_busy:
  2540  0435                     l1275:	
  2541                           ;incstack = 0
  2542                           ; Regs used in _lcd_busy: [wreg+status,2]
  2543                           
  2544                           
  2545                           ;../Counter0_bai1.X/lcd.c: 21: unsigned char busy;;../Counter0_bai1.X/lcd.c: 24:  TRISD4
      +                           = 1;
  2546  0435  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0436  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0437  1608               	bsf	8,4	;volatile
  2549                           
  2550                           ;../Counter0_bai1.X/lcd.c: 25:  TRISD5 = 1;
  2551  0438  1688               	bsf	8,5	;volatile
  2552                           
  2553                           ;../Counter0_bai1.X/lcd.c: 26:  TRISD6 = 1;
  2554  0439  1708               	bsf	8,6	;volatile
  2555                           
  2556                           ;../Counter0_bai1.X/lcd.c: 27:  TRISD7 = 1;
  2557  043A  1788               	bsf	8,7	;volatile
  2558                           
  2559                           ;../Counter0_bai1.X/lcd.c: 29:  RD2 = 1;
  2560  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2561  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2562  043D  1508               	bsf	8,2	;volatile
  2563                           
  2564                           ;../Counter0_bai1.X/lcd.c: 30:  RD1 = 0;
  2565  043E  1088               	bcf	8,1	;volatile
  2566  043F                     l1277:
  2567                           
  2568                           ;../Counter0_bai1.X/lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2569  043F  3006               	movlw	6
  2570  0440  00F0               	movwf	??_lcd_busy
  2571  0441                     u1187:
  2572  0441  0BF0               	decfsz	??_lcd_busy,f
  2573  0442  2C41               	goto	u1187
  2574  0443  0000               	nop
  2575  0444                     l1279:
  2576                           
  2577                           ;../Counter0_bai1.X/lcd.c: 32:  RD3 = 1;
  2578  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0446  1588               	bsf	8,3	;volatile
  2581                           
  2582                           ;../Counter0_bai1.X/lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2583  0447  3006               	movlw	6
  2584  0448  00F0               	movwf	??_lcd_busy
  2585  0449                     u1197:
  2586  0449  0BF0               	decfsz	??_lcd_busy,f
  2587  044A  2C49               	goto	u1197
  2588  044B  0000               	nop
  2589  044C                     l1281:
  2590                           
  2591                           ;../Counter0_bai1.X/lcd.c: 35:  busy = RD7;
  2592  044C  3000               	movlw	0
  2593  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2594  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2595  044F  1B88               	btfsc	8,7	;volatile
  2596  0450  3001               	movlw	1
  2597  0451  00F1               	movwf	lcd_busy@busy
  2598  0452                     l1283:
  2599                           
  2600                           ;../Counter0_bai1.X/lcd.c: 37:  RD3 = 0;
  2601  0452  1188               	bcf	8,3	;volatile
  2602  0453                     l1285:
  2603                           
  2604                           ;../Counter0_bai1.X/lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2605  0453  3006               	movlw	6
  2606  0454  00F0               	movwf	??_lcd_busy
  2607  0455                     u1207:
  2608  0455  0BF0               	decfsz	??_lcd_busy,f
  2609  0456  2C55               	goto	u1207
  2610  0457  0000               	nop
  2611  0458                     l1287:
  2612                           
  2613                           ;../Counter0_bai1.X/lcd.c: 39:  RD3 = 1;
  2614  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2616  045A  1588               	bsf	8,3	;volatile
  2617  045B                     l1289:
  2618                           
  2619                           ;../Counter0_bai1.X/lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2620  045B  3006               	movlw	6
  2621  045C  00F0               	movwf	??_lcd_busy
  2622  045D                     u1217:
  2623  045D  0BF0               	decfsz	??_lcd_busy,f
  2624  045E  2C5D               	goto	u1217
  2625  045F  0000               	nop
  2626  0460                     l1291:
  2627                           
  2628                           ;../Counter0_bai1.X/lcd.c: 41:  RD3 = 0;
  2629  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0462  1188               	bcf	8,3	;volatile
  2632  0463                     l1293:
  2633                           
  2634                           ;../Counter0_bai1.X/lcd.c: 43:  return busy;
  2635  0463  0871               	movf	lcd_busy@busy,w
  2636  0464                     l109:
  2637  0464  0008               	return
  2638  0465                     __end_of_lcd_busy:
  2639  007E                     btemp	set	126	;btemp
  2640  007E                     wtemp0	set	126
  2641                           
  2642                           	psect	config
  2643                           
  2644                           ;Config register CONFIG1 @ 0x2007
  2645                           ;	Oscillator Selection bits
  2646                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2647                           ;	Watchdog Timer Enable bit
  2648                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2649                           ;	Power-up Timer Enable bit
  2650                           ;	PWRTE = OFF, PWRT disabled
  2651                           ;	RE3/MCLR pin function select bit
  2652                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2653                           ;	Code Protection bit
  2654                           ;	CP = OFF, Program memory code protection is disabled
  2655                           ;	Data Code Protection bit
  2656                           ;	CPD = OFF, Data memory code protection is disabled
  2657                           ;	Brown Out Reset Selection bits
  2658                           ;	BOREN = OFF, BOR disabled
  2659                           ;	Internal External Switchover bit
  2660                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2661                           ;	Fail-Safe Clock Monitor Enabled bit
  2662                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2663                           ;	Low Voltage Programming Enable bit
  2664                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2665                           ;	In-Circuit Debugger Mode bit
  2666                           ;	DEBUG = 0x1, unprogrammed default
  2667  2007                     	org	8199
  2668  2007  20F2               	dw	8434
  2669                           
  2670                           ;Config register CONFIG2 @ 0x2008
  2671                           ;	Brown-out Reset Selection bit
  2672                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2673                           ;	Flash Program Memory Self Write Enable bits
  2674                           ;	WRT = OFF, Write protection off
  2675  2008                     	org	8200
  2676  2008  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    36
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 17
		 -> main@your_name(CODE[17]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 9
		 -> main@special_name_title(CODE[9]), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    _printf->_putch
    _putch->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    ___lwmod->___lwdiv
    _lcd_init->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10269
                                             12 BANK0      4     4      0
                     _addCharSpecial
                        _declarePort
                       _getLengthArr
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    3631
                                              0 BANK0     12    10      2
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0    2587
                                             13 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           4     3      1    1409
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (2) _getLengthArr                                         5     3      2     101
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1268
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _declarePort
   _getLengthArr
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 10 17:24:43 2021

                             pc 0002                              l50 05A6                              l60 03F1  
                            l57 040E          __end_of_lcd_put_nibble 051C                              fsr 0004  
               ?_addCharSpecial 0070                   ?_lcd_put_byte 0073                             l120 0475  
                           l122 049D                             l130 0434                             l109 0464  
                           l117 051B                             l311 07FB                             l172 0720  
                           l148 0602                             l199 03D6                             l587 055F  
                           l597 04D7                             _GIE 005F                             _RD1 0041  
                           _RD2 0042                             _RD3 0043                             _RD4 0044  
                           _RD5 0045                             _RD6 0046                             _RD7 0047  
                           u600 04EA                             u601 04E6                             u620 04F4  
                           u700 0415                             u621 04F0                             u701 0414  
                           u614 04ED                             u710 0434                             u711 0433  
                           u640 04FE                             u720 05BB                             u641 04FA  
                           u721 05BA                             u634 04F7                             u810 055B  
                           u730 05D9                             u811 055A                             u731 05D8  
                           u660 0508                             u900 05A6                             u820 04A4  
                           u740 05EE                             u661 0504                             u901 05A5  
                           u805 054F                             u821 04A3                             u741 05ED  
                           u654 0501                             u910 0402                             u750 0524  
                           u911 0401                             u751 0523                             u680 0471  
                           u920 06D2                             u840 04B6                             u681 0470  
                           u921 06D1                             u841 04B5                             u674 050B  
                           u930 06E6                             u770 0536                             u850 04C0  
                           u931 06E5                             u771 0535                             u851 04BF  
                           u835 04A8                             u940 06FA                             u941 06F9  
                           u765 0528                             u950 070C                             u790 0547  
                           u870 04D3                             u695 048B                             u951 070B  
                           u791 0546                             u871 04D2                             u855 04BC  
                           u880 0577                             u960 0720                             u881 0576  
                           u961 071F                             u785 0537                             u865 04C7  
                           u890 0593                             u970 072F                             u891 0592  
                           u795 0543                             u971 072E                             u980 0764  
                           u981 0763                             u990 078A                             u991 0789  
                           u995 0786                             fsr0 0004                             indf 0000  
                          l1301 041A                            l1303 041B                            l1311 05A9  
                          l1401 0403                            l1305 041F                            l1321 05DA  
                          l1313 05B1                            l1251 04F7                            l1243 04D9  
                          l1411 03E0                            l1403 040A                            l1307 042A  
                          l1323 05E4                            l1315 05BC                            l1331 03D0  
                          l1253 0501                            l1245 04DF                            l1261 046C  
                          l1421 03EB                            l1413 03E1                            l1341 052E  
                          l1333 051C                            l1317 05C5                            l1325 05EF  
                          l1309 05A8                            l1501 07A1                            l1255 0510  
                          l1247 04E3                            l1271 0488                            l1263 0471  
                          l1423 03EE                            l1415 03E2                            l1407 03D7  
                          l1431 0693                            l1351 054E                            l1343 0532  
                          l1335 051E                            l1319 05CF                            l1503 07A8  
                          l1281 044C                            l1257 0518                            l1249 04ED  
                          l1273 0496                            l1265 0478                            l1417 03E7  
                          l1409 03DF                            l1441 06B3                            l1433 0694  
                          l1425 067E                            l1353 0555                            l1345 0536  
                          l1337 0524                            l1361 04A4                            l1505 07DC  
                          l1521 0608                            l1291 0460                            l1283 0452  
                          l1275 0435                            l1267 047D                            l1259 0466  
                          l1419 03EA                            l1451 06E6                            l1443 06C2  
                          l1435 0695                            l1427 0687                            l1347 0547  
                          l1339 0527                            l1355 055B                            l1371 04C0  
                          l1363 04A7                            l1507 07E7                            l1531 0620  
                          l1523 0608                            l1293 0463                            l1285 0453  
                          l1277 043F                            l1269 0485                            l1381 0561  
                          l1461 0716                            l1453 06F0                            l1445 06C8  
                          l1437 069B                            l1429 0690                            l1349 054D  
                          l1373 04C6                            l1365 04AE                            l1541 0644  
                          l1533 0625                            l1525 060E                            l1517 0603  
                          l1287 0458                            l1279 0444                            l1391 0593  
                          l1383 0563                            l1455 06FA                            l1447 06D2  
                          l1439 06AA                            l1375 04CD                            l1367 04B2  
                          l1359 049E                            l1631 0749                            l1463 0724  
                          l1551 066E                            l1543 0647                            l1535 062B  
                          l1527 0613                            l1519 0608                            l1289 045B  
                          l1393 0599                            l1385 056D                            l1457 0702  
                          l1449 06DC                            l1369 04B6                            l1377 04D3  
                          l1297 0410                            l1633 05F7                            l1481 0764  
                          l1473 0737                            l1465 0729                            l1553 067A  
                          l1545 0654                            l1537 0631                            l1529 061E  
                          l1387 0578                            l1395 03F3                            l1459 070C  
                          l1299 0415                            l1491 076F                            l1483 0768  
                          l1475 0754                            l1467 072F                            l1547 065C  
                          l1539 0638                            l1389 0589                            l1397 03F5  
                          l1485 076D                            l1477 075C                            l1469 0736  
                          l1549 0666                            l1495 078B                            l1479 0760  
                          l1497 0795                            l1499 079B                            STR_1 0030  
                          STR_2 002D                            u1000 0795                            u1001 0794  
                          u1010 079B                            u1011 079A                            u1020 07E7  
                          u1021 07E6                            u1030 07FB                            u1031 07FA  
                          u1040 061E                            u1041 061D                            u1050 0666  
                          u1107 068B                            u1051 0665                            u1117 069F  
                          u1207 0455                            u1127 06AE                            u1055 0662  
                          u1217 045D                            u1137 06BD                            u1147 047A  
                          u1157 0482                            u1167 050D                            u1177 0515  
                          u1187 0441                            u1197 0449                            _PEIE 005E  
                          _TMR1 000E                            _main 0603                    lcd_busy@busy 0071  
                          btemp 007E                            start 0000                 ?_lcd_put_nibble 0070  
                ??_lcd_put_byte 0074                           ?_main 0070           getLengthArr@character 0072  
                         _ANSEL 0188                 __end_of___lwdiv 0560                 __end_of___lwmod 04D8  
          __size_of_declarePort 001B                 __end_of_dpowers 0013                           _putch 03CF  
                         main@i 002E                           pclath 000A                           status 0003  
                         wtemp0 007E                 __initialization 07FC            __end_of_getLengthArr 040F  
                  __end_of_main 067E                   lcd_gotoxy@col 0078                   lcd_gotoxy@row 0076  
            lcd_put_nibble@temp 0072                          ??_main 007E                          ?_putch 0070  
                        _ANSELH 0189                          _TMR1IE 0460                          _TMR1IF 0060  
                        _TMR1CS 0081                          _TMR1ON 0080                          _TRISC0 0438  
                        _TRISD1 0441                          _TRISD2 0442                          _TRISD3 0443  
                        _TRISD4 0444                          _TRISD5 0445                          _TRISD6 0446  
                        _TRISD7 0447                __end_of_lcd_busy 0465                __end_of_lcd_init 0721  
              __end_of_lcd_putc 0603                       ??___lwdiv 0074                       ??___lwmod 007C  
                        _printf 0721                   lcd_put_byte@b 0073                          putch@c 007D  
       __end_of__initialization 07FC            __end_of_lcd_put_byte 049E  __end_ofmain@special_name_title 002D  
              ??_addCharSpecial 0076                  __pcstackCOMMON 0070                   main@your_name 0013  
                 __end_of_putch 03D7               lcd_gotoxy@address 0079                         ??_putch 007D  
         __size_of_getLengthArr 001D                ??_lcd_put_nibble 0070                      __pmaintext 0603  
                       ?_printf 0020                         _T1CKPS0 0084                         _T1CKPS1 0085  
                       _T1OSCEN 0083                      _lcd_gotoxy 040F                    _getLengthArr 03F2  
                     ?_lcd_busy 0070                       ?_lcd_init 0070                       ?_lcd_putc 0070  
                    __stringtab 0003                         ___lwdiv 051C                         ___lwmod 049E  
       addCharSpecial@character 0079                         __ptext1 0721                         __ptext2 03CF  
                       __ptext3 05A7                         __ptext4 040F                         __ptext5 049E  
                       __ptext6 051C                         __ptext7 067E                         __ptext8 03F2  
                       __ptext9 03D7                 __size_of_printf 00DB                   ??_declarePort 0070  
                       _dpowers 0009           __size_of_lcd_put_byte 0039                      ??_lcd_busy 0070  
                    ??_lcd_init 0076                      ??_lcd_putc 007A            end_of_initialization 07FC  
                lcd_put_byte@rs 0075                         printf@c 002B                         printf@f 0028  
                  _lcd_put_byte 0465                     ?_lcd_gotoxy 0076             __end_of_declarePort 03F2  
                    main@length 002C                  __end_of_printf 07FC             start_initialization 07FC  
           __size_of_lcd_gotoxy 0026                        ??_printf 0022                     _declarePort 03D7  
                     ___latbits 0002                   __pcstackBANK0 0020                 addCharSpecial@i 0077  
             __size_of_lcd_busy 0030               __size_of_lcd_init 00A3               __size_of_lcd_putc 005C  
              ___lwdiv@dividend 0072                        ?___lwdiv 0070                        ?___lwmod 0078  
                     __pstrings 0003         __size_of_addCharSpecial 0047                ___lwdiv@quotient 0075  
                __size_of_putch 0008                     __stringbase 0008         __size_of_lcd_put_nibble 0044  
                    printf@flag 0026                      printf@prec 0027                   getLengthArr@i 0073  
                     lcd_putc@c 007C                    ??_lcd_gotoxy 0077           __end_ofmain@your_name 0024  
            __end_of_lcd_gotoxy 0435                __size_of___lwdiv 0044                __size_of___lwmod 003A  
            __end_of__stringtab 0009                 ___lwdiv@divisor 0070                 ___lwdiv@counter 0077  
                      __ptext10 0560                        __ptext11 0465                        __ptext12 04D8  
                      __ptext13 0435                        _lcd_busy 0435                        _lcd_init 067E  
                      _lcd_putc 05A7                   __size_of_main 007B                       printf@val 0029  
                _addCharSpecial 0560                    ?_declarePort 0070                 lcd_put_nibble@b 0071  
                 ?_getLengthArr 0070                ___lwmod@dividend 007A                       stringcode 0003  
                      printf@ap 0025          __end_of_addCharSpecial 05A7          main@special_name_title 0024  
                _lcd_put_nibble 04D8                 ___lwmod@divisor 0078                 ___lwmod@counter 007D  
                      stringdir 0003                        stringtab 0003                  ??_getLengthArr 0072  
